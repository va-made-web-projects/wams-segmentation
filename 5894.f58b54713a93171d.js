(self.webpackChunkapp=self.webpackChunkapp||[]).push([[5894],{4735:function(){(function(){"use strict";var lt;function Ot(v){var N=0;return function(){return N<v.length?{done:!1,value:v[N++]}:{done:!0}}}var Y="function"==typeof Object.defineProperties?Object.defineProperty:function(v,N,k){return v==Array.prototype||v==Object.prototype||(v[N]=k.value),v},cn=function ut(v){v=["object"==typeof globalThis&&globalThis,v,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var N=0;N<v.length;++N){var k=v[N];if(k&&k.Math==Math)return k}throw Error("Cannot find global object")}(this);function Qe(v,N){if(N)e:{var k=cn;v=v.split(".");for(var P=0;P<v.length-1;P++){var Z=v[P];if(!(Z in k))break e;k=k[Z]}(N=N(P=k[v=v[v.length-1]]))!=P&&null!=N&&Y(k,v,{configurable:!0,writable:!0,value:N})}}function yn(v){return(v={next:v})[Symbol.iterator]=function(){return this},v}function nt(v){var N=typeof Symbol<"u"&&Symbol.iterator&&v[Symbol.iterator];return N?N.call(v):{next:Ot(v)}}function Ke(v){if(!(v instanceof Array)){v=nt(v);for(var N,k=[];!(N=v.next()).done;)k.push(N.value);v=k}return v}Qe("Symbol",function(v){function k(pe,ne){this.g=pe,Y(this,"description",{configurable:!0,writable:!0,value:ne})}if(v)return v;k.prototype.toString=function(){return this.g};var P="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",Z=0;return function N(pe){if(this instanceof N)throw new TypeError("Symbol is not a constructor");return new k(P+(pe||"")+"_"+Z++,pe)}}),Qe("Symbol.iterator",function(v){if(v)return v;v=Symbol("Symbol.iterator");for(var N="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),k=0;k<N.length;k++){var P=cn[N[k]];"function"==typeof P&&"function"!=typeof P.prototype[v]&&Y(P.prototype,v,{configurable:!0,writable:!0,value:function(){return yn(Ot(this))}})}return v});var ze,wt="function"==typeof Object.create?Object.create:function(v){function N(){}return N.prototype=v,new N};if("function"==typeof Object.setPrototypeOf)ze=Object.setPrototypeOf;else{var ee;e:{var Re={};try{Re.__proto__={a:!0},ee=Re.a;break e}catch{}ee=!1}ze=ee?function(v,N){if(v.__proto__=N,v.__proto__!==N)throw new TypeError(v+" is not extensible");return v}:null}var be=ze;function xe(v,N){if(v.prototype=wt(N.prototype),v.prototype.constructor=v,be)be(v,N);else for(var k in N)if("prototype"!=k)if(Object.defineProperties){var P=Object.getOwnPropertyDescriptor(N,k);P&&Object.defineProperty(v,k,P)}else v[k]=N[k];v.ea=N.prototype}function We(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.s=this.m=0,this.j=null}function Ge(v){if(v.l)throw new TypeError("Generator is already running");v.l=!0}function Jt(v,N){v.j={U:N,V:!0},v.g=v.m||v.s}function $t(v,N,k){return v.g=k,{value:N}}function Mn(v){this.g=new We,this.h=v}function ks(v,N,k,P){try{var Z=N.call(v.g.i,k);if(!(Z instanceof Object))throw new TypeError("Iterator result "+Z+" is not an object");if(!Z.done)return v.g.l=!1,Z;var pe=Z.value}catch(ne){return v.g.i=null,Jt(v.g,ne),_t(v)}return v.g.i=null,P.call(v.g,pe),_t(v)}function _t(v){for(;v.g.g;)try{var N=v.h(v.g);if(N)return v.g.l=!1,{value:N.value,done:!1}}catch(k){v.g.h=void 0,Jt(v.g,k)}if(v.g.l=!1,v.g.j){if(N=v.g.j,v.g.j=null,N.V)throw N.U;return{value:N.return,done:!0}}return{value:void 0,done:!0}}function qt(v){this.next=function(N){return Ge(v.g),v.g.i?N=ks(v,v.g.i.next,N,v.g.o):(v.g.o(N),N=_t(v)),N},this.throw=function(N){return Ge(v.g),v.g.i?N=ks(v,v.g.i.throw,N,v.g.o):(Jt(v.g,N),N=_t(v)),N},this.return=function(N){return function er(v,N){Ge(v.g);var k=v.g.i;return k?ks(v,"return"in k?k.return:function(P){return{value:P,done:!0}},N,v.g.return):(v.g.return(N),_t(v))}(v,N)},this[Symbol.iterator]=function(){return this}}function ft(v,N){return N=new qt(new Mn(N)),be&&v.prototype&&be(N,v.prototype),N}We.prototype.o=function(v){this.h=v},We.prototype.return=function(v){this.j={return:v},this.g=this.s};var me="function"==typeof Object.assign?Object.assign:function(v,N){for(var k=1;k<arguments.length;k++){var P=arguments[k];if(P)for(var Z in P)Object.prototype.hasOwnProperty.call(P,Z)&&(v[Z]=P[Z])}return v};Qe("Object.assign",function(v){return v||me}),Qe("Promise",function(v){function N(ne){this.h=0,this.i=void 0,this.g=[],this.o=!1;var fe=this.j();try{ne(fe.resolve,fe.reject)}catch(_e){fe.reject(_e)}}function k(){this.g=null}function P(ne){return ne instanceof N?ne:new N(function(fe){fe(ne)})}if(v)return v;k.prototype.h=function(ne){if(null==this.g){this.g=[];var fe=this;this.i(function(){fe.l()})}this.g.push(ne)};var Z=cn.setTimeout;k.prototype.i=function(ne){Z(ne,0)},k.prototype.l=function(){for(;this.g&&this.g.length;){var ne=this.g;this.g=[];for(var fe=0;fe<ne.length;++fe){var _e=ne[fe];ne[fe]=null;try{_e()}catch(Be){this.j(Be)}}}this.g=null},k.prototype.j=function(ne){this.i(function(){throw ne})},N.prototype.j=function(){function ne(Be){return function(it){_e||(_e=!0,Be.call(fe,it))}}var fe=this,_e=!1;return{resolve:ne(this.C),reject:ne(this.l)}},N.prototype.C=function(ne){if(ne===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(ne instanceof N)this.F(ne);else{e:switch(typeof ne){case"object":var fe=null!=ne;break e;case"function":fe=!0;break e;default:fe=!1}fe?this.u(ne):this.m(ne)}},N.prototype.u=function(ne){var fe=void 0;try{fe=ne.then}catch(_e){return void this.l(_e)}"function"==typeof fe?this.G(fe,ne):this.m(ne)},N.prototype.l=function(ne){this.s(2,ne)},N.prototype.m=function(ne){this.s(1,ne)},N.prototype.s=function(ne,fe){if(0!=this.h)throw Error("Cannot settle("+ne+", "+fe+"): Promise already settled in state"+this.h);this.h=ne,this.i=fe,2===this.h&&this.D(),this.A()},N.prototype.D=function(){var ne=this;Z(function(){if(ne.B()){var fe=cn.console;typeof fe<"u"&&fe.error(ne.i)}},1)},N.prototype.B=function(){if(this.o)return!1;var ne=cn.CustomEvent,fe=cn.Event,_e=cn.dispatchEvent;return typeof _e>"u"||("function"==typeof ne?ne=new ne("unhandledrejection",{cancelable:!0}):"function"==typeof fe?ne=new fe("unhandledrejection",{cancelable:!0}):(ne=cn.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,ne),ne.promise=this,ne.reason=this.i,_e(ne))},N.prototype.A=function(){if(null!=this.g){for(var ne=0;ne<this.g.length;++ne)pe.h(this.g[ne]);this.g=null}};var pe=new k;return N.prototype.F=function(ne){var fe=this.j();ne.J(fe.resolve,fe.reject)},N.prototype.G=function(ne,fe){var _e=this.j();try{ne.call(fe,_e.resolve,_e.reject)}catch(Be){_e.reject(Be)}},N.prototype.then=function(ne,fe){function _e(Nt,mt){return"function"==typeof Nt?function(qe){try{Be(Nt(qe))}catch(ct){it(ct)}}:mt}var Be,it,Ht=new N(function(Nt,mt){Be=Nt,it=mt});return this.J(_e(ne,Be),_e(fe,it)),Ht},N.prototype.catch=function(ne){return this.then(void 0,ne)},N.prototype.J=function(ne,fe){function _e(){switch(Be.h){case 1:ne(Be.i);break;case 2:fe(Be.i);break;default:throw Error("Unexpected state: "+Be.h)}}var Be=this;null==this.g?pe.h(_e):this.g.push(_e),this.o=!0},N.resolve=P,N.reject=function(ne){return new N(function(fe,_e){_e(ne)})},N.race=function(ne){return new N(function(fe,_e){for(var Be=nt(ne),it=Be.next();!it.done;it=Be.next())P(it.value).J(fe,_e)})},N.all=function(ne){var fe=nt(ne),_e=fe.next();return _e.done?P([]):new N(function(Be,it){function Ht(qe){return function(ct){Nt[qe]=ct,0==--mt&&Be(Nt)}}var Nt=[],mt=0;do{Nt.push(void 0),mt++,P(_e.value).J(Ht(Nt.length-1),it),_e=fe.next()}while(!_e.done)})},N}),Qe("Object.is",function(v){return v||function(N,k){return N===k?0!==N||1/N==1/k:N!=N&&k!=k}}),Qe("Array.prototype.includes",function(v){return v||function(N,k){var P=this;P instanceof String&&(P=String(P));var Z=P.length;for(0>(k=k||0)&&(k=Math.max(k+Z,0));k<Z;k++){var pe=P[k];if(pe===N||Object.is(pe,N))return!0}return!1}}),Qe("String.prototype.includes",function(v){return v||function(N,k){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(N instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(N,k||0)}}),Qe("Array.prototype.keys",function(v){return v||function(){return function we(v,N){v instanceof String&&(v+="");var k=0,P=!1,Z={next:function(){if(!P&&k<v.length){var pe=k++;return{value:N(pe,v[pe]),done:!1}}return P=!0,{done:!0,value:void 0}}};return Z[Symbol.iterator]=function(){return Z},Z}(this,function(N){return N})}});var B=this||self;function ke(v,N){v=v.split(".");var P,k=B;v[0]in k||typeof k.execScript>"u"||k.execScript("var "+v[0]);for(;v.length&&(P=v.shift());)v.length||void 0===N?k=k[P]&&k[P]!==Object.prototype[P]?k[P]:k[P]={}:k[P]=N}function rt(v,N){return N=String.fromCharCode.apply(null,N),null==v?N:v+N}var Bt,Xt,Et=typeof TextDecoder<"u",kn=typeof TextEncoder<"u";function Tn(v){if(kn)v=(Xt||(Xt=new TextEncoder)).encode(v);else{var N=void 0;N=void 0!==N&&N;for(var k=0,P=new Uint8Array(3*v.length),Z=0;Z<v.length;Z++){var pe=v.charCodeAt(Z);if(128>pe)P[k++]=pe;else{if(2048>pe)P[k++]=pe>>6|192;else{if(55296<=pe&&57343>=pe){if(56319>=pe&&Z<v.length){var ne=v.charCodeAt(++Z);if(56320<=ne&&57343>=ne){P[k++]=(pe=1024*(pe-55296)+ne-56320+65536)>>18|240,P[k++]=pe>>12&63|128,P[k++]=pe>>6&63|128,P[k++]=63&pe|128;continue}Z--}if(N)throw Error("Found an unpaired surrogate");pe=65533}P[k++]=pe>>12|224,P[k++]=pe>>6&63|128}P[k++]=63&pe|128}}v=P.subarray(0,k)}return v}var zn={},rn=null;function ys(v,N){void 0===N&&(N=0),fr(),N=zn[N];for(var k=Array(Math.floor(v.length/3)),P=N[64]||"",Z=0,pe=0;Z<v.length-2;Z+=3){var ne=v[Z],fe=v[Z+1],_e=v[Z+2],Be=N[ne>>2];k[pe++]=Be+(ne=N[(3&ne)<<4|fe>>4])+(fe=N[(15&fe)<<2|_e>>6])+(_e=N[63&_e])}switch(Be=0,_e=P,v.length-Z){case 2:_e=N[(15&(Be=v[Z+1]))<<2]||P;case 1:k[pe]=N[(v=v[Z])>>2]+N[(3&v)<<4|Be>>4]+_e+P}return k.join("")}function fr(){if(!rn){rn={};for(var v="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),N=["+/=","+/","-_=","-_.","-_"],k=0;5>k;k++){var P=v.concat(N[k].split(""));zn[k]=P;for(var Z=0;Z<P.length;Z++){var pe=P[Z];void 0===rn[pe]&&(rn[pe]=Z)}}}}var Rr,Wu="function"==typeof Uint8Array.prototype.slice;function Uu(v,N,k){return N===k?Rr||(Rr=new Uint8Array(0)):Wu?v.slice(N,k):new Uint8Array(v.subarray(N,k))}var he=0;function vi(v,N){N=void 0!==(N=void 0===N?{}:N).v&&N.v,this.h=null,this.g=this.j=this.l=0,this.m=!1,this.v=N,v&&Xh(this,v)}function Xh(v,N){N=N.constructor===Uint8Array?N:N.constructor===ArrayBuffer||N.constructor===Array?new Uint8Array(N):N.constructor===String?function Rt(v){var N=v.length,k=3*N/4;k%3?k=Math.floor(k):-1!="=.".indexOf(v[N-1])&&(k=-1!="=.".indexOf(v[N-2])?k-2:k-1);var P=new Uint8Array(k),Z=0;return function us(v,N){function k(_e){for(;P<v.length;){var Be=v.charAt(P++),it=rn[Be];if(null!=it)return it;if(!/^[\s\xa0]*$/.test(Be))throw Error("Unknown base64 encoding at char: "+Be)}return _e}fr();for(var P=0;;){var Z=k(-1),pe=k(0),ne=k(64),fe=k(64);if(64===fe&&-1===Z)break;N(Z<<2|pe>>4),64!=ne&&(N(pe<<4&240|ne>>2),64!=fe&&N(ne<<6&192|fe))}}(v,function(pe){P[Z++]=pe}),P.subarray(0,Z)}(N):N instanceof Uint8Array?new Uint8Array(N.buffer,N.byteOffset,N.byteLength):new Uint8Array(0),v.h=N,v.l=0,v.j=v.h.length,v.g=v.l}function wi(v){for(var N=128,k=0,P=0,Z=0;4>Z&&128<=N;Z++)k|=(127&(N=v.h[v.g++]))<<7*Z;if(128<=N&&(k|=(127&(N=v.h[v.g++]))<<28,P|=(127&N)>>4),128<=N)for(Z=0;5>Z&&128<=N;Z++)P|=(127&(N=v.h[v.g++]))<<7*Z+3;if(128>N)return v=k>>>0,(P=2147483648&(N=P>>>0))&&(N=~N>>>0,0==(v=1+~v>>>0)&&(N=N+1>>>0)),v=4294967296*N+(v>>>0),P?-v:v;v.m=!0}vi.prototype.reset=function(){this.g=this.l},vi.prototype.i=function(){var v=this.h,N=v[this.g],k=127&N;return 128>N?(this.g+=1,k):(k|=(127&(N=v[this.g+1]))<<7,128>N?(this.g+=2,k):(k|=(127&(N=v[this.g+2]))<<14,128>N?(this.g+=3,k):(k|=(127&(N=v[this.g+3]))<<21,128>N?(this.g+=4,k):(k|=(15&(N=v[this.g+4]))<<28,128>N?(this.g+=5,k>>>0):(this.g+=5,128<=v[this.g++]&&128<=v[this.g++]&&128<=v[this.g++]&&128<=v[this.g++]&&this.g++,k)))))},vi.prototype.o=function(){var v=this.h[this.g],N=this.h[this.g+1],k=this.h[this.g+2],P=this.h[this.g+3];return this.g+=4,v=2*((k=(v<<0|N<<8|k<<16|P<<24)>>>0)>>31)+1,N=k>>>23&255,k&=8388607,255==N?k?NaN:1/0*v:0==N?v*Math.pow(2,-149)*k:v*Math.pow(2,N-150)*(k+Math.pow(2,23))};var ha=[];function cs(){this.g=new Uint8Array(64),this.h=0}function Dr(v,N){for(;127<N;)v.push(127&N|128),N>>>=7;v.push(N)}function da(v){var N={},k=void 0!==N.N&&N.N;this.o={v:void 0!==N.v&&N.v},this.N=k,N=this.o,ha.length?(k=ha.pop(),N&&(k.v=N.v),v&&Xh(k,v),v=k):v=new vi(v,N),this.g=v,this.m=this.g.g,this.h=this.i=this.l=-1,this.j=!1}function bs(v){var N=v.g;if((N=N.g==N.j)||(N=v.j)||(N=(N=v.g).m||0>N.g||N.g>N.j),N)return!1;v.m=v.g.g;var k=7&(N=v.g.i());return 0!=k&&5!=k&&1!=k&&2!=k&&3!=k&&4!=k?(v.j=!0,!1):(v.i=N,v.l=N>>>3,v.h=k,!0)}function Kr(v){switch(v.h){case 0:if(0!=v.h)Kr(v);else{for(v=v.g;128&v.h[v.g];)v.g++;v.g++}break;case 1:1!=v.h?Kr(v):(v=v.g).g+=8;break;case 2:if(2!=v.h)Kr(v);else{var N=v.g.i();(v=v.g).g+=N}break;case 5:5!=v.h?Kr(v):(v=v.g).g+=4;break;case 3:for(N=v.l;;){if(!bs(v)){v.j=!0;break}if(4==v.h){v.l!=N&&(v.j=!0);break}Kr(v)}break;default:v.j=!0}}function tr(v,N,k){var P=v.g.j,Z=v.g.i(),pe=v.g.g+Z;if(v.g.j=pe,k(N,v),0!=(k=pe-v.g.g))throw Error("Message parsing ended unexpectedly. Expected to read "+Z+" bytes, instead read "+(Z-k)+" bytes, either the data ended unexpectedly or the message misreported its own length");return v.g.g=pe,v.g.j=P,N}function Vs(v){return v.g.o()}function Zh(v){var P,N=v.g.i(),k=(v=v.g).g;if(v.g+=N,v=v.h,Et)(P=Bt)||(P=Bt=new TextDecoder("utf-8",{fatal:!1})),P=P.decode(v.subarray(k,k+N));else{N=k+N;for(var ne,fe,_e,Z=[],pe=null;k<N;)128>(ne=v[k++])?Z.push(ne):224>ne?k>=N?Z.push(65533):(fe=v[k++],194>ne||128!=(192&fe)?(k--,Z.push(65533)):Z.push((31&ne)<<6|63&fe)):240>ne?k>=N-1?Z.push(65533):128!=(192&(fe=v[k++]))||224===ne&&160>fe||237===ne&&160<=fe||128!=(192&(P=v[k++]))?(k--,Z.push(65533)):Z.push((15&ne)<<12|(63&fe)<<6|63&P):244>=ne?k>=N-2?Z.push(65533):128!=(192&(fe=v[k++]))||fe-144+(ne<<28)>>30||128!=(192&(P=v[k++]))||128!=(192&(_e=v[k++]))?(k--,Z.push(65533)):(ne=(7&ne)<<18|(63&fe)<<12|(63&P)<<6|63&_e,Z.push(55296+((ne-=65536)>>10&1023),56320+(1023&ne))):Z.push(65533),8192<=Z.length&&(pe=rt(pe,Z),Z.length=0);P=rt(pe,Z)}return P}function Yh(v,N,k){var P=v.g.i();for(P=v.g.g+P;v.g.g<P;)k.push(N.call(v.g))}function E(v,N){2==v.h?Yh(v,vi.prototype.o,N):N.push(Vs(v))}function Vn(){this.h=[],this.i=0,this.g=new cs}function nr(v,N){0!==N.length&&(v.h.push(N),v.i+=N.length)}function ie(v){var N=v.i+v.g.length();if(0===N)return new Uint8Array(0);N=new Uint8Array(N);for(var k=v.h,P=k.length,Z=0,pe=0;pe<P;pe++){var ne=k[pe];0!==ne.length&&(N.set(ne,Z),Z+=ne.length)}return 0!==(P=(k=v.g).h)&&(N.set(k.g.subarray(0,P),Z),k.h=0),v.h=[N],N}function mr(v,N,k){if(null!=k){Dr(v.g,8*N+5),v=v.g;var P=k;0===(P=(k=0>P?1:0)?-P:P)?he=0<1/P?0:2147483648:isNaN(P)?he=2147483647:34028234663852886e22<P?he=(k<<31|2139095040)>>>0:11754943508222875e-54>P?(P=Math.round(P/Math.pow(2,-149)),he=(k<<31|P)>>>0):(N=Math.floor(Math.log(P)/Math.LN2),P*=Math.pow(2,-N),16777216<=(P=Math.round(8388608*P))&&++N,he=(k<<31|N+127<<23|8388607&P)>>>0),v.push((k=he)>>>0&255),v.push(k>>>8&255),v.push(k>>>16&255),v.push(k>>>24&255)}}cs.prototype.push=function(v){if(!(this.h+1<this.g.length)){var N=this.g;this.g=new Uint8Array(Math.ceil(1+2*this.g.length)),this.g.set(N)}this.g[this.h++]=v},cs.prototype.length=function(){return this.h},cs.prototype.end=function(){var v=this.g,N=this.h;return this.h=0,Uu(v,0,N)},da.prototype.reset=function(){this.g.reset(),this.h=this.l=-1};var Gu="function"==typeof Uint8Array;function At(v,N,k){if(null!=v)return"object"==typeof v?Gu&&v instanceof Uint8Array?k(v):go(v,N,k):N(v)}function go(v,N,k){if(Array.isArray(v)){for(var P=Array(v.length),Z=0;Z<v.length;Z++)P[Z]=At(v[Z],N,k);return Array.isArray(v)&&v.W&&pa(P),P}for(Z in P={},v)P[Z]=At(v[Z],N,k);return P}function bm(v){return"number"==typeof v?isFinite(v)?v:String(v):v}var yo,ol={W:{value:!0,configurable:!0}};function pa(v){return Array.isArray(v)&&!Object.isFrozen(v)&&Object.defineProperties(v,ol),v}function Wn(v,N,k){var P=yo;if(yo=null,v||(v=P),P=this.constructor.ca,v||(v=P?[P]:[]),this.j=P?0:-1,this.m=this.g=null,this.h=v,v=(P=this.h.length)-1,!P||null===(P=this.h[v])||"object"!=typeof P||Array.isArray(P)||Gu&&P instanceof Uint8Array?void 0!==N&&-1<N?(this.l=Math.max(N,v+1-this.j),this.i=null):this.l=Number.MAX_VALUE:(this.l=v-this.j,this.i=P),k)for(N=0;N<k.length;N++)(v=k[N])<this.l?(P=this.h[v+=this.j])?pa(P):this.h[v]=Si:(St(this),(P=this.i[v])?pa(P):this.i[v]=Si)}var Si=Object.freeze(pa([]));function St(v){var N=v.l+v.j;v.h[N]||(v.i=v.h[N]={})}function Qt(v,N,k){return-1===N?null:void 0!==k&&k||N>=v.l?v.i?v.i[N]:void 0:v.h[N+v.j]}function $n(v,N){var k=void 0!==k&&k,P=Qt(v,N,k);return null==P&&(P=Si),P===Si&&Lt(v,N,P=pa([]),k),P}function Cn(v){var N=$n(v,3);if(v.m||(v.m={}),!v.m[3]){for(var k=0;k<N.length;k++)N[k]=+N[k];v.m[3]=!0}return N}function bo(v,N,k){return null==(v=Qt(v,N))?k:v}function gr(v,N,k){return null==(v=null==(v=Qt(v,N))?v:+v)?void 0===k?0:k:v}function Lt(v,N,k,P){void 0!==P&&P||N>=v.l?(St(v),v.i[N]=k):v.h[N+v.j]=k}function Ii(v,N,k){if(-1===k)return null;if(v.g||(v.g={}),!v.g[k]){var P=Qt(v,k,!1);P&&(v.g[k]=new N(P))}return v.g[k]}function fa(v,N){v.g||(v.g={});var k=v.g[1];if(!k){var P=$n(v,1);k=[];for(var Z=0;Z<P.length;Z++)k[Z]=new N(P[Z]);v.g[1]=k}return k}function yr(v,N,k){var P=void 0!==P&&P;v.g||(v.g={});var Z=k&&Fr(k,!1);v.g[N]=k,Lt(v,N,Z,P)}function Hu(v,N,k,P){var Z=fa(v,k);N=N||new k,v=$n(v,1),null!=P?(Z.splice(P,0,N),v.splice(P,0,Fr(N,!1))):(Z.push(N),v.push(Fr(N,!1)))}function Fr(v,N){if(v.g)for(var k in v.g){var P=v.g[k];if(Array.isArray(P))for(var Z=0;Z<P.length;Z++)P[Z]&&Fr(P[Z],N);else P&&Fr(P,N)}return v.h}function qr(v,N){if(v=v.o){nr(N,N.g.end());for(var k=0;k<v.length;k++)nr(N,v[k])}}function Ts(v,N){if(4==N.h)return!1;var k=N.m;return Kr(N),N.N||(N=Uu(N.g.h,k,N.g.g),(k=v.o)?k.push(N):v.o=[N]),!0}function Or(v){Wn.call(this,v,-1,Jh)}function Ye(v,N){for(;bs(N);)switch(N.i){case 8:var k=N.g.i();Lt(v,1,k);break;case 16:Lt(v,2,k=N.g.i());break;case 29:case 26:E(N,v.getPackedDataList());break;case 32:Lt(v,4,k=wi(N.g));break;default:if(!Ts(v,N))return v}return v}Wn.prototype.toJSON=function(){return go(Fr(this,!1),bm,ys)},Wn.prototype.toString=function(){return Fr(this,!1).toString()},xe(Or,Wn),Or.prototype.getRows=function(){return Qt(this,1)},Or.prototype.getCols=function(){return Qt(this,2)},Or.prototype.getPackedDataList=function(){return Cn(this)},Or.prototype.getLayout=function(){return bo(this,4,0)};var Jh=[3];function hn(v,N){var k=void 0;return new(k||(k=Promise))(function(P,Z){function pe(_e){try{fe(N.next(_e))}catch(Be){Z(Be)}}function ne(_e){try{fe(N.throw(_e))}catch(Be){Z(Be)}}function fe(_e){_e.done?P(_e.value):new k(function(Be){Be(_e.value)}).then(pe,ne)}fe((N=N.apply(v,void 0)).next())})}function Ci(v){Wn.call(this,v)}function il(v,N){for(;bs(N);)switch(N.i){case 8:var k=N.g.i();Lt(v,1,k);break;case 21:Lt(v,2,k=Vs(N));break;case 26:Lt(v,3,k=Zh(N));break;case 34:Lt(v,4,k=Zh(N));break;default:if(!Ts(v,N))return v}return v}function Un(v){Wn.call(this,v,-1,ju)}xe(Ci,Wn),xe(Un,Wn),Un.prototype.addClassification=function(v,N){return Hu(this,v,Ci,N),this};var ju=[1];function Xn(v){Wn.call(this,v)}function br(v,N){for(;bs(N);)switch(N.i){case 13:var k=Vs(N);Lt(v,1,k);break;case 21:Lt(v,2,k=Vs(N));break;case 29:Lt(v,3,k=Vs(N));break;case 37:Lt(v,4,k=Vs(N));break;case 45:Lt(v,5,k=Vs(N));break;default:if(!Ts(v,N))return v}return v}function xo(v){Wn.call(this,v,-1,Qh)}function Xr(v){e:{var N=new xo;for(v=new da(v);bs(v);)if(10===v.i)Hu(N,tr(v,new Xn,br),Xn,void 0);else if(!Ts(N,v))break e}return N}xe(Xn,Wn),xe(xo,Wn);var Qh=[1];function al(v){Wn.call(this,v)}function Ho(v){Wn.call(this,v,-1,vm)}function xm(v,N){for(;bs(N);)switch(N.i){case 8:var k=wi(N.g);Lt(v,1,k);break;case 16:Lt(v,2,k=wi(N.g));break;case 29:case 26:E(N,v.getVertexBufferList());break;case 32:case 34:k=N;var P=v.getIndexBufferList();2==k.h?Yh(k,vi.prototype.i,P):P.push(k.g.i());break;default:if(!Ts(v,N))return v}return v}xe(al,Wn),xe(Ho,Wn),Ho.prototype.getVertexType=function(){return bo(this,1,0)},Ho.prototype.getPrimitiveType=function(){return bo(this,2,0)},Ho.prototype.getVertexBufferList=function(){return Cn(this)},Ho.prototype.getIndexBufferList=function(){return $n(this,4)};var vm=[3,4];function J(v){Wn.call(this,v)}function ed(v,N,k){if(k=v.createShader(0===k?v.VERTEX_SHADER:v.FRAGMENT_SHADER),v.shaderSource(k,N),v.compileShader(k),!v.getShaderParameter(k,v.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+v.getShaderInfoLog(k));return k}function qu(v){return fa(v,Ci).map(function(N){return{index:bo(N,1,0),Y:gr(N,2),label:null!=Qt(N,3)?bo(N,3,""):void 0,displayName:null!=Qt(N,4)?bo(N,4,""):void 0}})}function Xu(v){return{x:gr(v,1),y:gr(v,2),z:gr(v,3),visibility:null!=Qt(v,4)?gr(v,4):void 0}}function Zu(v,N){this.h=v,this.g=N,this.l=0}function ll(v,N,k){return function ma(v,N){var k=v.g;if(void 0===v.m){var P=ed(k,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),Z=ed(k,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),pe=k.createProgram();if(k.attachShader(pe,P),k.attachShader(pe,Z),k.linkProgram(pe),!k.getProgramParameter(pe,k.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+k.getProgramInfoLog(pe));P=v.m=pe,k.useProgram(P),Z=k.getUniformLocation(P,"sampler0"),v.j={I:k.getAttribLocation(P,"aVertex"),H:k.getAttribLocation(P,"aTex"),da:Z},v.s=k.createBuffer(),k.bindBuffer(k.ARRAY_BUFFER,v.s),k.enableVertexAttribArray(v.j.I),k.vertexAttribPointer(v.j.I,2,k.FLOAT,!1,0,0),k.bufferData(k.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),k.STATIC_DRAW),k.bindBuffer(k.ARRAY_BUFFER,null),v.o=k.createBuffer(),k.bindBuffer(k.ARRAY_BUFFER,v.o),k.enableVertexAttribArray(v.j.H),k.vertexAttribPointer(v.j.H,2,k.FLOAT,!1,0,0),k.bufferData(k.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),k.STATIC_DRAW),k.bindBuffer(k.ARRAY_BUFFER,null),k.uniform1i(Z,0)}P=v.j,k.useProgram(v.m),k.canvas.width=N.width,k.canvas.height=N.height,k.viewport(0,0,N.width,N.height),k.activeTexture(k.TEXTURE0),v.h.bindTexture2d(N.glName),k.enableVertexAttribArray(P.I),k.bindBuffer(k.ARRAY_BUFFER,v.s),k.vertexAttribPointer(P.I,2,k.FLOAT,!1,0,0),k.enableVertexAttribArray(P.H),k.bindBuffer(k.ARRAY_BUFFER,v.o),k.vertexAttribPointer(P.H,2,k.FLOAT,!1,0,0),k.bindFramebuffer(k.DRAW_FRAMEBUFFER?k.DRAW_FRAMEBUFFER:k.FRAMEBUFFER,null),k.clearColor(0,0,0,0),k.clear(k.COLOR_BUFFER_BIT),k.colorMask(!0,!0,!0,!0),k.drawArrays(k.TRIANGLE_FAN,0,4),k.disableVertexAttribArray(P.I),k.disableVertexAttribArray(P.H),k.bindBuffer(k.ARRAY_BUFFER,null),v.h.bindTexture2d(0)}(v,N),"function"==typeof v.g.canvas.transferToImageBitmap?Promise.resolve(v.g.canvas.transferToImageBitmap()):k?Promise.resolve(v.g.canvas):"function"==typeof createImageBitmap?createImageBitmap(v.g.canvas):(void 0===v.i&&(v.i=document.createElement("canvas")),new Promise(function(P){v.i.height=v.g.canvas.height,v.i.width=v.g.canvas.width,v.i.getContext("2d",{}).drawImage(v.g.canvas,0,0,v.g.canvas.width,v.g.canvas.height),P(v.i)}))}function Ni(v){this.g=v}xe(J,Wn),J.prototype.getMesh=function(){return Ii(this,Ho,1)},J.prototype.getPoseTransformMatrix=function(){return Ii(this,Or,2)};var ki=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function jo(v,N){return N+v}function Ti(v,N){window[v]=N}function Ko(v){if(this.g=v,this.listeners={},this.j={},this.F={},this.m={},this.s={},this.G=this.o=this.R=!0,this.C=Promise.resolve(),this.P="",this.B={},this.locateFile=v&&v.locateFile||jo,"object"==typeof window)var N=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if(!(typeof location<"u"))throw Error("solutions can only be loaded on a web page or in a web worker");N=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.S=N,v.options)for(var k=(N=nt(Object.keys(v.options))).next();!k.done;k=N.next()){var P=v.options[k=k.value].default;void 0!==P&&(this.j[k]="function"==typeof P?P():P)}}function vo(v,N){return hn(v,function k(){var Z,pe,P=this;return ft(k,function(ne){return N in P.F?ne.return(P.F[N]):(Z=P.locateFile(N,""),pe=fetch(Z).then(function(fe){return fe.arrayBuffer()}),P.F[N]=pe,ne.return(pe))})})}function hl(v,N){for(var k=N.name||"$",P=[].concat(Ke(N.wants)),Z=new v.h.StringList,pe=nt(N.wants),ne=pe.next();!ne.done;ne=pe.next())Z.push_back(ne.value);pe=v.h.PacketListener.implement({onResults:function(fe){for(var _e={},Be=0;Be<N.wants.length;++Be)_e[P[Be]]=fe.get(Be);var it=v.listeners[k];it&&(v.C=function $i(v,N,k){return hn(v,function P(){var Z,pe,ne,fe,Be,Ht,Nt,mt,qe,ct,Dt,Bn,it=this;return ft(P,function(tn){switch(tn.g){case 1:if(!k)return tn.return(N);for(Z={},pe=0,ne=nt(Object.keys(k)),fe=ne.next();!fe.done;fe=ne.next())"string"!=typeof(Be=k[fe.value])&&"texture"===Be.type&&void 0!==N[Be.stream]&&++pe;1<pe&&(it.G=!1),Ht=nt(Object.keys(k)),fe=Ht.next();case 2:if(fe.done){tn.g=4;break}if("string"==typeof(mt=k[Nt=fe.value]))return Dt=Z,Bn=Nt,$t(tn,function ya(v,N,k){return hn(v,function P(){var pe,Z=this;return ft(P,function(ne){return"number"==typeof k||k instanceof Uint8Array||k instanceof Z.h.Uint8BlobList?ne.return(k):k instanceof Z.h.Texture2dDataOut?((pe=Z.s[N])||(pe=new Zu(Z.h,Z.D),Z.s[N]=pe),ne.return(ll(pe,k,Z.G))):ne.return(void 0)})})}(it,Nt,N[mt]),14);if(qe=N[mt.stream],"detection_list"===mt.type){if(qe){for(var ts=qe.getRectList(),bn=qe.getLandmarksList(),gt=qe.getClassificationsList(),Vt=[],Ut=0;Ut<ts.size();++Ut){var vt=ts.get(Ut);e:{var Wt=new al;for(vt=new da(vt);bs(vt);)switch(vt.i){case 13:var Pt=Vs(vt);Lt(Wt,1,Pt);break;case 21:Lt(Wt,2,Pt=Vs(vt));break;case 29:Lt(Wt,3,Pt=Vs(vt));break;case 37:Lt(Wt,4,Pt=Vs(vt));break;case 45:Lt(Wt,5,Pt=Vs(vt));break;case 48:Lt(Wt,6,Pt=wi(vt.g));break;default:if(!Ts(Wt,vt))break e}}Wt={Z:gr(Wt,1),$:gr(Wt,2),height:gr(Wt,3),width:gr(Wt,4),rotation:gr(Wt,5,0),X:bo(Wt,6,0)},vt=fa(Xr(bn.get(Ut)),Xn).map(Xu);var Zr=gt.get(Ut);e:for(Pt=new Un,Zr=new da(Zr);bs(Zr);)if(10===Zr.i)Pt.addClassification(tr(Zr,new Ci,il));else if(!Ts(Pt,Zr))break e;Wt={T:Wt,O:vt,M:qu(Pt)},Vt.push(Wt)}ts=Vt}else ts=[];Z[Nt]=ts,tn.g=7;break}if("proto_list"===mt.type){if(qe){for(ts=Array(qe.size()),bn=0;bn<qe.size();bn++)ts[bn]=qe.get(bn);qe.delete()}else ts=[];Z[Nt]=ts,tn.g=7;break}if(void 0===qe){tn.g=3;break}if("float_list"===mt.type){Z[Nt]=qe,tn.g=7;break}if("proto"===mt.type){Z[Nt]=qe,tn.g=7;break}if("texture"!==mt.type)throw Error("Unknown output config type: '"+mt.type+"'");return(ct=it.s[Nt])||(ct=new Zu(it.h,it.D),it.s[Nt]=ct),$t(tn,ll(ct,qe,it.G),13);case 13:Z[Nt]=tn.h;case 7:mt.transform&&Z[Nt]&&(Z[Nt]=mt.transform(Z[Nt])),tn.g=3;break;case 14:Dt[Bn]=tn.h;case 3:fe=Ht.next(),tn.g=2;break;case 4:return tn.return(Z)}})})}(v,_e,N.outs).then(function(Ht){Ht=it(Ht);for(var Nt=0;Nt<N.wants.length;++Nt){var mt=_e[P[Nt]];"object"==typeof mt&&mt.hasOwnProperty&&mt.hasOwnProperty("delete")&&mt.delete()}Ht&&(v.C=Ht)}))}}),v.i.attachMultiListener(Z,pe),Z.delete()}function ba(v){v=function Ku(v){e:{var N=new J;for(v=new da(v);bs(v);)switch(v.i){case 10:var k=tr(v,new Ho,xm);yr(N,1,k);break;case 18:yr(N,2,k=tr(v,new Or,Ye));break;default:if(!Ts(N,v))break e}}return N}(v);var N=v.getMesh();if(!N)return v;var k=new Float32Array(N.getVertexBufferList());N.getVertexBufferList=function(){return k};var P=new Uint32Array(N.getIndexBufferList());return N.getIndexBufferList=function(){return P},v}(lt=Ko.prototype).close=function(){return this.i&&this.i.delete(),Promise.resolve()},lt.reset=function(){return hn(this,function v(){var N=this;return ft(v,function(k){N.i&&(N.i.reset(),N.m={},N.s={}),k.g=0})})},lt.setOptions=function(v,N){var k=this;if(N=N||this.g.options){for(var P=[],Z=[],pe={},ne=nt(Object.keys(v)),fe=ne.next();!fe.done;pe={K:pe.K,L:pe.L},fe=ne.next()){var _e=fe.value;_e in this.j&&this.j[_e]===v[_e]||(this.j[_e]=v[_e],void 0!==(fe=N[_e])&&(fe.onChange&&(pe.K=fe.onChange,pe.L=v[_e],P.push(function(Be){return function(){return hn(k,function it(){var Nt=this;return ft(it,function(mt){if(1==mt.g)return $t(mt,Be.K(Be.L),2);!0===mt.h&&(Nt.o=!0),mt.g=0})})}}(pe))),fe.graphOptionXref&&(_e={valueNumber:1===fe.type?v[_e]:0,valueBoolean:0===fe.type&&v[_e],valueString:2===fe.type?v[_e]:""},fe=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),fe.graphOptionXref),_e),Z.push(fe))))}(0!==P.length||0!==Z.length)&&(this.o=!0,this.A=(void 0===this.A?[]:this.A).concat(Z),this.u=(void 0===this.u?[]:this.u).concat(P))}},lt.initialize=function(){return hn(this,function v(){var N=this;return ft(v,function(k){return 1==k.g?$t(k,function _i(v){return hn(v,function N(){var P,Z,pe,ne,fe,_e,Be,it,Ht,Nt,mt,k=this;return ft(N,function(qe){switch(qe.g){case 1:return P=k,k.R?(Z=function ga(v,N){return void 0===v.g.files?[]:"function"==typeof v.g.files?v.g.files(N):v.g.files}(k,k.j),$t(qe,function cl(){return hn(this,function v(){return ft(v,function(N){switch(N.g){case 1:return N.m=2,$t(N,WebAssembly.instantiate(ki),4);case 4:N.g=3,N.m=0;break;case 2:return N.m=0,N.j=null,N.return(!1);case 3:return N.return(!0)}})})}(),2)):qe.return();case 2:if(pe=qe.h,"object"==typeof window)return Ti("createMediapipeSolutionsWasm",{locateFile:k.locateFile}),Ti("createMediapipeSolutionsPackedAssets",{locateFile:k.locateFile}),_e=Z.filter(function(ct){return void 0!==ct.data}),Be=Z.filter(function(ct){return void 0===ct.data}),it=Promise.all(_e.map(function(ct){var It=vo(P,ct.url);if(void 0!==ct.path){var Dt=ct.path;It=It.then(function(Bn){return P.overrideFile(Dt,Bn),Promise.resolve(Bn)})}return It})),Ht=Promise.all(Be.map(function(ct){return void 0===ct.simd||ct.simd&&pe||!ct.simd&&!pe?function ul(v){var N=document.createElement("script");return N.setAttribute("src",v),N.setAttribute("crossorigin","anonymous"),new Promise(function(k){N.addEventListener("load",function(){k()},!1),N.addEventListener("error",function(){k()},!1),document.body.appendChild(N)})}(P.locateFile(ct.url,P.S)):Promise.resolve()})).then(function(){return hn(P,function ct(){var It,Dt,Bn=this;return ft(ct,function(tn){if(1==tn.g)return It=window.createMediapipeSolutionsWasm,Dt=window.createMediapipeSolutionsPackedAssets,$t(tn,It(Dt),2);Bn.h=tn.h,tn.g=0})})}),Nt=hn(P,function ct(){var It=this;return ft(ct,function(Dt){return It.g.graph&&It.g.graph.url?Dt=$t(Dt,vo(It,It.g.graph.url),0):(Dt.g=0,Dt=void 0),Dt})}),$t(qe,Promise.all([Ht,it,Nt]),7);if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return ne=Z.filter(function(ct){return void 0===ct.simd||ct.simd&&pe||!ct.simd&&!pe}).map(function(ct){return P.locateFile(ct.url,P.S)}),importScripts.apply(null,Ke(ne)),$t(qe,createMediapipeSolutionsWasm(Module),6);case 6:k.h=qe.h,k.l=new OffscreenCanvas(1,1),k.h.canvas=k.l,fe=k.h.GL.createContext(k.l,{antialias:!1,alpha:!1,ba:typeof WebGL2RenderingContext<"u"?2:1}),k.h.GL.makeContextCurrent(fe),qe.g=4;break;case 7:if(k.l=document.createElement("canvas"),!(mt=k.l.getContext("webgl2",{}))&&!(mt=k.l.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),qe.return();k.D=mt,k.h.canvas=k.l,k.h.createContext(k.l,!0,!0,{});case 4:k.i=new k.h.SolutionWasm,k.R=!1,qe.g=0}})})}(N),2):3!=k.g?$t(k,function Ei(v){return hn(v,function N(){var Z,pe,ne,fe,_e,it,k=this;return ft(N,function(Ht){if(1==Ht.g)return k.g.graph&&k.g.graph.url&&k.P===k.g.graph.url?Ht.return():(k.o=!0,k.g.graph&&k.g.graph.url?(k.P=k.g.graph.url,$t(Ht,vo(k,k.g.graph.url),3)):void(Ht.g=2));for(2!=Ht.g&&k.i.loadGraph(Ht.h),Z=nt(Object.keys(k.B)),pe=Z.next();!pe.done;pe=Z.next())k.i.overrideFile(ne=pe.value,k.B[ne]);if(k.B={},k.g.listeners)for(fe=nt(k.g.listeners),_e=fe.next();!_e.done;_e=fe.next())hl(k,_e.value);it=k.j,k.j={},k.setOptions(it),Ht.g=0})})}(N),3):$t(k,function Ai(v){return hn(v,function N(){var P,Z,ne,fe,_e,k=this;return ft(N,function(it){switch(it.g){case 1:if(!k.o)return it.return();if(!k.u){it.g=2;break}P=nt(k.u),Z=P.next();case 3:if(Z.done){it.g=5;break}return $t(it,(0,Z.value)(),4);case 4:Z=P.next(),it.g=3;break;case 5:k.u=void 0;case 2:if(k.A){for(ne=new k.h.GraphOptionChangeRequestList,fe=nt(k.A),_e=fe.next();!_e.done;_e=fe.next())ne.push_back(_e.value);k.i.changeOptions(ne),ne.delete(),k.A=void 0}k.o=!1,it.g=0}})})}(N),0)})})},lt.overrideFile=function(v,N){this.i?this.i.overrideFile(v,N):this.B[v]=N},lt.clearOverriddenFiles=function(){this.B={},this.i&&this.i.clearOverriddenFiles()},lt.send=function(v,N){return hn(this,function k(){var Z,pe,ne,fe,_e,Be,it,Ht,Nt,P=this;return ft(k,function(mt){switch(mt.g){case 1:return P.g.inputs?(Z=1e3*(null==N?performance.now():N),$t(mt,P.C,2)):mt.return();case 2:return $t(mt,P.initialize(),3);case 3:for(pe=new P.h.PacketDataList,ne=nt(Object.keys(v)),fe=ne.next();!fe.done;fe=ne.next())if(Be=P.g.inputs[_e=fe.value]){e:{var qe=P,ct=v[_e];switch(Be.type){case"video":var It=qe.m[Be.stream];if(It||(It=new Zu(qe.h,qe.D),qe.m[Be.stream]=It),0===(qe=It).l&&(qe.l=qe.h.createTexture()),typeof HTMLVideoElement<"u"&&ct instanceof HTMLVideoElement){var Dt=ct.videoWidth;It=ct.videoHeight}else typeof HTMLImageElement<"u"&&ct instanceof HTMLImageElement?(Dt=ct.naturalWidth,It=ct.naturalHeight):(Dt=ct.width,It=ct.height);It={glName:qe.l,width:Dt,height:It},(Dt=qe.g).canvas.width=It.width,Dt.canvas.height=It.height,Dt.activeTexture(Dt.TEXTURE0),qe.h.bindTexture2d(qe.l),Dt.texImage2D(Dt.TEXTURE_2D,0,Dt.RGBA,Dt.RGBA,Dt.UNSIGNED_BYTE,ct),qe.h.bindTexture2d(0),qe=It;break e;case"detections":for((It=qe.m[Be.stream])||(It=new Ni(qe.h),qe.m[Be.stream]=It),(qe=It).data||(qe.data=new qe.g.DetectionListData),qe.data.reset(ct.length),It=0;It<ct.length;++It){var Bn=qe.data,tn=Bn.setBoundingBox,ts=It,bn=(Dt=ct[It]).T,gt=new al;Lt(gt,1,bn.Z),Lt(gt,2,bn.$),Lt(gt,3,bn.height),Lt(gt,4,bn.width),Lt(gt,5,bn.rotation),Lt(gt,6,bn.X);var Vt=bn=new Vn;mr(Vt,1,Qt(gt,1)),mr(Vt,2,Qt(gt,2)),mr(Vt,3,Qt(gt,3)),mr(Vt,4,Qt(gt,4)),mr(Vt,5,Qt(gt,5));var Ut=Qt(gt,6);if(null!=Ut&&null!=Ut){Dr(Vt.g,48);var vt=Vt.g,Wt=Ut;Ut=0>Wt;var Pt=(Wt=Math.abs(Wt))>>>0;for(Wt=Math.floor((Wt-Pt)/4294967296),Wt>>>=0,Ut&&(Wt=~Wt>>>0,4294967295<(Pt=1+(~Pt>>>0))&&(Pt=0,4294967295<++Wt&&(Wt=0))),Ut=he=Pt,Pt=Wt;0<Pt||127<Ut;)vt.push(127&Ut|128),Ut=(Ut>>>7|Pt<<25)>>>0,Pt>>>=7;vt.push(Ut)}if(qr(gt,Vt),bn=ie(bn),tn.call(Bn,ts,bn),Dt.O)for(Bn=0;Bn<Dt.O.length;++Bn)Vt=!!(gt=Dt.O[Bn]).visibility,ts=(tn=qe.data).addNormalizedLandmark,bn=It,gt=Object.assign(Object.assign({},gt),{visibility:Vt?gt.visibility:0}),Lt(Vt=new Xn,1,gt.x),Lt(Vt,2,gt.y),Lt(Vt,3,gt.z),gt.visibility&&Lt(Vt,4,gt.visibility),mr(vt=gt=new Vn,1,Qt(Vt,1)),mr(vt,2,Qt(Vt,2)),mr(vt,3,Qt(Vt,3)),mr(vt,4,Qt(Vt,4)),mr(vt,5,Qt(Vt,5)),qr(Vt,vt),gt=ie(gt),ts.call(tn,bn,gt);if(Dt.M)for(Bn=0;Bn<Dt.M.length;++Bn){if(ts=(tn=qe.data).addClassification,bn=It,gt=Dt.M[Bn],Lt(Vt=new Ci,2,gt.Y),gt.index&&Lt(Vt,1,gt.index),gt.label&&Lt(Vt,3,gt.label),gt.displayName&&Lt(Vt,4,gt.displayName),vt=gt=new Vn,null!=(Pt=Qt(Vt,1))&&null!=Pt)if(Dr(vt.g,8),Ut=vt.g,0<=Pt)Dr(Ut,Pt);else{for(Wt=0;9>Wt;Wt++)Ut.push(127&Pt|128),Pt>>=7;Ut.push(1)}mr(vt,2,Qt(Vt,2)),null!=(Ut=Qt(Vt,3))&&(Ut=Tn(Ut),Dr(vt.g,26),Dr(vt.g,Ut.length),nr(vt,vt.g.end()),nr(vt,Ut)),null!=(Ut=Qt(Vt,4))&&(Ut=Tn(Ut),Dr(vt.g,34),Dr(vt.g,Ut.length),nr(vt,vt.g.end()),nr(vt,Ut)),qr(Vt,vt),gt=ie(gt),ts.call(tn,bn,gt)}}qe=qe.data;break e;default:qe={}}}switch(it=qe,Ht=Be.stream,Be.type){case"video":pe.pushTexture2d(Object.assign(Object.assign({},it),{stream:Ht,timestamp:Z}));break;case"detections":(Nt=it).stream=Ht,Nt.timestamp=Z,pe.pushDetectionList(Nt);break;default:throw Error("Unknown input config type: '"+Be.type+"'")}}return P.i.send(pe),$t(mt,P.C,4);case 4:pe.delete(),mt.g=0}})})},lt.onResults=function(v,N){this.listeners[N||"$"]=v},ke("Solution",Ko),ke("OptionType",{BOOL:0,NUMBER:1,aa:2,0:"BOOL",1:"NUMBER",2:"STRING"});var dl={files:[{url:"face_mesh_solution_packed_assets_loader.js"},{simd:!0,url:"face_mesh_solution_simd_wasm_bin.js"},{simd:!1,url:"face_mesh_solution_wasm_bin.js"}],graph:{url:"face_mesh.binarypb"},listeners:[{wants:["multi_face_geometry","image_transformed","multi_face_landmarks"],outs:{image:"image_transformed",multiFaceGeometry:{type:"proto_list",stream:"multi_face_geometry",transform:function(v){return v.map(ba)}},multiFaceLandmarks:{type:"proto_list",stream:"multi_face_landmarks",transform:function(v){return v.map(function(N){return fa(Xr(N),Xn).map(Xu)})}}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},enableFaceGeometry:{type:0,graphOptionXref:{calculatorName:"EnableFaceGeometryConstant",calculatorType:"ConstantSidePacketCalculator",fieldName:"bool_value"}},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},maxNumFaces:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorNumFaces",fieldName:"int_value"}},refineLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorRefineLandmarks",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"facelandmarkfrontgpu__facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"facelandmarkfrontgpu__facelandmarkgpu__ThresholdingCalculator",fieldName:"threshold"}},cameraNear:{type:1,graphOptionXref:{calculatorType:"FaceGeometryEnvGeneratorCalculator",fieldName:"near"}},cameraFar:{type:1,graphOptionXref:{calculatorType:"FaceGeometryEnvGeneratorCalculator",fieldName:"far"}},cameraVerticalFovDegrees:{type:1,graphOptionXref:{calculatorType:"FaceGeometryEnvGeneratorCalculator",fieldName:"vertical_fov_degrees"}}}},Ri=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],Di=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],xa=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],Fi=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],Yu=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],va=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],Oi=[].concat(Ke(Ri),Ke(Di),Ke(xa),Ke(Fi),Ke(Yu),Ke(va));function qo(v){v=v||{},v=Object.assign(Object.assign({},dl),v),this.g=new Ko(v)}(lt=qo.prototype).close=function(){return this.g.close(),Promise.resolve()},lt.onResults=function(v){this.g.onResults(v)},lt.initialize=function(){return hn(this,function v(){var N=this;return ft(v,function(k){return $t(k,N.g.initialize(),0)})})},lt.reset=function(){this.g.reset()},lt.send=function(v){return hn(this,function N(){var k=this;return ft(N,function(P){return $t(P,k.g.send(v),0)})})},lt.setOptions=function(v){this.g.setOptions(v)},ke("FACE_GEOMETRY",{Layout:{COLUMN_MAJOR:0,ROW_MAJOR:1,0:"COLUMN_MAJOR",1:"ROW_MAJOR"},PrimitiveType:{TRIANGLE:0,0:"TRIANGLE"},VertexType:{VERTEX_PT:0,0:"VERTEX_PT"},DEFAULT_CAMERA_PARAMS:{verticalFovDegrees:63,near:1,far:1e4}}),ke("FaceMesh",qo),ke("FACEMESH_LIPS",Ri),ke("FACEMESH_LEFT_EYE",Di),ke("FACEMESH_LEFT_EYEBROW",xa),ke("FACEMESH_LEFT_IRIS",[[474,475],[475,476],[476,477],[477,474]]),ke("FACEMESH_RIGHT_EYE",Fi),ke("FACEMESH_RIGHT_EYEBROW",Yu),ke("FACEMESH_RIGHT_IRIS",[[469,470],[470,471],[471,472],[472,469]]),ke("FACEMESH_FACE_OVAL",va),ke("FACEMESH_CONTOURS",Oi),ke("FACEMESH_TESSELATION",[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]]),ke("matrixDataToMatrix",function(v){for(var N=v.getCols(),k=v.getRows(),P=v.getPackedDataList(),Z=[],pe=0;pe<k;pe++)Z.push(Array(N));for(pe=0;pe<k;pe++)for(var ne=0;ne<N;ne++){var fe=1===v.getLayout()?pe*N+ne:ne*k+pe;Z[pe][ne]=P[fe]}return Z}),ke("VERSION","0.4.1633559619")}).call(this)},5894:(lt,Ot,Y)=>{"use strict";Y.r(Ot),Y.d(Ot,{ScanPagePageModule:()=>dJ});var ut={};Y.r(ut),Y.d(ut,{arraysEqual:()=>At,arraysEqualWithNull:()=>Gu,assert:()=>E,assertNonNegativeIntegerDimensions:()=>Xn,assertNonNull:()=>nr,assertShapesMatch:()=>Vn,bytesFromStringArray:()=>fa,bytesPerElement:()=>Ii,checkConversionForErrors:()=>bo,clamp:()=>bs,computeStrides:()=>Ye,convertBackendValuesAndArrayBuffer:()=>Ci,createScalarValue:()=>Xo,createShuffledIndices:()=>pa,decodeString:()=>Zo,distSquared:()=>Yh,encodeString:()=>wo,fetch:()=>AC,fingerPrint64:()=>b3,flatten:()=>So,getArrayFromDType:()=>Cn,getTypedArrayFromDType:()=>$n,hasEncodingLoss:()=>Lt,hexToLong:()=>Uc,indexToLoc:()=>xo,inferDtype:()=>qr,inferFromImplicitShape:()=>Si,isBoolean:()=>Hu,isFunction:()=>Ts,isInt:()=>go,isNumber:()=>Fr,isPromise:()=>Xr,isScalarShape:()=>mr,isString:()=>yr,isTypedArray:()=>ds,isValidDtype:()=>gr,locToIndex:()=>br,makeOnesTypedArray:()=>il,makeZerosNestedTypedArray:()=>ju,makeZerosTypedArray:()=>Un,nearestDivisor:()=>Or,nearestLargerEven:()=>Kr,now:()=>Ds,parseAxisParam:()=>St,randUniform:()=>Zh,repeatedTry:()=>Wn,rightPad:()=>yo,shuffle:()=>Dr,shuffleCombo:()=>da,sizeFromShape:()=>ie,sizeToSquarishShape:()=>ol,squeezeShape:()=>Qt,sum:()=>Vs,swap:()=>tr,tanh:()=>bm,toNestedArray:()=>hn,toTypedArray:()=>Pi});var cn={};Y.r(cn),Y.d(cn,{assertTypesMatch:()=>E3,getTensorsInContainer:()=>Nm,isTensorInList:()=>WC,makeTypesMatch:()=>Rn});var Qe={};Y.r(Qe),Y.d(Qe,{isBrowser:()=>Em,isMobile:()=>_m,mockIsMobile:()=>qC});var yn={};Y.r(yn),Y.d(yn,{Serializable:()=>ka,SerializationMap:()=>Sr,getRegisteredName:()=>XN,registerClass:()=>Se});var nt={};Y.r(nt),Y.d(nt,{assertAndGetBroadcastShape:()=>yt,getBroadcastDims:()=>_a,getReductionAxes:()=>Jn});var Ke={};Y.r(Ke),Y.d(Ke,{CompositeArrayBuffer:()=>Jr,browserFiles:()=>lk,browserHTTPRequest:()=>pk,concatenateArrayBuffers:()=>P3,copyModel:()=>xN,decodeWeights:()=>O3,encodeWeights:()=>Rm,fromMemory:()=>mk,fromMemorySync:()=>ay,getLoadHandlers:()=>iN,getModelArtifactsForJSON:()=>Om,getModelArtifactsForJSONSync:()=>B3,getModelArtifactsInfoForJSON:()=>Xc,getSaveHandlers:()=>W3,getWeightSpecs:()=>V3,http:()=>ig,isHTTPScheme:()=>og,listModels:()=>yN,loadWeights:()=>uk,moveModel:()=>vN,registerLoadRouter:()=>oN,registerSaveRouter:()=>rN,removeModel:()=>bN,weightsLoaderFactory:()=>sy,withSaveHandler:()=>gk,withSaveHandlerSync:()=>yk});var wt={};Y.r(wt),Y.d(wt,{confusionMatrix:()=>Nk});var ze={};Y.r(ze),Y.d(ze,{draw:()=>Rk,fromPixels:()=>Qd,fromPixelsAsync:()=>Ak,toPixels:()=>cg});var ee={};Y.r(ee),Y.d(ee,{prepareAndValidate:()=>ep});var Ne={};Y.r(Ne),Y.d(Ne,{calculateShapes:()=>Bi,validateInput:()=>tp,validateUpdateShape:()=>dg});var Re={};Y.r(Re),Y.d(Re,{assertParamsValid:()=>fg,computeFlatOffset:()=>yg,computeOutShape:()=>mg,getNormalizedAxes:()=>Ok,isSliceContinous:()=>gg,maskToAxes:()=>Fk,parseSliceParams:()=>np,sliceInfo:()=>bg,startForAxis:()=>yy,startIndicesWithElidedDims:()=>fy,stopForAxis:()=>by,stopIndicesWithElidedDims:()=>my,stridesForAxis:()=>gy,stridesWithElidedDims:()=>hy});var be={};Y.r(be),Y.d(be,{TEST_EPSILON_FLOAT16:()=>vy,createVideoElement:()=>Gk,encodeStrings:()=>wy,expectArrayBuffersEqual:()=>Uk,expectArraysClose:()=>Mk,expectArraysEqual:()=>Bk,expectNumbersClose:()=>Vk,expectPromiseToFail:()=>zk,expectValuesInRange:()=>Wk,play:()=>Hk,testEpsilon:()=>xg});var xe={};Y.r(xe),Y.d(xe,{conv2d:()=>d4,depthwiseConv2d:()=>y6,matMul:()=>E1});var We={};Y.r(We),Y.d(We,{collectGatherOpShapeInfo:()=>n2,computeOutShape:()=>Z4,segOpComputeOptimalWindowSize:()=>X4});var Ge={};Y.r(Ge),Y.d(Ge,{ERF_A1:()=>W1,ERF_A2:()=>U1,ERF_A3:()=>G1,ERF_A4:()=>H1,ERF_A5:()=>j1,ERF_P:()=>V1,PARALLELIZE_THRESHOLD:()=>P1,RowPartitionType:()=>Eo,SELU_SCALE:()=>zp,SELU_SCALEALPHA:()=>Mp,applyActivation:()=>Rp,assertAndGetBroadcastShape:()=>yt,assertAxesAreInnerMostDims:()=>Ss,assertParamsConsistent:()=>L1,assignToTypedArray:()=>D4,axesAreInnerMostDims:()=>Yg,calculateShapes:()=>Bi,checkEinsumDimSizes:()=>Y1,checkPadOnDimRoundingMode:()=>Os,combineLocations:()=>$y,combineRaggedTensorToTensorShapes:()=>k4,complexWithEvenIndex:()=>$4,complexWithOddIndex:()=>R4,computeConv2DInfo:()=>ps,computeConv3DInfo:()=>Wi,computeDefaultPad:()=>$g,computeDilation2DInfo:()=>Jc,computeOptimalWindowSize:()=>Pp,computeOutAndReduceShapes:()=>fs,computeOutShape:()=>_o,computePool2DInfo:()=>Lr,computePool3DInfo:()=>ei,convertConv2DDataFormat:()=>ti,decodeEinsumEquation:()=>X1,eitherStridesOrDilationsAreOne:()=>vs,expandShapeToKeepDim:()=>Gn,exponent:()=>O4,exponents:()=>F4,fromStringArrayToUint8:()=>Y4,fromUint8ToStringArray:()=>ui,getAxesPermutation:()=>On,getBroadcastDims:()=>_a,getComplexWithIndex:()=>K1,getEinsumComputePath:()=>J1,getEinsumPermutation:()=>Z1,getFusedBiasGradient:()=>$p,getFusedDyActivation:()=>Ap,getImageCenter:()=>M1,getInnerMostAxes:()=>Hn,getPermuted:()=>xh,getRaggedRank:()=>_4,getReductionAxes:()=>Jn,getReshaped:()=>bh,getReshapedPermuted:()=>vh,getRowPartitionTypesHelper:()=>T4,getSliceBeginCoords:()=>z1,getSliceSize:()=>B1,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>M4,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>z4,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>B4,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>U4,getSparseReshapeInputOutputMismatchErrorMessage:()=>H4,getSparseReshapeInputOutputMultipleErrorMessage:()=>G4,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>V4,getSparseReshapeNegativeOutputDimErrorMessage:()=>W4,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>q4,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>t2,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>j4,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>K4,getUndoAxesPermutation:()=>Gi,isIdentityPermutation:()=>Q1,log:()=>vC,mergeRealAndImagArrays:()=>li,prepareAndValidate:()=>ep,prepareSplitSize:()=>e2,segment_util:()=>We,shouldFuse:()=>Dp,slice_util:()=>Re,splitRealAndImagArrays:()=>A4,stridesOrDilationsArePositive:()=>$a,tupleValuesAreOne:()=>Ui,upcastType:()=>Ws,validateDefaultValueShape:()=>E4,validateInput:()=>tp,validateUpdateShape:()=>dg,warn:()=>xr});var Jt={};Y.r(Jt),Y.d(Jt,{nonMaxSuppressionV3Impl:()=>Fp,nonMaxSuppressionV4Impl:()=>Op,nonMaxSuppressionV5Impl:()=>Lp,whereImpl:()=>_p});var $t={};Y.r($t),Y.d($t,{Abs:()=>ma,Acos:()=>Ni,Acosh:()=>ki,AdadeltaOptimizer:()=>Zm,AdagradOptimizer:()=>Ym,AdamOptimizer:()=>Jm,AdamaxOptimizer:()=>Qm,Add:()=>jo,AddN:()=>Ti,All:()=>ul,Any:()=>cl,ArgMax:()=>Ko,ArgMin:()=>ga,Asin:()=>_i,Asinh:()=>Ei,Atan:()=>Ai,Atan2:()=>$i,Atanh:()=>vo,AvgPool:()=>ya,AvgPool3D:()=>ba,AvgPool3DGrad:()=>dl,AvgPoolGrad:()=>hl,BatchMatMul:()=>Ri,BatchToSpaceND:()=>Di,Bincount:()=>xa,BitwiseAnd:()=>Fi,BroadcastArgs:()=>va,BroadcastTo:()=>Yu,Cast:()=>Oi,Ceil:()=>qo,ClipByValue:()=>v,Complex:()=>N,ComplexAbs:()=>k,Concat:()=>P,Conv2D:()=>Z,Conv2DBackpropFilter:()=>pe,Conv2DBackpropInput:()=>ne,Conv3D:()=>fe,Conv3DBackpropFilterV2:()=>_e,Conv3DBackpropInputV2:()=>Be,Cos:()=>it,Cosh:()=>Ht,CropAndResize:()=>qe,Cumprod:()=>Nt,Cumsum:()=>mt,DataStorage:()=>wi,DenseBincount:()=>ct,DepthToSpace:()=>It,DepthwiseConv2dNative:()=>Dt,DepthwiseConv2dNativeBackpropFilter:()=>Bn,DepthwiseConv2dNativeBackpropInput:()=>tn,Diag:()=>ts,Dilation2D:()=>bn,Dilation2DBackpropFilter:()=>Vt,Dilation2DBackpropInput:()=>gt,Draw:()=>Ut,ENV:()=>Ku,Einsum:()=>Wt,Elu:()=>Pt,EluGrad:()=>Zr,Environment:()=>al,Equal:()=>Ju,Erf:()=>pl,Exp:()=>fl,ExpandDims:()=>Qu,Expm1:()=>ml,FFT:()=>td,Fill:()=>nd,FlipLeftRight:()=>sd,Floor:()=>gl,FloorDiv:()=>yl,FromPixels:()=>zd,FusedBatchNorm:()=>ec,FusedConv2D:()=>zc,FusedDepthwiseConv2D:()=>Bc,GatherNd:()=>rd,GatherV2:()=>tc,Greater:()=>nc,GreaterEqual:()=>bl,IFFT:()=>od,Identity:()=>xl,Imag:()=>id,IsFinite:()=>vl,IsInf:()=>wl,IsNan:()=>Sl,KernelBackend:()=>ha,LRN:()=>uc,LRNGrad:()=>ld,LeakyRelu:()=>sc,Less:()=>rc,LessEqual:()=>oc,LinSpace:()=>ad,Log:()=>Il,Log1p:()=>Cl,LogSoftmax:()=>h3,LogicalAnd:()=>ic,LogicalNot:()=>ac,LogicalOr:()=>lc,LogicalXor:()=>mC,LowerBound:()=>gC,MatrixBandPart:()=>yC,Max:()=>cc,MaxPool:()=>hc,MaxPool3D:()=>dc,MaxPool3DGrad:()=>cd,MaxPoolGrad:()=>ud,MaxPoolWithArgmax:()=>hd,Maximum:()=>Nl,Mean:()=>pc,Min:()=>fc,Minimum:()=>kl,MirrorPad:()=>mc,Mod:()=>Tl,MomentumOptimizer:()=>eg,Multinomial:()=>dd,Multiply:()=>_l,Neg:()=>gc,NonMaxSuppressionV3:()=>pd,NonMaxSuppressionV4:()=>fd,NonMaxSuppressionV5:()=>md,NotEqual:()=>yc,OP_SCOPE_SUFFIX:()=>Am,OneHot:()=>xc,OnesLike:()=>bc,Optimizer:()=>Jo,OptimizerConstructors:()=>Iy,Pack:()=>vc,PadV2:()=>wc,Pool:()=>bC,Pow:()=>El,Prelu:()=>Sc,Prod:()=>Ic,RMSPropOptimizer:()=>tg,RaggedGather:()=>gd,RaggedRange:()=>yd,RaggedTensorToTensor:()=>bd,Range:()=>xd,Rank:()=>S3,Real:()=>vd,RealDiv:()=>vt,Reciprocal:()=>Al,Reduction:()=>Ks,Relu:()=>$l,Relu6:()=>Rl,Reshape:()=>Cc,ResizeBilinear:()=>kc,ResizeBilinearGrad:()=>Sd,ResizeNearestNeighbor:()=>Nc,ResizeNearestNeighborGrad:()=>wd,Reverse:()=>Tc,RotateWithOffset:()=>Bd,Round:()=>Dl,Rsqrt:()=>Fl,SGDOptimizer:()=>Jd,ScatterNd:()=>Id,SearchSorted:()=>Nd,Select:()=>_c,Selu:()=>Ol,Sigmoid:()=>zl,Sign:()=>Ml,Sin:()=>Ll,Sinh:()=>Pl,Slice:()=>Ec,Softmax:()=>Dc,Softplus:()=>Bl,SpaceToBatchND:()=>$c,SparseFillEmptyRows:()=>kd,SparseReshape:()=>Td,SparseSegmentMean:()=>_d,SparseSegmentSum:()=>Ed,SparseToDense:()=>Ad,SplitV:()=>Rc,Sqrt:()=>Vl,Square:()=>$d,SquaredDifference:()=>Wl,StaticRegexReplace:()=>Fc,Step:()=>Kl,StridedSlice:()=>Rd,StringNGrams:()=>Dd,StringSplit:()=>Fd,StringToHashBucketFast:()=>Od,Sub:()=>Ul,Sum:()=>Ac,Tan:()=>Gl,Tanh:()=>Hl,Tensor:()=>Mt,TensorBuffer:()=>Zn,TensorScatterUpdate:()=>Cd,Tile:()=>jl,TopK:()=>Ld,Transform:()=>Pd,Transpose:()=>wa,Unique:()=>Md,Unpack:()=>Oc,UnsortedSegmentSum:()=>Lc,UpperBound:()=>xC,Variable:()=>Kc,ZerosLike:()=>Pc,_FusedMatMul:()=>Mc,abs:()=>Yn,acos:()=>Ig,acosh:()=>Cg,add:()=>ge,addN:()=>Cy,all:()=>sp,any:()=>Yc,argMax:()=>Vi,argMin:()=>Ng,asin:()=>kg,asinh:()=>Tg,atan:()=>_g,atan2:()=>Eg,atanh:()=>Ag,avgPool:()=>th,avgPool3d:()=>Dg,backend:()=>qm,backend_util:()=>Ge,basicLSTMCell:()=>Ny,batchNorm:()=>nu,batchNorm2d:()=>Fg,batchNorm3d:()=>Og,batchNorm4d:()=>Lg,batchToSpaceND:()=>nh,bincount:()=>Pg,bitwiseAnd:()=>ky,booleanMaskAsync:()=>i4,broadcastArgs:()=>Ty,broadcastTo:()=>Da,broadcast_util:()=>nt,browser:()=>ze,buffer:()=>kt,cast:()=>Te,ceil:()=>Mg,clipByValue:()=>Ls,clone:()=>No,complex:()=>Yo,concat:()=>Fn,concat1d:()=>zg,concat2d:()=>Bg,concat3d:()=>Vg,concat4d:()=>Wg,conv1d:()=>rp,conv2d:()=>ni,conv2dTranspose:()=>op,conv3d:()=>Gg,conv3dTranspose:()=>Hg,copyRegisteredKernels:()=>IC,cos:()=>sh,cosh:()=>ip,cosineWindow:()=>Ep,cumprod:()=>rh,cumsum:()=>ap,customGrad:()=>ko,denseBincount:()=>lp,deprecationWarn:()=>Z3,depthToSpace:()=>jg,depthwiseConv2d:()=>su,device_util:()=>Qe,diag:()=>Ey,dilation2d:()=>Kg,disableDeprecationWarnings:()=>_N,dispose:()=>ht,disposeVariables:()=>EN,div:()=>Me,divNoNan:()=>qg,dot:()=>Xg,dropout:()=>N1,einsum:()=>Fa,elu:()=>ru,enableDebugMode:()=>TN,enableProdMode:()=>kN,enclosingPowerOfTwo:()=>k1,engine:()=>wr,ensureShape:()=>Ay,env:()=>J,equal:()=>rr,erf:()=>Zg,euclideanNorm:()=>Jg,exp:()=>_s,expandDims:()=>_n,expm1:()=>Qg,eye:()=>up,fft:()=>gh,fill:()=>Ta,findBackend:()=>FN,findBackendFactory:()=>ON,floor:()=>au,floorDiv:()=>Zd,fused:()=>xe,gather:()=>lu,gatherND:()=>c4,gather_util:()=>ee,getBackend:()=>J3,getGradient:()=>wm,getKernel:()=>Wc,getKernelsForBackend:()=>Vd,grad:()=>GN,grads:()=>HN,greater:()=>Ps,greaterEqual:()=>si,ifft:()=>hu,imag:()=>Zc,image:()=>ms,inTopKAsync:()=>h4,io:()=>Ke,irfft:()=>Cp,isFinite:()=>e1,isInf:()=>t1,isNaN:()=>n1,keep:()=>ns,kernel_impls:()=>Jt,leakyRelu:()=>oh,less:()=>uu,lessEqual:()=>Hi,linalg:()=>F1,linspace:()=>Dy,localResponseNormalization:()=>s1,log:()=>or,log1p:()=>ih,logSigmoid:()=>r1,logSoftmax:()=>cp,logSumExp:()=>ah,logicalAnd:()=>Qr,logicalNot:()=>lh,logicalOr:()=>hp,logicalXor:()=>o1,losses:()=>I4,lowerBound:()=>Fy,matMul:()=>Tt,math:()=>wt,max:()=>Ir,maxPool:()=>uh,maxPool3d:()=>i1,maxPoolWithArgmax:()=>Oy,maximum:()=>To,mean:()=>Ln,memory:()=>Xd,meshgrid:()=>Ly,min:()=>ou,minimum:()=>ji,mirrorPad:()=>a1,mod:()=>l1,moments:()=>ch,movingAverage:()=>a4,mul:()=>G,multiRNNCell:()=>Py,multinomial:()=>My,neg:()=>vn,nextFrame:()=>O1,norm:()=>iu,notEqual:()=>La,oneHot:()=>Ea,ones:()=>Gs,onesLike:()=>ir,op:()=>V,outerProduct:()=>zy,pad:()=>ri,pad1d:()=>By,pad2d:()=>Vy,pad3d:()=>u1,pad4d:()=>Wy,pool:()=>c1,pow:()=>Qo,prelu:()=>dh,print:()=>jm,prod:()=>h1,profile:()=>AN,raggedGather:()=>Uy,raggedRange:()=>Gy,raggedTensorToTensor:()=>Hy,rand:()=>jy,randomGamma:()=>Ky,randomNormal:()=>mp,randomStandardNormal:()=>qy,randomUniform:()=>Ki,randomUniformInt:()=>Xy,range:()=>oi,ready:()=>RN,real:()=>eu,reciprocal:()=>f1,registerBackend:()=>Km,registerGradient:()=>d3,registerKernel:()=>Wd,relu:()=>eo,relu6:()=>gp,removeBackend:()=>DN,reshape:()=>H,reverse:()=>Nr,reverse1d:()=>Zy,reverse2d:()=>Yy,reverse3d:()=>Jy,reverse4d:()=>Qy,rfft:()=>yh,round:()=>yp,rsqrt:()=>bp,scalar:()=>Ze,scatterND:()=>l4,scatter_util:()=>Ne,searchSorted:()=>pp,selu:()=>xp,separableConv2d:()=>vp,serialization:()=>yn,setBackend:()=>Y3,setPlatform:()=>LN,setdiff1dAsync:()=>e4,sigmoid:()=>sr,sign:()=>g1,signal:()=>S4,sin:()=>wp,sinh:()=>Sp,slice:()=>at,slice1d:()=>ph,slice2d:()=>Ip,slice3d:()=>fh,slice4d:()=>cu,slice_util:()=>Re,softmax:()=>mh,softplus:()=>Oa,spaceToBatchND:()=>hh,sparse:()=>C4,sparseToDense:()=>u4,spectral:()=>w4,split:()=>Hs,sqrt:()=>xs,square:()=>dn,squaredDifference:()=>Np,squeeze:()=>on,stack:()=>js,step:()=>Pa,stridedSlice:()=>y1,string:()=>N4,sub:()=>Pe,sum:()=>He,sumOutType:()=>Hd,tan:()=>b1,tanh:()=>Ra,tensor:()=>vr,tensor1d:()=>jn,tensor2d:()=>ii,tensor3d:()=>lg,tensor4d:()=>t4,tensor5d:()=>n4,tensor6d:()=>s4,tensorScatterUpdate:()=>r4,tensor_util:()=>cn,test_util:()=>be,tidy:()=>q,tile:()=>Cr,time:()=>$N,topk:()=>x1,train:()=>Ma,transpose:()=>Gt,truncatedNormal:()=>kp,unique:()=>v1,unregisterGradient:()=>SC,unregisterKernel:()=>wC,unsortedSegmentSum:()=>Tp,unstack:()=>kr,upcastType:()=>Ws,upperBound:()=>o4,util:()=>ut,valueAndGrad:()=>jN,valueAndGrads:()=>KN,variable:()=>w1,variableGrads:()=>Q3,version_core:()=>Sy,where:()=>ws,whereAsync:()=>I1,zeros:()=>Qn,zerosLike:()=>jt});var Mn={};Y.r(Mn),Y.d(Mn,{json:()=>Z5});var er={};Y.r(er),Y.d(er,{json:()=>Y5});var ks={};Y.r(ks),Y.d(ks,{json:()=>J5});var _t={};Y.r(_t),Y.d(_t,{json:()=>Q5});var qt={};Y.r(qt),Y.d(qt,{json:()=>eA});var ft={};Y.r(ft),Y.d(ft,{json:()=>tA});var we={};Y.r(we),Y.d(we,{json:()=>nA});var me={};Y.r(me),Y.d(me,{json:()=>sA});var B={};Y.r(B),Y.d(B,{json:()=>rA});var ke={};Y.r(ke),Y.d(ke,{json:()=>oA});var rt={};Y.r(rt),Y.d(rt,{json:()=>iA});var Bt={};Y.r(Bt),Y.d(Bt,{json:()=>aA});var Et={};Y.r(Et),Y.d(Et,{json:()=>lA});var Xt={};Y.r(Xt),Y.d(Xt,{json:()=>uA});var kn={};Y.r(kn),Y.d(kn,{json:()=>cA});var Tn={};Y.r(Tn),Y.d(Tn,{json:()=>hA});var zn={};Y.r(zn),Y.d(zn,{json:()=>dA});var rn={};Y.r(rn),Y.d(rn,{json:()=>pA});var ys={};Y.r(ys),Y.d(ys,{json:()=>fA});var Rt={};Y.r(Rt),Y.d(Rt,{OP_SCOPE_SUFFIX:()=>Am,abs:()=>Yn,acos:()=>Ig,acosh:()=>Cg,add:()=>ge,addN:()=>Cy,all:()=>sp,any:()=>Yc,argMax:()=>Vi,argMin:()=>Ng,asin:()=>kg,asinh:()=>Tg,atan:()=>_g,atan2:()=>Eg,atanh:()=>Ag,avgPool:()=>th,avgPool3d:()=>Dg,basicLSTMCell:()=>Ny,batchNorm:()=>nu,batchNorm2d:()=>Fg,batchNorm3d:()=>Og,batchNorm4d:()=>Lg,batchToSpaceND:()=>nh,bincount:()=>Pg,bitwiseAnd:()=>ky,booleanMaskAsync:()=>i4,broadcastArgs:()=>Ty,broadcastTo:()=>Da,buffer:()=>kt,cast:()=>Te,ceil:()=>Mg,clipByValue:()=>Ls,clone:()=>No,complex:()=>Yo,concat:()=>Fn,concat1d:()=>zg,concat2d:()=>Bg,concat3d:()=>Vg,concat4d:()=>Wg,conv1d:()=>rp,conv2d:()=>ni,conv2dTranspose:()=>op,conv3d:()=>Gg,conv3dTranspose:()=>Hg,cos:()=>sh,cosh:()=>ip,cosineWindow:()=>Ep,cumprod:()=>rh,cumsum:()=>ap,denseBincount:()=>lp,depthToSpace:()=>jg,depthwiseConv2d:()=>su,diag:()=>Ey,dilation2d:()=>Kg,div:()=>Me,divNoNan:()=>qg,dot:()=>Xg,dropout:()=>N1,einsum:()=>Fa,elu:()=>ru,enclosingPowerOfTwo:()=>k1,ensureShape:()=>Ay,equal:()=>rr,erf:()=>Zg,euclideanNorm:()=>Jg,exp:()=>_s,expandDims:()=>_n,expm1:()=>Qg,eye:()=>up,fft:()=>gh,fill:()=>Ta,floor:()=>au,floorDiv:()=>Zd,fused:()=>xe,gather:()=>lu,gatherND:()=>c4,greater:()=>Ps,greaterEqual:()=>si,ifft:()=>hu,imag:()=>Zc,image:()=>ms,inTopKAsync:()=>h4,irfft:()=>Cp,isFinite:()=>e1,isInf:()=>t1,isNaN:()=>n1,leakyRelu:()=>oh,less:()=>uu,lessEqual:()=>Hi,linalg:()=>F1,linspace:()=>Dy,localResponseNormalization:()=>s1,log:()=>or,log1p:()=>ih,logSigmoid:()=>r1,logSoftmax:()=>cp,logSumExp:()=>ah,logicalAnd:()=>Qr,logicalNot:()=>lh,logicalOr:()=>hp,logicalXor:()=>o1,losses:()=>I4,lowerBound:()=>Fy,matMul:()=>Tt,max:()=>Ir,maxPool:()=>uh,maxPool3d:()=>i1,maxPoolWithArgmax:()=>Oy,maximum:()=>To,mean:()=>Ln,meshgrid:()=>Ly,min:()=>ou,minimum:()=>ji,mirrorPad:()=>a1,mod:()=>l1,moments:()=>ch,movingAverage:()=>a4,mul:()=>G,multiRNNCell:()=>Py,multinomial:()=>My,neg:()=>vn,norm:()=>iu,notEqual:()=>La,oneHot:()=>Ea,ones:()=>Gs,onesLike:()=>ir,op:()=>V,outerProduct:()=>zy,pad:()=>ri,pad1d:()=>By,pad2d:()=>Vy,pad3d:()=>u1,pad4d:()=>Wy,pool:()=>c1,pow:()=>Qo,prelu:()=>dh,print:()=>jm,prod:()=>h1,raggedGather:()=>Uy,raggedRange:()=>Gy,raggedTensorToTensor:()=>Hy,rand:()=>jy,randomGamma:()=>Ky,randomNormal:()=>mp,randomStandardNormal:()=>qy,randomUniform:()=>Ki,randomUniformInt:()=>Xy,range:()=>oi,real:()=>eu,reciprocal:()=>f1,relu:()=>eo,relu6:()=>gp,reshape:()=>H,reverse:()=>Nr,reverse1d:()=>Zy,reverse2d:()=>Yy,reverse3d:()=>Jy,reverse4d:()=>Qy,rfft:()=>yh,round:()=>yp,rsqrt:()=>bp,scalar:()=>Ze,scatterND:()=>l4,searchSorted:()=>pp,selu:()=>xp,separableConv2d:()=>vp,setdiff1dAsync:()=>e4,sigmoid:()=>sr,sign:()=>g1,signal:()=>S4,sin:()=>wp,sinh:()=>Sp,slice:()=>at,slice1d:()=>ph,slice2d:()=>Ip,slice3d:()=>fh,slice4d:()=>cu,softmax:()=>mh,softplus:()=>Oa,spaceToBatchND:()=>hh,sparse:()=>C4,sparseToDense:()=>u4,spectral:()=>w4,split:()=>Hs,sqrt:()=>xs,square:()=>dn,squaredDifference:()=>Np,squeeze:()=>on,stack:()=>js,step:()=>Pa,stridedSlice:()=>y1,string:()=>N4,sub:()=>Pe,sum:()=>He,tan:()=>b1,tanh:()=>Ra,tensor:()=>vr,tensor1d:()=>jn,tensor2d:()=>ii,tensor3d:()=>lg,tensor4d:()=>t4,tensor5d:()=>n4,tensor6d:()=>s4,tensorScatterUpdate:()=>r4,tile:()=>Cr,topk:()=>x1,transpose:()=>Gt,truncatedNormal:()=>kp,unique:()=>v1,unsortedSegmentSum:()=>Tp,unstack:()=>kr,upperBound:()=>o4,variable:()=>w1,where:()=>ws,whereAsync:()=>I1,zeros:()=>Qn,zerosLike:()=>jt});var us={};Y.r(us),Y.d(us,{addImpl:()=>Mv,bincountImpl:()=>S0,bincountReduceImpl:()=>Gv,bitwiseAndImpl:()=>Hv,castImpl:()=>Pv,ceilImpl:()=>jv,concatImpl:()=>Kv,equalImpl:()=>Zv,expImpl:()=>Jv,expm1Impl:()=>ew,floorImpl:()=>sw,gatherNdImpl:()=>rw,gatherV2Impl:()=>ow,greaterEqualImpl:()=>aw,greaterImpl:()=>iw,lessEqualImpl:()=>uw,lessImpl:()=>lw,linSpaceImpl:()=>cw,logImpl:()=>hw,maxImpl:()=>dw,maximumImpl:()=>fw,minimumImpl:()=>mw,multiplyImpl:()=>I0,negImpl:()=>yw,notEqualImpl:()=>bw,prodImpl:()=>Sw,raggedGatherImpl:()=>Cw,raggedRangeImpl:()=>kw,raggedTensorToTensorImpl:()=>Ew,rangeImpl:()=>Aw,rsqrtImpl:()=>$w,scatterImpl:()=>Xa,sigmoidImpl:()=>U9,simpleAbsImpl:()=>Bv,sliceImpl:()=>Uv,sparseFillEmptyRowsImpl:()=>Dw,sparseReshapeImpl:()=>Fw,sparseSegmentReductionImpl:()=>E0,sqrtImpl:()=>gz,staticRegexReplaceImpl:()=>Ow,stridedSliceImpl:()=>Lw,stringNGramsImpl:()=>Pw,stringSplitImpl:()=>Mw,stringToHashBucketFastImpl:()=>zw,subImpl:()=>tw,tileImpl:()=>Bw,topKImpl:()=>Ww,transposeImpl:()=>v0,uniqueImpl:()=>Gw});var fr=Y(6814),Wu=Y(95),Rr=Y(6761),Uu=Y(6958),he=Y(6689),ce=Y(5861);class wi{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class ha{refCount(t){return cs("refCount")}incRef(t){return cs("incRef")}timerAvailable(){return!0}time(t){return cs("time")}read(t){return cs("read")}readSync(t){return cs("readSync")}readToGPU(t,e){return cs("readToGPU")}numDataIds(){return cs("numDataIds")}disposeData(t,e){return cs("disposeData")}write(t,e,s){return cs("write")}move(t,e,s,r,o){return cs("move")}createTensorFromGPUData(t,e,s){return cs("createTensorFromGPUData")}memory(){return cs("memory")}floatPrecision(){return cs("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return cs("dispose")}}function cs(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Dr(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,tr(n,t,e)}function da(n,t){if(n.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${t.length}`);let e=n.length,s=0;for(;e>0;)s=Math.random()*e|0,e--,tr(n,e,s),tr(t,e,s)}function bs(n,t,e){return Math.max(n,Math.min(t,e))}function Kr(n){return n%2==0?n:n+1}function tr(n,t,e){const s=n[t];n[t]=n[e],n[e]=s}function Vs(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function Zh(n,t){const e=Math.random();return t*e+(1-e)*n}function Yh(n,t){let e=0;for(let s=0;s<n.length;s++){const r=Number(n[s])-Number(t[s]);e+=r*r}return e}function E(n,t){if(!n)throw new Error("string"==typeof t?t:t())}function Vn(n,t,e=""){E(At(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function nr(n){E(null!=n,()=>"The input to the tensor constructor must be a non-null value.")}function ie(n){if(0===n.length)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function mr(n){return 0===n.length}function Gu(n,t){if(n===t)return!0;if(null==n||null==t||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(null!==n[e]&&null!==t[e]&&n[e]!==t[e])return!1;return!0}function At(n,t){if(n===t)return!0;if(null==n||null==t||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function go(n){return n%1==0}function bm(n){if(null!=Math.tanh)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const t=Math.exp(2*n);return(t-1)/(t+1)}}function ol(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function pa(n){const t=new Uint32Array(n);for(let e=0;e<n;++e)t[e]=e;return Dr(t),t}function yo(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function Wn(n,t=(r=>0),e,s){return new Promise((r,o)=>{let i=0;const a=()=>{if(n())return void r();i++;const l=t(i);null!=e&&i>=e?o():null!=s?s(a,l):setTimeout(a,l)};a()})}function Si(n,t){let e=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)e*=n[o];else if(-1===n[o]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(-1===s){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(0===e)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const r=n.slice();return r[s]=t/e,r}function St(n,t){const e=t.length;return E((n=null==n?t.map((s,r)=>r):[].concat(n)).every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),E(n.every(s=>go(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function Qt(n,t){const e=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,o=null==t||r?null:St(t,n).sort();let i=0;for(let a=0;a<n.length;++a){if(null!=o){if(o[i]===a&&1!==n[a])throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(null==o[i]||o[i]>a)&&1===n[a]&&(e.push(n[a]),s.push(a)),o[i]<=a&&i++}1!==n[a]&&(e.push(n[a]),s.push(a))}return{newShape:e,keptDims:s}}function $n(n,t){return Cn(n,t)}function Cn(n,t){let e=null;if(null==n||"float32"===n)e=new Float32Array(t);else if("int32"===n)e=new Int32Array(t);else if("bool"===n)e=new Uint8Array(t);else{if("string"!==n)throw new Error(`Unknown data type ${n}`);e=new Array(t)}return e}function bo(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function gr(n){return"bool"===n||"complex64"===n||"float32"===n||"int32"===n||"string"===n}function Lt(n,t){return!("complex64"===t||"float32"===t&&"complex64"!==n||"int32"===t&&"float32"!==n&&"complex64"!==n||"bool"===t&&"bool"===n)}function Ii(n){if("float32"===n||"int32"===n)return 4;if("complex64"===n)return 8;if("bool"===n)return 1;throw new Error(`Unknown dtype ${n}`)}function fa(n){if(null==n)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function yr(n){return"string"==typeof n||n instanceof String}function Hu(n){return"boolean"==typeof n}function Fr(n){return"number"==typeof n}function qr(n){return Array.isArray(n)?qr(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Fr(n)?"float32":yr(n)?"string":Hu(n)?"bool":"float32"}function Ts(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Or(n,t){for(let e=t;e<n;++e)if(n%e==0)return e;return n}function Ye(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function Jh(n,t,e,s=!1){const r=new Array;if(1===t.length){const o=t[0]*(s?2:1);for(let i=0;i<o;i++)r[i]=e[n+i]}else{const o=t[0],i=t.slice(1),a=i.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<o;l++)r[l]=Jh(n+l*a,i,e,s)}return r}function hn(n,t,e=!1){if(0===n.length)return t[0];const s=n.reduce((r,o)=>r*o)*(e?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return Jh(0,n,t,e)}function Ci(n,t){if(Array.isArray(n))return n;if("float32"===t)return n instanceof Float32Array?n:new Float32Array(n);if("int32"===t)return n instanceof Int32Array?n:new Int32Array(n);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${t}`)}function il(n,t){const e=Un(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function Un(n,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(n);if("int32"===t)return new Int32Array(n);if("bool"===t)return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function ju(n,t){const e=n.reduce((s,r)=>s*r,1);if(null==t||"float32"===t)return hn(n,new Float32Array(e));if("int32"===t)return hn(n,new Int32Array(e));if("bool"===t)return hn(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Xn(n){n.forEach(t=>{E(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function br(n,t,e){if(0===t)return 0;if(1===t)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=e[r]*n[r];return s}function xo(n,t,e){if(0===t)return[];if(1===t)return[n];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/e[r]),n-=s[r]*e[r];return s[s.length-1]=n,s}function Xr(n){return n&&n.then&&"function"==typeof n.then}const Qh="tfjsflags";class al{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ho,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},null!=this.urlFlags[t]){const r=this.urlFlags[t];J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${r}.`),this.set(t,r)}}getAsync(t){var e=this;return(0,ce.Z)(function*(){return t in e.flags||(e.flags[t]=yield e.evaluateFlag(t)),e.flags[t]})()}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Xr(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);Qh in t&&t[Qh].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=function vm(n,t){const e=t.toLowerCase();return"true"===e||"false"===e?"true"===e:""+ +e===e?+e:t}(0,o)})}}function Ho(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(function xm(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}(t,s[0],s[1]),s.join("="))),t}function J(){return Ku}let qu,Ku=null;function Xu(){if(null==qu){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else{if(!(typeof self<"u"))throw new Error("Could not find a global object");n=self}qu=n}return qu}function ll(n,t){const e=function Zu(){const n=Xu();return null==n._tfGlobals&&(n._tfGlobals=new Map),n._tfGlobals}();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const ma="Abs",Ni="Acos",ki="Acosh",jo="Add",Ti="AddN",ul="All",cl="Any",Ko="ArgMax",ga="ArgMin",_i="Asin",Ei="Asinh",Ai="Atan",vo="Atanh",$i="Atan2",ya="AvgPool",hl="AvgPoolGrad",ba="AvgPool3D",dl="AvgPool3DGrad",Ri="BatchMatMul",Di="BatchToSpaceND",xa="Bincount",Fi="BitwiseAnd",Yu="BroadcastTo",va="BroadcastArgs",Oi="Cast",qo="Ceil",v="ClipByValue",N="Complex",k="ComplexAbs",P="Concat",Z="Conv2D",pe="Conv2DBackpropFilter",ne="Conv2DBackpropInput",fe="Conv3D",_e="Conv3DBackpropFilterV2",Be="Conv3DBackpropInputV2",it="Cos",Ht="Cosh",Nt="Cumprod",mt="Cumsum",qe="CropAndResize",ct="DenseBincount",It="DepthToSpace",Dt="DepthwiseConv2dNative",Bn="DepthwiseConv2dNativeBackpropFilter",tn="DepthwiseConv2dNativeBackpropInput",ts="Diag",bn="Dilation2D",gt="Dilation2DBackpropInput",Vt="Dilation2DBackpropFilter",Ut="Draw",vt="RealDiv",Wt="Einsum",Pt="Elu",Zr="EluGrad",pl="Erf",Ju="Equal",fl="Exp",Qu="ExpandDims",ml="Expm1",td="FFT",nd="Fill",sd="FlipLeftRight",gl="Floor",yl="FloorDiv",ec="FusedBatchNorm",tc="GatherV2",rd="GatherNd",nc="Greater",bl="GreaterEqual",xl="Identity",od="IFFT",id="Imag",vl="IsFinite",wl="IsInf",Sl="IsNan",sc="LeakyRelu",rc="Less",oc="LessEqual",ad="LinSpace",Il="Log",Cl="Log1p",ic="LogicalAnd",ac="LogicalNot",lc="LogicalOr",mC="LogicalXor",h3="LogSoftmax",gC="LowerBound",uc="LRN",ld="LRNGrad",yC="MatrixBandPart",cc="Max",Nl="Maximum",hc="MaxPool",ud="MaxPoolGrad",dc="MaxPool3D",cd="MaxPool3DGrad",hd="MaxPoolWithArgmax",pc="Mean",fc="Min",kl="Minimum",mc="MirrorPad",Tl="Mod",dd="Multinomial",_l="Multiply",gc="Neg",yc="NotEqual",pd="NonMaxSuppressionV3",fd="NonMaxSuppressionV4",md="NonMaxSuppressionV5",bc="OnesLike",xc="OneHot",vc="Pack",wc="PadV2",bC="Pool",El="Pow",Sc="Prelu",Ic="Prod",gd="RaggedGather",yd="RaggedRange",bd="RaggedTensorToTensor",xd="Range",vd="Real",Al="Reciprocal",$l="Relu",Cc="Reshape",Nc="ResizeNearestNeighbor",wd="ResizeNearestNeighborGrad",kc="ResizeBilinear",Sd="ResizeBilinearGrad",Rl="Relu6",Tc="Reverse",Dl="Round",Fl="Rsqrt",Id="ScatterNd",Cd="TensorScatterUpdate",Nd="SearchSorted",_c="Select",Ol="Selu",Ec="Slice",Ll="Sin",Pl="Sinh",Ml="Sign",zl="Sigmoid",Bl="Softplus",Vl="Sqrt",Ac="Sum",$c="SpaceToBatchND",Rc="SplitV",Dc="Softmax",kd="SparseFillEmptyRows",Td="SparseReshape",_d="SparseSegmentMean",Ed="SparseSegmentSum",Ad="SparseToDense",Wl="SquaredDifference",$d="Square",Fc="StaticRegexReplace",Rd="StridedSlice",Dd="StringNGrams",Fd="StringSplit",Od="StringToHashBucketFast",Ul="Sub",Gl="Tan",Hl="Tanh",jl="Tile",Ld="TopK",Pd="Transform",wa="Transpose",Md="Unique",Oc="Unpack",Lc="UnsortedSegmentSum",xC="UpperBound",Pc="ZerosLike",Kl="Step",zd="FromPixels",Bd="RotateWithOffset",Mc="_FusedMatMul",zc="FusedConv2D",Bc="FusedDepthwiseConv2D";function xr(...n){J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(...n)}function vC(...n){J().getBool("IS_TEST")||J().getBool("PROD")||console.log(...n)}const ql=ll("kernelRegistry",()=>new Map),Vc=ll("gradRegistry",()=>new Map);function Wc(n,t){const e=Sm(n,t);return ql.get(e)}function wm(n){return Vc.get(n)}function Vd(n){const t=ql.entries(),e=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[o,i]=r,[a]=o.split("_");a===n&&e.push(i)}return e}function Wd(n){const{kernelName:t,backendName:e}=n,s=Sm(t,e);ql.has(s)&&xr(`The kernel '${t}' for backend '${e}' is already registered`),ql.set(s,n)}function d3(n){const{kernelName:t}=n;Vc.has(t)&&J().getBool("DEBUG")&&xr(`Overriding the gradient for '${t}'`),Vc.set(t,n)}function wC(n,t){const e=Sm(n,t);if(!ql.has(e))throw new Error(`The kernel '${n}' for backend '${t}' is not registered`);ql.delete(e)}function SC(n){if(!Vc.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);Vc.delete(n)}function IC(n,t){Vd(n).forEach(s=>{Wd(Object.assign({},s,{backendName:t}))})}function Sm(n,t){return`${t}_${n}`}function p3(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var f3=Y(186);const Sa=Y.n(f3)()||f3;function Uc(n){return Sa.fromString(n,!0,16)}const m3=Uc("c3a5c85c97cb3127"),Ia=Uc("b492b66fbe98f273"),Rs=Uc("9ae16a3b2f90404f");function Im(n){return n.xor(n.shru(47))}function g3(n,t,e){const s=n.slice(t,t+e);return Sa.fromBytes(Array.from(s),!0,!0)}function xn(n,t){return g3(n,t,8)}function y3(n,t){return g3(n,t,4)}function hs(n,t){return 0===t?n:n.shru(t).or(n.shl(64-t))}function Li(n,t,e=Uc("9ddfea08eb382d69")){let s=n.xor(t).mul(e);s=s.xor(s.shru(47));let r=t.xor(s).mul(e);return r=r.xor(r.shru(47)),r=r.mul(e),r}function Ud(n,t,e,s){return function NC(n,t,e,s,r,o){r=r.add(n),o=hs(o.add(r).add(s),21);const i=r;return r=(r=r.add(t)).add(e),o=o.add(hs(r,44)),[r.add(s),o.add(i)]}(xn(n,t),xn(n,t+8),xn(n,t+16),xn(n,t+24),e,s)}function b3(n,t=n.length){const e=Sa.fromNumber(81,!0);if(t<=32)return t<=16?function kC(n,t=n.length){if(t>=8){const e=Rs.add(2*t),s=xn(n,0).add(Rs),r=xn(n,t-8);return Li(hs(r,37).mul(e).add(s),hs(s,25).add(r).mul(e),e)}if(t>=4){const e=Rs.add(2*t);return Li(y3(n,0).shl(3).add(t),y3(n,t-4),e)}if(t>0){const i=t+(n[t-1]<<2);return Im(Rs.mul(n[0]+(n[t>>1]<<8)).xor(m3.mul(i))).mul(Rs)}return Rs}(n,t):function TC(n,t=n.length){const e=Rs.add(2*t),s=xn(n,0).mul(Ia),r=xn(n,8),o=xn(n,t-8).mul(e),i=xn(n,t-16).mul(Rs);return Li(hs(s.add(r),43).add(hs(o,30)).add(i),s.add(hs(r.add(Rs),18)).add(o),e)}(n,t);if(t<=64)return function _C(n,t=n.length){const e=Rs.add(2*t),s=xn(n,0).mul(Rs),r=xn(n,8),o=xn(n,t-8).mul(e),i=xn(n,t-16).mul(Rs),a=hs(s.add(r),43).add(hs(o,30)).add(i),l=Li(a,s.add(hs(r.add(Rs),18)).add(o),e),u=xn(n,16).mul(e),c=xn(n,24),h=a.add(xn(n,t-32)).mul(e),d=l.add(xn(n,t-24)).mul(e);return Li(hs(u.add(c),43).add(hs(h,30)).add(d),u.add(hs(c.add(s),18)).add(h),e)}(n,t);let s=e,r=e.mul(Ia).add(113),o=Im(r.mul(Rs).add(113)).mul(Rs),i=[Sa.UZERO,Sa.UZERO],a=[Sa.UZERO,Sa.UZERO];s=s.mul(Rs).add(xn(n,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{s=hs(s.add(r).add(i[0]).add(xn(n,l+8)),37).mul(Ia),r=hs(r.add(i[1]).add(xn(n,l+48)),42).mul(Ia),s=s.xor(a[1]),r=r.add(i[0]).add(xn(n,l+40)),o=hs(o.add(a[0]),33).mul(Ia),i=Ud(n,l,i[1].mul(Ia),s.add(a[0])),a=Ud(n,l+32,o.add(a[1]),r.add(xn(n,l+16))),[o,s]=[s,o],l+=64}while(l!==u);const h=Ia.add(o.and(255).shl(1));return l=c,a[0]=a[0].add(t-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),s=hs(s.add(r).add(i[0]).add(xn(n,l+8)),37).mul(h),r=hs(r.add(i[1]).add(xn(n,l+48)),42).mul(h),s=s.xor(a[1].mul(9)),r=r.add(i[0].mul(9).add(xn(n,l+40))),o=hs(o.add(a[0]),33).mul(h),i=Ud(n,l,i[1].mul(h),s.add(a[0])),a=Ud(n,l+32,o.add(a[1]),r.add(xn(n,l+16))),[o,s]=[s,o],Li(Li(i[0],a[0],h).add(Im(r).mul(m3)).add(o),Li(i[1],a[1],h).add(s),h)}function Xo(n,t){return"string"===t?wo(n):Pi([n],t)}function Pi(n,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=So(n)),J().getBool("DEBUG")&&bo(n,t),function EC(n,t){return n instanceof Float32Array&&"float32"===t||n instanceof Int32Array&&"int32"===t||n instanceof Uint8Array&&"bool"===t}(n,t))return n;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(n);if("int32"===t)return new Int32Array(n);if("bool"===t){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)0!==Math.round(n[s])&&(e[s]=1);return e}throw new Error(`Unknown data type ${t}`)}function Ds(){return J().platform.now()}function AC(n,t){return J().platform.fetch(n,t)}function wo(n,t="utf-8"){return t=t||"utf-8",J().platform.encode(n,t)}function Zo(n,t="utf-8"){return t=t||"utf-8",J().platform.decode(n,t)}function ds(n){return null!=J().platform.isTypedArray?J().platform.isTypedArray(n):p3(n)}function So(n,t=[],e=!1){if(null==t&&(t=[]),"boolean"==typeof n||"number"==typeof n||"string"==typeof n||Xr(n)||null==n||ds(n)&&e)t.push(n);else if(Array.isArray(n)||ds(n))for(let s=0;s<n.length;++s)So(n[s],t,e);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)So(n[r],t,e)}return t}class $C{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new DC)}profileKernel(t,e,s){let r;const o=()=>{r=s()};let i;const a=Ds();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(o);else{o();for(const u of r)u.dataSync();i=Promise.resolve({kernelMs:Ds()-a})}if(J().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const c=r[u];c.data().then(h=>{RC(h,c.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:i.then(u=>u.kernelMs),extraInfo:i.then(u=>null!=u.getExtraProfileInfo?u.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:r,inputs:o,extraInfo:i}=t;s.forEach(a=>{Promise.all([a.data(),r,i]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],o,l[2])})})}}function RC(n,t,e){if("float32"!==t)return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${e}'`),!0}return!1}class DC{logKernelProfile(t,e,s,r,o,i){const a="number"==typeof r?yo(`${r}ms`,9):r.error,l=yo(t,25),u=e.rank,c=e.size,h=yo(e.shape.toString(),14);let d="";for(const p in o){const f=o[p];if(null!=f){const g=f.shape||e.shape,m=g.length;d+=`${p}: ${m}D ${m>0?g:""} `}}console.log(`%c${l}\t%c${a}\t%c${u}D ${h}\t%c${c}\t%c${d}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const x3=20,Gc=3,Cm=7;function LC(n,t,e,s){const r=Ye(t),o=function PC(n,t,e,s){const r=ie(t),o=s[s.length-1],i=new Array(o).fill(0),a=t.length,l="complex64"===e?jc(n):n;if(a>1)for(let u=0;u<r/o;u++){const c=u*o;for(let h=0;h<o;h++)i[h]=Math.max(i[h],Hc(l[c+h],0,e).length)}return i}(n,t,e,r),i=t.length,a=Gd(n,t,e,r,o),l=["Tensor"];return s&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join("\n")),l.join("\n")}function Hc(n,t,e){let s;return s=Array.isArray(n)?`${parseFloat(n[0].toFixed(Cm))} + ${parseFloat(n[1].toFixed(Cm))}j`:yr(n)?`'${n}'`:"bool"===e?v3(n):parseFloat(n.toFixed(Cm)).toString(),yo(s,t)}function v3(n){return 0===n?"false":"true"}function Gd(n,t,e,s,r,o=!0){const i="complex64"===e?2:1,a=t[0],l=t.length;if(0===l)return"complex64"===e?[Hc(jc(n)[0],0,e)]:"bool"===e?[v3(n[0])]:[n[0].toString()];if(1===l){if(a>x3){let y=Array.from(n.slice(0,Gc*i)),b=Array.from(n.slice((a-Gc)*i,a*i));return"complex64"===e&&(y=jc(y),b=jc(b)),["["+y.map((S,w)=>Hc(S,r[w],e)).join(", ")+", ..., "+b.map((S,w)=>Hc(S,r[a-Gc+w],e)).join(", ")+"]"]}return["["+("complex64"===e?jc(n):Array.from(n)).map((m,y)=>Hc(m,r[y],e)).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*i,d=[];if(a>x3){for(let g=0;g<Gc;g++){const m=g*h;d.push(...Gd(n.slice(m,m+h),u,e,c,r,!1))}d.push("...");for(let g=a-Gc;g<a;g++){const m=g*h;d.push(...Gd(n.slice(m,m+h),u,e,c,r,g===a-1))}}else for(let g=0;g<a;g++){const m=g*h;d.push(...Gd(n.slice(m,m+h),u,e,c,r,g===a-1))}const p=2===l?",":"";d[0]="["+(a>0?d[0]+p:"");for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+p;let f=",\n";for(let g=2;g<l;g++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":f),d}function jc(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}class Zn{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=ie(t),null!=s){const r=s.length;E(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Cn(e,this.size),this.strides=Ye(t)}set(t,...e){0===e.length&&(e=[0]),E(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e])throw new Error(`Requested out of range element at ${t}.   Buffer shape=${this.shape}`);e++}let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=this.strides[r]*t[r];return this.values[s]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Yr().makeTensor(this.values,this.shape,this.dtype)}}let Yr=null,Xl=null,w3=null;class Mt{constructor(t,e,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=ie(t),this.strides=Ye(t),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){var t=this;return(0,ce.Z)(function*(){const e=yield t.data();return Xl.buffer(t.shape,t.dtype,e)})()}bufferSync(){return Xl.buffer(this.shape,this.dtype,this.dataSync())}array(){var t=this;return(0,ce.Z)(function*(){const e=yield t.data();return hn(t.shape,e,"complex64"===t.dtype)})()}arraySync(){return hn(this.shape,this.dataSync(),"complex64"===this.dtype)}data(){var t=this;return(0,ce.Z)(function*(){t.throwIfDisposed();const e=Yr().read(t.dataId);if("string"===t.dtype){const s=yield e;try{return s.map(r=>Zo(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e})()}dataToGPU(t){return this.throwIfDisposed(),Yr().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Yr().readSync(this.dataId);if("string"===this.dtype)try{return t.map(e=>Zo(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}bytes(){var t=this;return(0,ce.Z)(function*(){t.throwIfDisposed();const e=yield Yr().read(t.dataId);return"string"===t.dtype?e:new Uint8Array(e.buffer)})()}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Yr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Xl.print(this,t)}clone(){return this.throwIfDisposed(),Xl.clone(this)}toString(t=!1){return LC(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Xl.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),Yr().makeVariable(this,t,e,s)}}function le(){return ll("Tensor",()=>Mt)}Object.defineProperty(Mt,Symbol.hasInstance,{value:n=>!!n&&null!=n.data&&null!=n.dataSync&&null!=n.throwIfDisposed}),le();class Kc extends Mt{constructor(t,e,s,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!At(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Yr().disposeTensor(this),this.dataId=t.dataId,Yr().incRef(this,null)}dispose(){Yr().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Kc,Symbol.hasInstance,{value:n=>n instanceof Mt&&null!=n.assign&&n.assign instanceof Function});var S3=function(n){return n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6",n}(S3||{}),I3=function(n){return n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64",n}(I3||{}),C3=function(n){return n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64",n}(C3||{}),N3=function(n){return n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64",n}(N3||{}),k3=function(n){return n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64",n}(k3||{});const VC={float32:N3,int32:I3,bool:C3,complex64:k3};function Ws(n,t){if("string"===n||"string"===t){if("string"===n&&"string"===t)return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return VC[n][t]}function Hd(n){return Ws(n,"int32")}function T3(n){return null!=n&&"object"==typeof n&&"texture"in n&&n.texture instanceof WebGLTexture}function _3(n){return typeof GPUBuffer<"u"&&null!=n&&"object"==typeof n&&"buffer"in n&&n.buffer instanceof GPUBuffer}function Rn(n,t){if(n.dtype===t.dtype)return[n,t];const e=Ws(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function E3(n,t){E(n.dtype===t.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${t.dtype}) input must match`)}function WC(n,t){return t.some(e=>e.id===n.id)}function Nm(n){const t=[];return A3(n,t,new Set),t}function A3(n,t,e){if(null==n)return;if(n instanceof Mt)return void t.push(n);if(!function UC(n){return Array.isArray(n)||"object"==typeof n}(n))return;const s=n;for(const r in s){const o=s[r];e.has(o)||(e.add(o),A3(o,t,e))}}function km(n){return null!=n.kernelName}class $3{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}let GC=(()=>{class n{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new $3}ready(){var e=this;return(0,ce.Z)(function*(){if(null!=e.pendingBackendInit)return e.pendingBackendInit.then(()=>{});if(null!=e.backendInstance)return;const s=e.getSortedBackends();for(let r=0;r<s.length;r++){const o=s[r];if(yield e.initializeBackend(o).success)return void(yield e.setBackend(o))}throw new Error("Could not initialize any backends, all backend initializations failed.")})()}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:s}=this.initializeBackendsAndReturnBest();if(s)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:s}=this.initializeBackend(e);if(s)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,s,r=1){return e in this.registryFactory?(xr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:s,priority:r},!0)}setBackend(e){var s=this;return(0,ce.Z)(function*(){if(null==s.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(s.backendName=e,null==s.registry[e]){s.backendInstance=null;const{success:r,asyncInit:o}=s.initializeBackend(e);if(!(o?yield r:r))return!1}return s.backendInstance=s.registry[e],s.setupRegisteredKernels(),s.profiler=new $C(s.backendInstance),!0})()}setupRegisteredKernels(){Vd(this.backendName).forEach(s=>{null!=s.setupFunc&&s.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Vd(e).forEach(r=>{null!=r.disposeFunc&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const s=this.registryFactory[e];if(null==s)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=s.factory();if(!r||r instanceof ha||"function"!=typeof r.then)return this.registry[e]=r,{success:!0,asyncInit:!1};{const o=++this.pendingBackendInitId,i=r.then(a=>!(o<this.pendingBackendInitId||(this.registry[e]=a,this.pendingBackendInit=null,0))).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,xr(`Initialization of backend ${e} failed`),xr(a.stack||a.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}}catch(r){return xr(`Initialization of backend ${e} failed`),xr(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,s)=>this.registryFactory[s].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let s=0;s<e.length;s++){const r=e[s],{success:o,asyncInit:i}=this.initializeBackend(r);if(i||o)return{name:r,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,s){const r=this.state.tensorInfo.get(s),o=r.backend,i=this.readSync(s),a=o.refCount(s);o.disposeData(s,!0),r.backend=e,e.move(s,i,r.shape,r.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,s){let o,r=null;if(null==s){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");s=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof s)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(o),()=>(o=s(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,s,r){e();try{const o=r();return s(),o}catch(o){throw s(),o}}nextTensorId(){return n.nextTensorId++}nextVariableId(){return n.nextVariableId++}clone(e){const s=z.runKernel(xl,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[s],a=>({x:()=>z.runKernel(Oi,{x:a},{dtype:"float32"})}),[],{}),s}runKernel(e,s,r){if(null==Wc(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:s,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,s,r){const o=this.backend.numDataIds();let i=0;r.forEach(u=>{i+="complex64"===u.dtype?3:1});const l=o-s-i-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${e}'`)}runKernelFunc(e){let s,r=[];const o=this.isTapeOn(),i=this.state.numBytes,a=this.state.numTensors;let l,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const c=km(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(km(e)){const{kernelName:g,inputs:m,attrs:y}=e,b=Wc(g,this.backendName);E(null!=b,()=>`Cannot find registered kernel '${g}' for backend '${this.backendName}'`),l=()=>{const S=this.backend.numDataIds();u=b.kernelFunc({inputs:m,attrs:y,backend:this.backend});const w=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(g,S,w);const I=w.map(_=>null!=_.rank?_:this.makeTensorFromTensorInfo(_));if(o){const _=this.getTensorsForGradient(g,m,I);r=this.saveTensorsForBackwardMode(_)}return I}}else{const{forwardFunc:g}=e,m=y=>{o&&(r=y.map(b=>this.keep(this.clone(b))))};l=()=>{const y=this.backend.numDataIds();u=this.tidy(()=>g(this.backend,m));const b=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,b),b}}const{inputs:h,attrs:d}=e,p=km(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(c,h,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),s=f.outputs):s=l()}),o&&this.addTapeNode(c,h,s,p,r,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map(g=>null!=h[g]?h[g].shape:null),outputShapes:s.map(g=>g.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?s:s[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,s,r){const o=wm(e);if(null!=o){const i=o.inputsToSave||[],a=o.outputsToSave||[];let l;o.saveAllInputs?(E(Array.isArray(s),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(s).map(c=>s[c])):l=i.map(c=>s[c]);const u=r.filter((c,h)=>a[h]);return l.concat(u)}return[]}makeTensor(e,s,r,o){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");o=o||this.backend;let i=e;"string"===(r=r||"float32")&&yr(e[0])&&(i=e.map(u=>wo(u)));const a=o.write(i,s,r),l=new Mt(s,r,a,this.nextTensorId());if(this.trackTensor(l,o),"string"===r){const u=this.state.tensorInfo.get(a),c=fa(i);this.state.numBytes+=c-u.bytes,u.bytes=c}return l}makeTensorFromDataId(e,s,r,o){return this.makeTensorFromTensorInfo({dataId:e,shape:s,dtype:r=r||"float32"},o)}makeTensorFromTensorInfo(e,s){const{dataId:r,shape:o,dtype:i}=e,a=new Mt(o,i,r,this.nextTensorId());return this.trackTensor(a,s),a}makeVariable(e,s=!0,r,o){r=r||this.nextVariableId().toString(),null!=o&&o!==e.dtype&&(e=e.cast(o));const i=new Kc(e,s,r,this.nextTensorId());if(null!=this.state.registeredVariables[i.name])throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(e,s){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let r=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(r=e.size*Ii(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:s||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof Kc||this.track(e)}incRef(e,s){this.trackTensor(e,s),this.backend.incRef(e.dataId)}removeDataId(e,s){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===s&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const s=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=s.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const r=e.size*Ii(e.dtype);this.state.numBytes-=r}s.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,s.backend)}disposeVariables(){for(const e in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[e])}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}profile(e){var s=this;return(0,ce.Z)(function*(){s.state.profiling=!0;const r=s.state.numBytes,o=s.state.numTensors;s.state.activeProfile.kernels=[],s.state.activeProfile.result=yield e(),s.state.profiling=!1,s.state.activeProfile.peakBytes=Math.max(...s.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),s.state.activeProfile.newBytes=s.state.numBytes-r,s.state.activeProfile.newTensors=s.state.numTensors-o;for(const i of s.state.activeProfile.kernels)i.kernelTimeMs=yield i.kernelTimeMs,i.extraInfo=yield i.extraInfo;return s.state.activeProfile})()}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,s,r,o,i,a){const l={id:this.state.nextTapeNodeId++,kernelName:e,inputs:s,outputs:r,saved:i},u=wm(e);null!=u&&(o=u.gradFunc),null!=o&&(l.gradient=c=>(c=c.map((h,d)=>{if(null==h){const p=r[d],f=Un(p.size,p.dtype);return this.makeTensor(f,p.shape,p.dtype)}return h}),o(c.length>1?c:c[0],i,a))),this.state.activeTape.push(l)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const s={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(s.name=e),this.state.scopeStack.push(s),this.state.activeScope=s}endScope(e){const s=Nm(e),r=new Set(s.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const a=this.state.activeScope.track[i];!a.kept&&!r.has(a.id)&&a.dispose()}const o=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],s.forEach(i=>{!i.kept&&i.scopeId===o.id&&this.track(i)})}gradients(e,s,r,o=!1){if(E(s.length>0,()=>"gradients() received an empty list of xs."),null!=r&&"float32"!==r.dtype)throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));E(i instanceof Mt,()=>"The result y returned by f() must be a tensor.");const a=function FC(n,t,e){const s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<n.length;l++){const u=n[l],c=u.inputs;for(const h in c){const d=c[h];let p=!1;for(let f=0;f<t.length;f++)if(s[d.id]){u.outputs.forEach(g=>s[g.id]=!0),p=!0,r[u.id]=!0;break}if(p)break}}const o={};o[e.id]=!0;const i={};for(let l=n.length-1;l>=0;l--){const u=n[l],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(o[u.outputs[h].id]){for(const d in c)o[c[d].id]=!0,i[u.id]=!0;break}}const a=[];for(let l=0;l<n.length;l++){const u=n[l];if(r[u.id]&&i[u.id]){const c={};for(const d in u.inputs){const p=u.inputs[d];s[p.id]&&(c[d]=p)}const h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,a.push(h)}}return a}(this.state.activeTape,s,i);if(!o&&0===a.length&&s.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const l={};l[i.id]=null==r?function HC(n){const t=il(ie(n),"float32");return z.makeTensor(t,n,"float32")}(i.shape):r,function OC(n,t,e,s){for(let r=t.length-1;r>=0;r--){const o=t[r],i=[];if(o.outputs.forEach(l=>{const u=n[l.id];i.push(null!=u?u:null)}),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const a=o.gradient(i);for(const l in o.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const u=e(()=>a[l]());if("float32"!==u.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=o.inputs[l];if(!At(u.shape,c.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(null==n[c.id])n[c.id]=u;else{const h=n[c.id];n[c.id]=s(h,u),h.dispose()}}}}(l,a,c=>this.tidy(c),jC);const u=s.map(c=>l[c.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(c=>{for(const h of c.saved)h.dispose()}),this.state.activeTape=null),{value:i,grads:u}})}customGrad(e){return E(Ts(e),()=>"The f passed in customGrad(f) must be a function."),(...s)=>{let r;E(s.every(l=>l instanceof Mt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const o={};return s.forEach((l,u)=>{o[u]=l}),this.runKernelFunc({forwardFunc:(l,u)=>(r=e(...s,u),E(r.value instanceof Mt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),E(Ts(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),backwardsFunc:(l,u)=>{const c=r.gradFunc(l,u),h=Array.isArray(c)?c:[c];E(h.length===s.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),E(h.every(p=>p instanceof Mt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return h.forEach((p,f)=>{d[f]=()=>p}),d},inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,s){return this.state.tensorInfo.get(e).backend.readToGPU(e,s)}time(e){var s=this;return(0,ce.Z)(function*(){const r=Ds(),o=yield s.backend.time(e);return o.wallMs=Ds()-r,o})()}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new $3;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return n.nextTensorId=0,n.nextVariableId=0,n})();function R3(){const n=Xu();if(null==n._tfengine){const t=new al(n);n._tfengine=new GC(t)}return function ed(n){Ku=n}(n._tfengine.ENV),function MC(n){Yr=n}(()=>n._tfengine),n._tfengine}const z=R3();function jC(n,t){return z.runKernel(jo,{a:n,b:t})}let Tm;function qC(n){Tm=n}function _m(n){if(void 0!==Tm)return Tm;if(n||function KC(){return typeof navigator<"u"&&null!=navigator}()){if(n||(n=navigator),"ReactNative"===n.product)return!0;const t=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");return t?/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4)):n.userAgentData&&n.userAgentData.mobile}return!1}function Em(){return typeof window<"u"&&null!=window.document||typeof WorkerGlobalScope<"u"}const Us=J();function Io(n,t){let e=n;if(ds(n))return"string"===t?[]:[n.length];if(T3(n))return[n.height,n.width*(n.channels||"RGBA").length];if(_3(n))return[n.buffer.size/(null==t?4:Ii(t))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||ds(e)&&"string"!==t;)s.push(e.length),e=e[0];return Array.isArray(n)&&J().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&D3(n,s,[]),s}function D3(n,t,e){if(e=e||[],!Array.isArray(n)&&!ds(n))return void E(0===t.length,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);E(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),E(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let r=0;r<n.length;++r)D3(n[r],s,e.concat(r))}function F3(n,t,e,s){if("string_or_numeric"!==n){if(null==n)throw new Error("Expected dtype cannot be null.");if("numeric"!==n&&n!==t||"numeric"===n&&"string"===t)throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function $(n,t,e,s="numeric"){if(n instanceof Mt)return F3(s,n.dtype,t,e),n;let r=qr(n);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),F3(s,r,t,e),null==n||!ds(n)&&!Array.isArray(n)&&"number"!=typeof n&&"boolean"!=typeof n&&"string"!=typeof n)throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${null==n?"null":n.constructor.name}'`);const o=Io(n,r);!ds(n)&&!Array.isArray(n)&&(n=[n]);const a="string"!==r?Pi(n,r):So(n,[],!0);return z.makeTensor(a,o,r)}function qc(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,i)=>$(o,`${t}[${i}]`,e,s))}Us.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Us.registerFlag("IS_BROWSER",()=>Em()),Us.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"),Us.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Us.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),Us.registerFlag("PROD",()=>!1),Us.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Us.getBool("DEBUG")),Us.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Us.registerFlag("IS_TEST",()=>!1),Us.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Us.getBool("DEBUG")),Us.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),Us.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),Us.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);const Am="__op";function V(n){const t=Object.keys(n);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e+=Am;const r=(...o)=>{z.startScope(e);try{const i=s(...o);return Xr(i)&&console.error("Cannot return a Promise inside of tidy."),z.endScope(i),i}catch(i){throw z.endScope(null),i}};return Object.defineProperty(r,"name",{value:e,configurable:!0}),r}const Yo=V({complex_:function XC(n,t){const e=$(n,"real","complex"),s=$(t,"imag","complex");return Vn(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`),z.runKernel(N,{real:e,imag:s})}});function Mi(n,t,e,s){if(null==s)s=qr(n);else if("complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(_3(n)||T3(n)){if("float32"!==s&&"int32"!==s)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return z.backend.createTensorFromGPUData(n,t||e,s)}if(!ds(n)&&!Array.isArray(n)&&"number"!=typeof n&&"boolean"!=typeof n&&"string"!=typeof n)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Xn(t);const r=ie(t),o=ie(e);E(r===o,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${o}`);for(let i=0;i<e.length;++i){const l=i!==e.length-1||e[i]!==ie(t.slice(i));E(e[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!ds(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n="string"!==s?Pi(n,s):So(n,[],!0),z.makeTensor(n,t,s)}function vr(n,t,e){return Mi(n,t,Io(n,e),e)}const $m={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Jr{static join(t){return new Jr(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,null==t||(t instanceof Array||(t=[t]),0===(t=t.map(s=>ds(s)?s.buffer:s)).length))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let s=0;s<t.length;s++){const r=t[s];s!==t.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=e+r.byteLength;this.shards.push({buffer:r,start:e,end:o}),e=o}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),(e=Math.min(this.byteLength,e))<=t)return new ArrayBuffer(0);const s=this.findShardForByte(t);if(-1===s)throw new Error(`Could not find start shard for byte ${t}`);const o=new ArrayBuffer(e-t),i=new Uint8Array(o);let a=0;for(let l=s;l<this.shards.length;l++){const u=this.shards[l],h=t+a-u.start,d=a,f=Math.min(e,u.end)-u.start,g=new Uint8Array(u.buffer,h,f-h);if(i.set(g,d),a+=g.length,e<u.end)break}return o}findShardForByte(t){if(0===this.shards.length||t<0||t>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(r){return t<r.start?-1:t>=r.end?1:0}if(0===e(this.shards[this.previousShardIndex]))return this.previousShardIndex;const s=function ZC(n,t){let e=0,s=n.length;for(;e<=s;){const r=Math.floor((s-e)/2)+e,o=t(n[r]);if(0===o)return r;o<0?s=r:e=r+1}return-1}(this.shards,e);return-1===s?-1:(this.previousShardIndex=s,this.previousShardIndex)}}const jd=4;function Rm(n,t){return Dm.apply(this,arguments)}function Dm(){return Dm=(0,ce.Z)(function*(n,t){const e=[],s=[],r=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<r.length;++i){const a=r[i],l=Array.isArray(n)?n[i].tensor:n[a];if("float32"!==l.dtype&&"int32"!==l.dtype&&"bool"!==l.dtype&&"string"!==l.dtype&&"complex64"!==l.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const u={name:a,shape:l.shape,dtype:l.dtype};if("string"===l.dtype){const c=new Promise(function(){var h=(0,ce.Z)(function*(d){const p=yield l.bytes(),f=p.reduce((y,b)=>y+b.length,0)+jd*p.length,g=new Uint8Array(f);let m=0;for(let y=0;y<p.length;y++){const b=p[y],S=new Uint8Array(new Uint32Array([b.length]).buffer);g.set(S,m),m+=jd,g.set(b,m),m+=b.length}d(g)});return function(d){return h.apply(this,arguments)}}());s.push(c)}else s.push(l.data());null!=t&&(u.group=t),e.push(u)}return{data:YC(yield Promise.all(s)),specs:e}}),Dm.apply(this,arguments)}function O3(n,t){const e=new Jr(n),s={};let r,o=0;for(const i of t){const a=i.name,l=i.dtype,u=i.shape,c=ie(u);let h;if("quantization"in i){const d=i.quantization;if("uint8"===d.dtype||"uint16"===d.dtype){if(!("min"in d)||!("scale"in d))throw new Error(`Weight ${i.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==d.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==l)throw new Error(`Weight ${i.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${l}.`)}const p=$m[d.dtype],f=e.slice(o,o+c*p),g="uint8"===d.dtype?new Uint8Array(f):new Uint16Array(f);if("float32"===l)if("uint8"===d.dtype||"uint16"===d.dtype){h=new Float32Array(g.length);for(let m=0;m<g.length;m++)h[m]=g[m]*d.scale+d.min}else{if("float16"!==d.dtype)throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);void 0===r&&(r=sN()),h=r(g)}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${a}': ${l}`);if("uint8"!==d.dtype&&"uint16"!==d.dtype)throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);h=new Int32Array(g.length);for(let m=0;m<g.length;m++)h[m]=Math.round(g[m]*d.scale+d.min)}o+=c*p}else if("string"===l){const d=ie(i.shape);h=[];for(let p=0;p<d;p++){const f=new Uint32Array(e.slice(o,o+jd))[0];o+=jd;const g=new Uint8Array(e.slice(o,o+f));h.push(g),o+=f}}else{const d=$m[l],p=e.slice(o,o+c*d);if("float32"===l)h=new Float32Array(p);else if("int32"===l)h=new Int32Array(p);else if("bool"===l)h=new Uint8Array(p);else{if("complex64"!==l)throw new Error(`Unsupported dtype in weight '${a}': ${l}`);{h=new Float32Array(p);const f=new Float32Array(h.length/2),g=new Float32Array(h.length/2);for(let b=0;b<f.length;b++)f[b]=h[2*b],g[b]=h[2*b+1];const m=vr(f,u,"float32"),y=vr(g,u,"float32");s[a]=Yo(m,y),m.dispose(),y.dispose()}}o+=c*d}"complex64"!==l&&(s[a]=vr(h,u,l))}return s}function YC(n){if(null===n)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(o=>{if(t+=o.byteLength,e.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(t);let r=0;return e.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const Fm=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function L3(n){return Fm?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function P3(n){return Jr.join(n)}function M3(n){for(n=n.trim();n.endsWith("/");)n=n.slice(0,n.length-1);const e=n.split("/");return e[e.length-1]}function z3(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return null!=n.signature&&(e.signature=n.signature),null!=n.userDefinedMetadata&&(e.userDefinedMetadata=n.userDefinedMetadata),null!=n.modelInitializer&&(e.modelInitializer=n.modelInitializer),null!=n.initializerSignature&&(e.initializerSignature=n.initializerSignature),null!=n.trainingConfig&&(e.trainingConfig=n.trainingConfig),e}function B3(n,t,e){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(null!=n.trainingConfig&&(s.trainingConfig=n.trainingConfig),null!=n.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=e}return null!=n.signature&&(s.signature=n.signature),null!=n.userDefinedMetadata&&(s.userDefinedMetadata=n.userDefinedMetadata),null!=n.modelInitializer&&(s.modelInitializer=n.modelInitializer),null!=n.initializerSignature&&(s.initializerSignature=n.initializerSignature),s}function Om(n,t){return Lm.apply(this,arguments)}function Lm(){return(Lm=(0,ce.Z)(function*(n,t){let e,s;return null!=n.weightsManifest&&([e,s]=yield t(n.weightsManifest)),B3(n,e,s)})).apply(this,arguments)}function Xc(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==n.modelTopology?0:L3(JSON.stringify(n.modelTopology)),weightSpecsBytes:null==n.weightSpecs?0:L3(JSON.stringify(n.weightSpecs)),weightDataBytes:null==n.weightData?0:new Jr(n.weightData).byteLength}}function V3(n){const t=[];for(const e of n)t.push(...e.weights);return t}function sN(){const n=function eN(){const n=e=>{let s=e<<13,r=0;for(;!(8388608&s);)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=n(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function tN(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let t=1;t<31;t++)n[t]=t<<23;for(let t=33;t<63;t++)n[t]=2147483648+(t-32<<23);return n}(),e=function nN(){const n=new Uint32Array(64);for(let t=0;t<64;t++)n[t]=1024;return n[0]=n[32]=0,n}();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let i=0;i<s.length;i++){const a=s[i];o[i]=n[e[a>>10]+(1023&a)]+t[a>>10]}return new Float32Array(r)}}class Dn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Dn.instance&&(Dn.instance=new Dn),Dn.instance}static registerSaveRouter(t){Dn.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Dn.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Dn.getHandlers(t,"save")}static getLoadHandlers(t,e){return Dn.getHandlers(t,"load",e)}static getHandlers(t,e,s){const r=[];return("load"===e?Dn.getInstance().loadRouters:Dn.getInstance().saveRouters).forEach(i=>{const a=i(t,s);null!==a&&r.push(a)}),r}}const rN=n=>Dn.registerSaveRouter(n),oN=n=>Dn.registerLoadRouter(n),W3=n=>Dn.getSaveHandlers(n),iN=(n,t)=>Dn.getLoadHandlers(n,t),Kd="tensorflowjs",Ca="models_store",zi="model_info_store";function zm(){if(!J().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Bm(n){const t=n.result;t.createObjectStore(Ca,{keyPath:"modelPath"}),t.createObjectStore(zi,{keyPath:"modelPath"})}let Zl=(()=>{class n{constructor(e){if(this.indexedDB=zm(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}save(e){var s=this;return(0,ce.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return s.databaseAction(s.modelPath,e)})()}load(){var e=this;return(0,ce.Z)(function*(){return e.databaseAction(e.modelPath)})()}databaseAction(e,s){return new Promise((r,o)=>{const i=this.indexedDB.open(Kd,1);i.onupgradeneeded=()=>Bm(i),i.onsuccess=()=>{const a=i.result;if(null==s){const l=a.transaction(Ca,"readonly"),c=l.objectStore(Ca).get(this.modelPath);c.onsuccess=()=>{if(null==c.result)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(c.result.modelArtifacts)},c.onerror=h=>(a.close(),o(c.error)),l.oncomplete=()=>a.close()}else{s.weightData=Jr.join(s.weightData);const l=Xc(s),u=a.transaction(zi,"readwrite");let h,d,c=u.objectStore(zi);try{h=c.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(p){return o(p)}h.onsuccess=()=>{d=a.transaction(Ca,"readwrite");const p=d.objectStore(Ca);let f;try{f=p.put({modelPath:this.modelPath,modelArtifacts:s,modelArtifactsInfo:l})}catch(g){return o(g)}f.onsuccess=()=>r({modelArtifactsInfo:l}),f.onerror=g=>{c=u.objectStore(zi);const m=c.delete(this.modelPath);m.onsuccess=()=>(a.close(),o(f.error)),m.onerror=y=>(a.close(),o(f.error))}},h.onerror=p=>(a.close(),o(h.error)),u.oncomplete=()=>{null==d?a.close():d.oncomplete=()=>a.close()}}},i.onerror=a=>o(i.error)})}}return n.URL_SCHEME="indexeddb://",n})();const U3=n=>J().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Zl.URL_SCHEME)?function aN(n){return new Zl(n)}(n.slice(Zl.URL_SCHEME.length)):null;Dn.registerSaveRouter(U3),Dn.registerLoadRouter(U3);class uN{constructor(){this.indexedDB=zm()}listModels(){var t=this;return(0,ce.Z)(function*(){return new Promise((e,s)=>{const r=t.indexedDB.open(Kd,1);r.onupgradeneeded=()=>Bm(r),r.onsuccess=()=>{const o=r.result,i=o.transaction(zi,"readonly"),l=i.objectStore(zi).getAll();l.onsuccess=()=>{const u={};for(const c of l.result)u[c.modelPath]=c.modelArtifactsInfo;e(u)},l.onerror=u=>(o.close(),s(l.error)),i.oncomplete=()=>o.close()},r.onerror=o=>s(r.error)})})()}removeModel(t){var e=this;return(0,ce.Z)(function*(){return t=function lN(n){return n.startsWith(Zl.URL_SCHEME)?n.slice(Zl.URL_SCHEME.length):n}(t),new Promise((s,r)=>{const o=e.indexedDB.open(Kd,1);o.onupgradeneeded=()=>Bm(o),o.onsuccess=()=>{const i=o.result,a=i.transaction(zi,"readwrite"),l=a.objectStore(zi),u=l.get(t);let c;u.onsuccess=()=>{if(null==u.result)return i.close(),r(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const h=l.delete(t),d=()=>{c=i.transaction(Ca,"readwrite");const f=c.objectStore(Ca).delete(t);f.onsuccess=()=>s(u.result.modelArtifactsInfo),f.onerror=g=>r(u.error)};h.onsuccess=d,h.onerror=p=>(d(),i.close(),r(u.error))}},u.onerror=h=>(i.close(),r(u.error)),a.oncomplete=()=>{null==c?i.close():c.oncomplete=()=>i.close()}},o.onerror=i=>r(o.error)})})()}}const Co="/",Na="tensorflowjs_models",G3="info",cN="model_topology",hN="weight_specs",dN="weight_data",pN="model_metadata";function H3(n){return{info:[Na,n,G3].join(Co),topology:[Na,n,cN].join(Co),weightSpecs:[Na,n,hN].join(Co),weightData:[Na,n,dN].join(Co),modelMetadata:[Na,n,pN].join(Co)}}function j3(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function K3(n){const t=n.split(Co);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(Co)}let Yl=(()=>{class n{constructor(e){if(!J().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=H3(this.modelPath)}save(e){var s=this;return(0,ce.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const r=JSON.stringify(e.modelTopology),o=JSON.stringify(e.weightSpecs),i=Xc(e),a=Jr.join(e.weightData);try{return s.LS.setItem(s.keys.info,JSON.stringify(i)),s.LS.setItem(s.keys.topology,r),s.LS.setItem(s.keys.weightSpecs,o),s.LS.setItem(s.keys.weightData,function JC(n){if(Fm)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,r=t.length;s<r;s++)e+=String.fromCharCode(t[s]);return btoa(e)}(a)),s.LS.setItem(s.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0})),{modelArtifactsInfo:i}}catch{throw j3(s.keys),new Error(`Failed to save model '${s.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}})()}load(){var e=this;return(0,ce.Z)(function*(){const s=JSON.parse(e.LS.getItem(e.keys.info));if(null==s)throw new Error(`In local storage, there is no model with name '${e.modelPath}'`);if("JSON"!==s.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const r={},o=JSON.parse(e.LS.getItem(e.keys.topology));if(null==o)throw new Error(`In local storage, the topology of model '${e.modelPath}' is missing.`);r.modelTopology=o;const i=JSON.parse(e.LS.getItem(e.keys.weightSpecs));if(null==i)throw new Error(`In local storage, the weight specs of model '${e.modelPath}' are missing.`);r.weightSpecs=i;const a=e.LS.getItem(e.keys.modelMetadata);if(null!=a){const u=JSON.parse(a);r.format=u.format,r.generatedBy=u.generatedBy,r.convertedBy=u.convertedBy,null!=u.signature&&(r.signature=u.signature),null!=u.userDefinedMetadata&&(r.userDefinedMetadata=u.userDefinedMetadata),null!=u.modelInitializer&&(r.modelInitializer=u.modelInitializer),null!=u.initializerSignature&&(r.initializerSignature=u.initializerSignature),null!=u.trainingConfig&&(r.trainingConfig=u.trainingConfig)}const l=e.LS.getItem(e.keys.weightData);if(null==l)throw new Error(`In local storage, the binary weight values of model '${e.modelPath}' are missing.`);return r.weightData=function QC(n){if(Fm){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}(l),r})()}}return n.URL_SCHEME="localstorage://",n})();const q3=n=>J().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Yl.URL_SCHEME)?function mN(n){return new Yl(n)}(n.slice(Yl.URL_SCHEME.length)):null;Dn.registerSaveRouter(q3),Dn.registerLoadRouter(q3);class gN{constructor(){E(J().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),E(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){var t=this;return(0,ce.Z)(function*(){const e={},s=Na+Co,r=Co+G3;for(let o=0;o<t.LS.length;++o){const i=t.LS.key(o);i.startsWith(s)&&i.endsWith(r)&&(e[K3(i)]=JSON.parse(t.LS.getItem(i)))}return e})()}removeModel(t){var e=this;return(0,ce.Z)(function*(){const s=H3(t=function fN(n){return n.startsWith(Yl.URL_SCHEME)?n.slice(Yl.URL_SCHEME.length):n}(t));if(null==e.LS.getItem(s.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(e.LS.getItem(s.info));return j3(s),r})()}}const Jl="://";class Fs{constructor(){this.managers={}}static getInstance(){return null==Fs.instance&&(Fs.instance=new Fs),Fs.instance}static registerManager(t,e){E(null!=t,()=>"scheme must not be undefined or null."),t.endsWith(Jl)&&(t=t.slice(0,t.indexOf(Jl))),E(t.length>0,()=>"scheme must not be an empty string.");const s=Fs.getInstance();E(null==s.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=Fs.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Fs.getInstance().managers)}}function qd(n){if(-1===n.indexOf(Jl))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Fs.getSchemes().join(",")}`);return{scheme:n.split(Jl)[0],path:n.split(Jl)[1]}}function X3(n,t){return Vm.apply(this,arguments)}function Vm(){return(Vm=(0,ce.Z)(function*(n,t,e=!1){E(n!==t,()=>`Old path and new path are the same: '${n}'`);const s=Dn.getLoadHandlers(n);E(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),E(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],o=Dn.getSaveHandlers(t);E(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),E(o.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);const i=o[0],a=qd(n).scheme,l=qd(n).path,u=a===qd(n).scheme,c=yield r.load();e&&u&&(yield Fs.getManager(a).removeModel(l));const h=yield i.save(c);return e&&!u&&(yield Fs.getManager(a).removeModel(l)),h.modelArtifactsInfo})).apply(this,arguments)}function yN(){return Wm.apply(this,arguments)}function Wm(){return(Wm=(0,ce.Z)(function*(){const n=Fs.getSchemes(),t={};for(const e of n){const s=yield Fs.getManager(e).listModels();for(const r in s)t[e+Jl+r]=s[r]}return t})).apply(this,arguments)}function bN(n){return Um.apply(this,arguments)}function Um(){return(Um=(0,ce.Z)(function*(n){const t=qd(n);return Fs.getManager(t.scheme).removeModel(t.path)})).apply(this,arguments)}function xN(n,t){return Gm.apply(this,arguments)}function Gm(){return(Gm=(0,ce.Z)(function*(n,t){return X3(n,t,!1)})).apply(this,arguments)}function vN(n,t){return Hm.apply(this,arguments)}function Hm(){return(Hm=(0,ce.Z)(function*(n,t){return X3(n,t,!0)})).apply(this,arguments)}class wN{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){typeof window>"u"||!J().getBool("USE_SETTIMEOUTCUSTOM")?setTimeout(t,e):(this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{s.source===window&&s.data.name===this.messageName&&(s.stopPropagation(),(0,this.functionRefs[s.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0)))}isTypedArray(t){return p3(t)}}if(J().get("IS_BROWSER")){J().setPlatform("browser",new wN);try{Fs.registerManager(Yl.URL_SCHEME,new gN)}catch{}try{Fs.registerManager(Zl.URL_SCHEME,new uN)}catch{}}let Ql;function kt(n,t="float32",e){return t=t||"float32",Xn(n),new Zn(n,t,e)}J().get("IS_NODE")&&!J().get("IS_BROWSER")&&J().setPlatform("node",new class IN{constructor(){this.util=Y(8628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=J().global.fetch?J().global.fetch(t,e):(null==Ql&&(Ql=Y(5410)),Ql(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}});const Te=V({cast_:function CN(n,t){const e=$(n,"x","cast");if(!gr(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==e.dtype||"string"!==t&&"string"===e.dtype)throw new Error("Only strings can be casted to strings");return z.runKernel(Oi,{x:e},{dtype:t})}}),No=V({clone_:function NN(n){const e={x:$(n,"x","clone","string_or_numeric")};return z.runKernel(xl,e)}});function jm(n,t=!1){console.log(n.toString(t))}function kN(){J().set("PROD",!0)}function TN(){J().set("DEBUG",!0)}function _N(){J().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Z3(n){J().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function EN(){z.disposeVariables()}function wr(){return z}function Xd(){return z.memory()}function AN(n){return z.profile(n)}function q(n,t){return z.tidy(n,t)}function ht(n){Nm(n).forEach(e=>e.dispose())}function ns(n){return z.keep(n)}function $N(n){return z.time(n)}function Y3(n){return z.setBackend(n)}function RN(){return z.ready()}function J3(){return z.backendName}function DN(n){z.removeBackend(n)}function FN(n){return z.findBackend(n)}function ON(n){return z.findBackendFactory(n)}function Km(n,t,e=1){return z.registerBackend(n,t,e)}function qm(){return z.backend}function LN(n,t){J().setPlatform(n,t)}R3(),function zC(n){Xl=n}({buffer:kt,cast:Te,clone:No,print:jm}),function BC(n){w3=n}(Z3);const ge=V({add_:function PN(n,t){let e=$(n,"a","add"),s=$(t,"b","add");return[e,s]=Rn(e,s),z.runKernel(jo,{a:e,b:s})}}),Zd=V({floorDiv_:function MN(n,t){let e=$(n,"a","floorDiv"),s=$(t,"b","floorDiv");return[e,s]=Rn(e,s),z.runKernel(yl,{a:e,b:s})}}),Me=V({div_:function zN(n,t){let e=$(n,"a","div"),s=$(t,"b","div");return[e,s]=Rn(e,s),"int32"===e.dtype&&"int32"===s.dtype?Zd(e,s):z.runKernel(vt,{a:e,b:s},{})}}),G=V({mul_:function BN(n,t){let e=$(n,"a","mul"),s=$(t,"b","mul");return[e,s]=Rn(e,s),z.runKernel(_l,{a:e,b:s})}}),xs=V({sqrt_:function VN(n){const e={x:$(n,"x","sqrt","float32")};return z.runKernel(Vl,e)}}),dn=V({square_:function WN(n){const t=$(n,"x","square");return z.runKernel("Square",{x:t},{})}}),jt=V({zerosLike_:function UN(n){const e={x:$(n,"x","zerosLike")};return z.runKernel(Pc,e)}});function GN(n){return E(Ts(n),()=>"The f passed in grad(f) must be a function"),(t,e)=>{const s=$(t,"x","tf.grad","string_or_numeric"),r=null!=e?$(e,"dy","tf.grad"):null;return z.tidy(()=>{const{value:o,grads:i}=z.gradients(()=>n(s),[s],r);return null!=r&&Vn(o.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Yd(i),i[0]})}}function HN(n){return E(Ts(n),()=>"The f passed in grads(f) must be a function"),(t,e)=>{E(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const s=qc(t,"args","tf.grads","string_or_numeric"),r=null!=e?$(e,"dy","tf.grads"):null;return z.tidy(()=>{const{value:o,grads:i}=z.gradients(()=>n(...s),s,r);return null!=r&&Vn(o.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Yd(i),i})}}function jN(n){return E(Ts(n),()=>"The f passed in valueAndGrad(f) must be a function"),(t,e)=>{E(t instanceof Mt,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),E(null==e||e instanceof Mt,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:r}=z.gradients(()=>n(t),[t],e);return Yd(s),{grad:s[0],value:r}}}function KN(n){return E(Ts(n),()=>"The f passed in valueAndGrads(f) must be a function"),(t,e)=>{E(Array.isArray(t)&&t.every(r=>r instanceof Mt),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),E(null==e||e instanceof Mt,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=z.gradients(()=>n(...t),t,e);return null!=e&&Vn(s.value.shape,e.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Yd(s.grads),s}}function Q3(n,t){E(Ts(n),()=>"The f passed in variableGrads(f) must be a function"),E(null==t||Array.isArray(t)&&t.every(u=>u instanceof Kc),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=null!=t;if(!e){t=[];for(const u in z.registeredVariables)t.push(z.registeredVariables[u])}const s=e?t.filter(u=>!u.trainable):null,r=t.length;E((t=t.filter(u=>u.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const{value:i,grads:a}=z.gradients(n,t,null,!0);E(a.some(u=>null!=u),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),E(0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const l={};return t.forEach((u,c)=>{null!=a[c]&&(l[u.name]=a[c])}),null!=s&&s.forEach(u=>l[u.name]=null),{value:i,grads:l}}function ko(n){return z.customGrad(n)}function Yd(n){if(n.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function Ze(n,t){if((ds(n)&&"string"!==t||Array.isArray(n))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ds(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Mi(n,[],[],t)}const qN=new Map,Xm=new Map;class ka{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Sr{constructor(){this.classNameMap={}}static getMap(){return null==Sr.instance&&(Sr.instance=new Sr),Sr.instance}static register(t){Sr.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Se(n,t,e){E(null!=n.className,()=>"Class being registered does not have the static className property defined."),E("string"==typeof n.className,()=>"className is required to be a string, but got type "+typeof n.className),E(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=n.className);const r=t+">"+e;return Sr.register(n),qN.set(r,n),Xm.set(n,r),n}function XN(n){return Xm.has(n)?Xm.get(n):n.className}class Jo extends ka{minimize(t,e=!1,s){const{value:r,grads:o}=this.computeGradients(t,s);if(null!=s){const i=s.map(a=>({name:a.name,tensor:o[a.name]}));this.applyGradients(i)}else this.applyGradients(o);return ht(o),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Q3(t,e)}dispose(){null!=this.iterations_&&ht(this.iterations_)}saveIterations(){var t=this;return(0,ce.Z)(function*(){return null==t.iterations_&&(t.iterations_=0),{name:"iter",tensor:Ze(t.iterations_,"int32")}})()}getWeights(){return(0,ce.Z)(function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})()}setWeights(t){var e=this;return(0,ce.Z)(function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${e.getClassName()}`)})()}extractIterations(t){var e=this;return(0,ce.Z)(function*(){return e.iterations_=(yield t[0].tensor.data())[0],t.slice(1)})()}}Object.defineProperty(Jo,Symbol.hasInstance,{value:n=>null!=n.minimize&&null!=n.computeGradients&&null!=n.applyGradients});class Zm extends Jo{static get className(){return"Adadelta"}constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==s&&(this.epsilon=z.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=z.registeredVariables[s];null==this.accumulatedGrads[r]&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:q(()=>jt(o).variable(!1))}),null==this.accumulatedUpdates[r]&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:q(()=>jt(o).variable(!1))});const a=Array.isArray(t)?t[r].tensor:t[s];if(null==a)return;const l=this.accumulatedGrads[r].variable,u=this.accumulatedUpdates[r].variable;q(()=>{const c=ge(G(l,this.rho),G(dn(a),1-this.rho)),h=G(Me(xs(ge(u,this.epsilon)),xs(ge(l,this.epsilon))),a),d=ge(G(u,this.rho),G(dn(h),1-this.rho));l.assign(c),u.assign(d);const p=ge(G(h,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ht(this.accumulatedGrads.map(t=>t.variable)),ht(this.accumulatedUpdates.map(t=>t.variable)))}getWeights(){var t=this;return(0,ce.Z)(function*(){const e=[...t.accumulatedGrads,...t.accumulatedUpdates];return[yield t.saveIterations()].concat(e.map(s=>({name:s.originalName,tensor:s.variable})))})()}setWeights(t){var e=this;return(0,ce.Z)(function*(){const s=(t=yield e.extractIterations(t)).length/2;e.accumulatedGrads=t.slice(0,s).map(o=>({originalName:o.name,variable:o.tensor.variable(!1)})),e.accumulatedUpdates=t.slice(s,2*s).map(o=>({originalName:o.name,variable:o.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}function Ta(n,t,e){return Xn(n),e=e||qr(t),z.runKernel(nd,{},{shape:n,value:t,dtype:e})}class Ym extends Jo{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=z.registeredVariables[s];null==this.accumulatedGrads[r]&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:q(()=>Ta(o.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(t)?t[r].tensor:t[s];if(null==i)return;const a=this.accumulatedGrads[r].variable;q(()=>{const l=ge(a,dn(i));a.assign(l);const u=ge(G(Me(i,xs(ge(l,z.backend.epsilon()))),-this.learningRate),o);o.assign(u)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ht(this.accumulatedGrads.map(t=>t.variable))}getWeights(){var t=this;return(0,ce.Z)(function*(){return[yield t.saveIterations()].concat(t.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))})()}setWeights(t){var e=this;return(0,ce.Z)(function*(){t=yield e.extractIterations(t),e.accumulatedGrads=t.map(r=>({originalName:r.name,variable:r.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}const Qo=V({pow_:function ZN(n,t){let e=$(n,"base","pow"),s=$(t,"exp","pow");return[e,s]=Rn(e,s),z.runKernel(El,{a:e,b:s})}}),Pe=V({sub_:function YN(n,t){let e=$(n,"a","sub"),s=$(t,"b","sub");return[e,s]=Rn(e,s),z.runKernel(Ul,{a:e,b:s})}});class Jm extends Jo{static get className(){return"Adam"}constructor(t,e,s,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],q(()=>{this.accBeta1=Ze(e).variable(),this.accBeta2=Ze(s).variable()}),null==r&&(this.epsilon=z.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);q(()=>{const s=Pe(1,this.accBeta1),r=Pe(1,this.accBeta2);e.forEach((o,i)=>{const a=z.registeredVariables[o];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:q(()=>jt(a).variable(!1))}),null==this.accumulatedSecondMoment[i]&&(this.accumulatedSecondMoment[i]={originalName:`${o}/v`,variable:q(()=>jt(a).variable(!1))});const u=Array.isArray(t)?t[i].tensor:t[o];if(null==u)return;const c=this.accumulatedFirstMoment[i].variable,h=this.accumulatedSecondMoment[i].variable,d=ge(G(c,this.beta1),G(u,1-this.beta1)),p=ge(G(h,this.beta2),G(dn(u),1-this.beta2)),f=Me(d,s),g=Me(p,r);c.assign(d),h.assign(p);const m=ge(G(Me(f,ge(xs(g),this.epsilon)),-this.learningRate),a);a.assign(m)}),this.accBeta1.assign(G(this.accBeta1,this.beta1)),this.accBeta2.assign(G(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ht(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&ht(this.accumulatedSecondMoment.map(t=>t.variable))}getWeights(){var t=this;return(0,ce.Z)(function*(){const e=[...t.accumulatedFirstMoment,...t.accumulatedSecondMoment];return[yield t.saveIterations()].concat(e.map(s=>({name:s.originalName,tensor:s.variable})))})()}setWeights(t){var e=this;return(0,ce.Z)(function*(){t=yield e.extractIterations(t),q(()=>{e.accBeta1.assign(Qo(e.beta1,e.iterations_+1)),e.accBeta2.assign(Qo(e.beta2,e.iterations_+1))});const s=t.length/2;e.accumulatedFirstMoment=t.slice(0,s).map(o=>({originalName:o.name,variable:o.tensor.variable(!1)})),e.accumulatedSecondMoment=t.slice(s,2*s).map(o=>({originalName:o.name,variable:o.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}const Yn=V({abs_:function JN(n){const t=$(n,"x","abs");return z.runKernel("complex64"===t.dtype?k:ma,{x:t})}});function _a(n,t){const e=n.length,s=[];for(let r=0;r<e;r++){const o=e-1-r;(t[t.length-1-r]||1)>1&&1===(n[o]||1)&&s.unshift(o)}return s}function Jn(n,t){const e=[];for(let s=0;s<t.length;s++){const r=n[n.length-s-1],o=t.length-s-1;(null==r||1===r&&t[o]>1)&&e.unshift(o)}return e}function yt(n,t){const e=Math.max(n.length,t.length),s=new Array(e);for(let r=0;r<e;r++){let o=n[n.length-r-1];null==o&&(o=1);let i=t[t.length-r-1];if(null==i&&(i=1),1===o)s[e-r-1]=i;else if(1===i)s[e-r-1]=o;else{if(o!==i)throw Error(`Operands could not be broadcast together with shapes ${n} and ${t}.`);s[e-r-1]=o}}return s}const To=V({maximum_:function QN(n,t){let e=$(n,"a","maximum"),s=$(t,"b","maximum");return[e,s]=Rn(e,s),"bool"===e.dtype&&(e=Te(e,"int32"),s=Te(s,"int32")),yt(e.shape,s.shape),z.runKernel(Nl,{a:e,b:s})}});class Qm extends Jo{static get className(){return"Adamax"}constructor(t,e,s,r=null,o=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],q(()=>{this.iteration=Ze(0).variable(),this.accBeta1=Ze(e).variable()}),null==r&&(this.epsilon=z.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);q(()=>{const s=Pe(1,this.accBeta1),r=Me(-this.learningRate,ge(G(this.iteration,this.decay),1));e.forEach((o,i)=>{const a=z.registeredVariables[o];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:jt(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[i]&&(this.accumulatedWeightedInfNorm[i]={originalName:`${o}/v`,variable:jt(a).variable(!1)});const u=Array.isArray(t)?t[i].tensor:t[o];if(null==u)return;const c=this.accumulatedFirstMoment[i].variable,h=this.accumulatedWeightedInfNorm[i].variable,d=ge(G(c,this.beta1),G(u,1-this.beta1)),p=G(h,this.beta2),f=Yn(u),g=To(p,f);c.assign(d),h.assign(g);const m=ge(G(Me(r,s),Me(d,ge(g,this.epsilon))),a);a.assign(m)}),this.iteration.assign(ge(this.iteration,1)),this.accBeta1.assign(G(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ht(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&ht(this.accumulatedWeightedInfNorm.map(t=>t.variable))}getWeights(){return(0,ce.Z)(function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})()}setWeights(t){return(0,ce.Z)(function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}class Jd extends Jo{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=Array.isArray(t)?t[r].tensor:t[s];if(null==o)return;const i=z.registeredVariables[s];q(()=>{const a=ge(G(this.c,o),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=ns(Ze(-t))}dispose(){this.c.dispose()}getWeights(){var t=this;return(0,ce.Z)(function*(){return[yield t.saveIterations()]})()}setWeights(t){var e=this;return(0,ce.Z)(function*(){if(0!==(t=yield e.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")})()}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}class eg extends Jd{static get className(){return"Momentum"}constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=Ze(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=z.registeredVariables[s];null==this.accumulations[r]&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:q(()=>jt(o).variable(!1))});const i=this.accumulations[r].variable,a=Array.isArray(t)?t[r].tensor:t[s];null!=a&&q(()=>{let l;const u=ge(G(this.m,i),a);l=ge(G(this.c,this.useNesterov?ge(a,G(u,this.m)):u),o),i.assign(u),o.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ht(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}getWeights(){var t=this;return(0,ce.Z)(function*(){return[yield t.saveIterations()].concat(t.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))})()}setWeights(t){var e=this;return(0,ce.Z)(function*(){t=yield e.extractIterations(t),e.accumulations=t.map(r=>({originalName:r.name,variable:r.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}class tg extends Jo{static get className(){return"RMSProp"}constructor(t,e=.9,s=0,r=null,o=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,null==r&&(this.epsilon=z.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=z.registeredVariables[s],i=!1;null==this.accumulatedMeanSquares[r]&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:q(()=>jt(o).variable(i))}),null==this.accumulatedMoments[r]&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:q(()=>jt(o).variable(i))}),null==this.accumulatedMeanGrads[r]&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:q(()=>jt(o).variable(i))});const a=Array.isArray(t)?t[r].tensor:t[s];if(null==a)return;const l=this.accumulatedMeanSquares[r].variable,u=this.accumulatedMoments[r].variable;q(()=>{const c=ge(G(l,this.decay),G(dn(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,d=ge(G(h,this.decay),G(a,1-this.decay)),p=Me(G(a,this.learningRate),xs(Pe(c,ge(dn(d),this.epsilon)))),f=ge(G(u,this.momentum),p);l.assign(c),h.assign(d),u.assign(f);const g=Pe(o,f);o.assign(g)}else{const h=ge(G(l,this.decay),G(dn(a),1-this.decay)),d=ge(G(u,this.momentum),Me(G(a,this.learningRate),xs(ge(h,this.epsilon))));l.assign(h),u.assign(d);const p=Pe(o,d);o.assign(p)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ht(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&ht(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&ht(this.accumulatedMoments.map(t=>t.variable))}getWeights(){var t=this;return(0,ce.Z)(function*(){const e=[...t.accumulatedMeanSquares,...t.accumulatedMoments];return t.centered&&e.push(...t.accumulatedMeanGrads),[yield t.saveIterations()].concat(e.map(s=>({name:s.originalName,tensor:s.variable})))})()}setWeights(t){var e=this;return(0,ce.Z)(function*(){t=yield e.extractIterations(t);const s=e.centered?t.length/3:t.length/2,r=!1;e.accumulatedMeanSquares=t.slice(0,s).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})),e.accumulatedMoments=t.slice(s,2*s).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})),e.centered&&(e.accumulatedMeanGrads=t.slice(2*s,3*s).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})))})()}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}const ek=[Zm,Ym,Jm,Qm,eg,tg,Jd];function ey(n){return new Promise(t=>setTimeout(t)).then(n)}let ng=(()=>{class n{constructor(e){if(!J().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(n.URL_SCHEME)&&(e=e.slice(n.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}save(e){var s=this;return(0,ce.Z)(function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const r=Jr.join(e.weightData),o=window.URL.createObjectURL(new Blob([r],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const a=z3(e,[{paths:["./"+s.weightDataFileName],weights:e.weightSpecs}]),l=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),u=null==s.modelJsonAnchor?document.createElement("a"):s.modelJsonAnchor;if(u.download=s.modelJsonFileName,u.href=l,yield ey(()=>u.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const c=null==s.weightDataAnchor?document.createElement("a"):s.weightDataAnchor;c.download=s.weightDataFileName,c.href=o,yield ey(()=>c.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Xc(e)}}})()}}return n.URL_SCHEME="downloads://",n})();class ok{constructor(t){if(null==t||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}load(){var t=this;return(0,ce.Z)(function*(){return new Promise((e,s)=>{const r=new FileReader;r.onload=o=>{const i=JSON.parse(o.target.result),a=i.modelTopology;if(null==a)return void s(new Error(`modelTopology field is missing from file ${t.jsonFile.name}`));if(null==i.weightsManifest)return void s(new Error(`weightManifest field is missing from file ${t.jsonFile.name}`));if(0===t.weightsFiles.length)return void e({modelTopology:a});const u=Om(i,c=>t.loadWeights(c));e(u)},r.onerror=o=>s(`Failed to read model topology and weights manifest JSON from file '${t.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(t.jsonFile)})})()}loadWeights(t){const e=[],s=[];for(const i of t)e.push(...i.weights),s.push(...i.paths);const r=this.checkManifestAndWeightFiles(t),o=s.map(i=>this.loadWeightsFile(i,r[i]));return Promise.all(o).then(i=>[e,i])}loadWeightsFile(t,e){return new Promise((s,r)=>{const o=new FileReader;o.onload=i=>{s(i.target.result)},o.onerror=i=>r(`Failed to weights data from file of path '${t}'.`),o.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){const e=[],s=this.weightsFiles.map(o=>M3(o.name)),r={};for(const o of t)o.paths.forEach(i=>{const a=M3(i);if(-1!==e.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(e.push(a),-1===s.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[i]=this.weightsFiles[s.indexOf(a)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function lk(n){return new ok(n)}function ty(n,t,e,s){(function i(l){E(null!=l&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")})(n),function a(l,u){E(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),E(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),E(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}(e=null==e?0:e,s=null==s?1:s);let r=0;return Promise.all(n.map(l=>(l.then(u=>{const c=e+ ++r/n.length*(s-e);return t(c),u}),l)))}function ny(n,t){return sg.apply(this,arguments)}function sg(){return(sg=(0,ce.Z)(function*(n,t){null==t&&(t={});const e=null==t.fetchFunc?J().platform.fetch:t.fetchFunc,s=n.map(h=>e(h,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?yield Promise.all(s):yield ty(s,t.onProgress,0,.5)).map(h=>h.arrayBuffer());return null==t.onProgress?yield Promise.all(a):yield ty(a,t.onProgress,.5,1)})).apply(this,arguments)}function uk(n){return rg.apply(this,arguments)}function rg(){return(rg=(0,ce.Z)(function*(n,t="",e,s){return sy(i=>ny(i,{requestInit:s}))(n,t,e)})).apply(this,arguments)}function sy(n){return function(){var t=(0,ce.Z)(function*(e,s="",r){const o=e.map(()=>!1),i={},a=null!=r?r.map(()=>!1):[],l=[];if(e.forEach((f,g)=>{let m=0;f.weights.forEach(y=>{const S=$m["quantization"in y?y.quantization.dtype:y.dtype]*ie(y.shape),w=()=>{o[g]=!0,null==i[g]&&(i[g]=[]),i[g].push({manifestEntry:y,groupOffset:m,sizeBytes:S})};null!=r?r.forEach((I,_)=>{I===y.name&&(w(),a[_]=!0)}):w(),l.push(y.name),m+=S})}),!a.every(f=>f)){const f=r.filter((g,m)=>!a[m]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. \nManifest JSON has weights with names: ${l.join(", ")}.`)}const u=o.reduce((f,g,m)=>(g&&f.push(m),f),[]),c=[];u.forEach(f=>{e[f].paths.forEach(g=>{const m=s+(s.endsWith("/")?"":"/")+g;c.push(m)})});const h=yield n(c),d={};let p=0;return u.forEach(f=>{const g=e[f].paths.length,m=new Jr(h.slice(p,p+g));i[f].forEach(b=>{const w=O3(m.slice(b.groupOffset,b.groupOffset+b.sizeBytes),[b.manifestEntry]);for(const I in w)d[I]=w[I]}),p+=g}),d});return function(e){return t.apply(this,arguments)}}()}Dn.registerSaveRouter(n=>J().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ng.URL_SCHEME)?function ak(n="model"){return new ng(n)}(n.slice(ng.URL_SCHEME.length)):null);let ry=(()=>{class n{constructor(e,s){if(this.DEFAULT_METHOD="POST",null==s&&(s={}),this.weightPathPrefix=s.weightPathPrefix,this.onProgress=s.onProgress,this.weightUrlConverter=s.weightUrlConverter,null!=s.fetchFunc?(E("function"==typeof s.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=s.fetchFunc):this.fetch=J().platform.fetch,E(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&E(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=s.requestInit&&null!=s.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=s.requestInit||{}}save(e){var s=this;return(0,ce.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const r=Object.assign({method:s.DEFAULT_METHOD},s.requestInit);r.body=new FormData;const i=z3(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(r.body.append("model.json",new Blob([JSON.stringify(i)],{type:"application/json"}),"model.json"),null!=e.weightData){const l=Jr.join(e.weightData);r.body.append("model.weights.bin",new Blob([l],{type:"application/octet-stream"}),"model.weights.bin")}const a=yield s.fetch(s.path,r);if(a.ok)return{modelArtifactsInfo:Xc(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)})()}load(){var e=this;return(0,ce.Z)(function*(){const s=yield e.fetch(e.path,e.requestInit);if(!s.ok)throw new Error(`Request to ${e.path} failed with status code ${s.status}. Please verify this URL points to the model JSON of the model to load.`);let r;try{r=yield s.json()}catch{let l=`Failed to parse model JSON of response from ${e.path}.`;throw e.path.endsWith(".pb")?l+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":l+=" Please make sure the server is serving valid JSON for this request.",new Error(l)}if(null==r.modelTopology&&null==r.weightsManifest)throw new Error(`The JSON from HTTP path ${e.path} contains neither model topology or manifest for weights.`);return Om(r,a=>e.loadWeights(a))})()}loadWeights(e){var s=this;return(0,ce.Z)(function*(){const r=Array.isArray(s.path)?s.path[1]:s.path,[o,i]=function dk(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?");return[n.substring(0,t)+"/",e>t?n.substring(e):""]}(r),a=s.weightPathPrefix||o,l=V3(e),u=[],c=[];for(const d of e)for(const p of d.paths)null!=s.weightUrlConverter?c.push(s.weightUrlConverter(p)):u.push(a+p+i);return s.weightUrlConverter&&u.push(...yield Promise.all(c)),[l,yield ny(u,{requestInit:s.requestInit,fetchFunc:s.fetch,onProgress:s.onProgress})]})()}}return n.URL_SCHEME_REGEX=/^https?:\/\//,n})();function og(n){return null!=n.match(ry.URL_SCHEME_REGEX)}const oy=(n,t)=>{if(typeof fetch>"u"&&(null==t||null==t.fetchFunc))return null;{let e=!0;if(e=Array.isArray(n)?n.every(s=>og(s)):og(n),e)return ig(n,t)}return null};function ig(n,t){return new ry(n,t)}function pk(n,t){return ig(n,t)}Dn.registerSaveRouter(oy),Dn.registerLoadRouter(oy);class ag{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class iy{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class fk{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}function mk(n,t,e,s){return new fk(ay(...arguments))}function ay(n,t,e,s){return 1===arguments.length?null!=n.modelTopology||null!=n.weightSpecs?new ag(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ag({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ag({modelTopology:n,weightSpecs:t,weightData:e,trainingConfig:s}))}function gk(n){return new iy(n)}function yk(n){return new iy(n)}const Tt=V({matMul_:function bk(n,t,e=!1,s=!1){let r=$(n,"a","matMul"),o=$(t,"b","matMul");return[r,o]=Rn(r,o),z.runKernel(Ri,{a:r,b:o},{transposeA:e,transposeB:s})}}),Ea=V({oneHot_:function xk(n,t,e=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:$(n,"indices","oneHot","int32")};return z.runKernel(xc,i,{dtype:r,depth:t,onValue:e,offValue:s})}}),Zc=V({imag_:function vk(n){const e={input:$(n,"input","imag")};return z.runKernel(id,e)}}),vn=V({neg_:function wk(n){const e={x:$(n,"x","neg")};return z.runKernel(gc,e)}}),eu=V({real_:function Sk(n){const e={input:$(n,"input","real")};return z.runKernel(vd,e)}}),Gt=V({transpose_:function Ik(n,t,e){const s=$(n,"x","transpose");if(null==t&&(t=s.shape.map((i,a)=>a).reverse()),E(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(i=>{E(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:t};return"complex64"===s.dtype?q(()=>{let i=eu(s),a=Zc(s);return i=z.runKernel(wa,{x:i},o),a=z.runKernel(wa,{x:a},o),e&&(a=vn(a)),Yo(i,a)}):z.runKernel(wa,r,o)}}),Nk=V({confusionMatrix_:function Ck(n,t,e){const s=$(n,"labels","confusionMatrix"),r=$(t,"predictions","confusionMatrix");E(null==e||e>0&&Number.isInteger(e),()=>`If provided, numClasses must be a positive integer, but got ${e}`),E(1===s.rank,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),E(1===r.rank,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),E(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),E(e>0&&Number.isInteger(e),()=>`numClasses is required to be a positive integer, but got ${e}`);const o=Ea(Te(s,"int32"),e),i=Ea(Te(r,"int32"),e),a=Gt(o),l=Tt(a,i);return Te(l,"int32")}});function lg(n,t,e){if(nr(n),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Io(n,e);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Mi(n,t,s,e)}let Aa,ly=!1;function uy(n,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==n)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,s=!1,r=!1,o=!1,i=!1,a=!1;if(n.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else if(null!=n.getContext)i=!0;else{if(!(typeof ImageBitmap<"u"&&n instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);a=!0}if(null!=Wc(zd,z.backendName))return z.runKernel(zd,{pixels:n},{numChannels:t});const[u,c]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let h,d;if(i)h=n.getContext("2d").getImageData(0,0,u,c).data;else if(s||e)h=n.data;else if(o||r||a){if(null==Aa)if(typeof document>"u"){if(!(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u"))throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Aa=new OffscreenCanvas(1,1).getContext("2d")}else Aa=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Aa.canvas.width=u,Aa.canvas.height=c,Aa.drawImage(n,0,0,u,c),h=Aa.getImageData(0,0,u,c).data}if(4===t)d=new Int32Array(h);else{const f=u*c;d=new Int32Array(f*t);for(let g=0;g<f;g++)for(let m=0;m<t;++m)d[g*t+m]=h[4*g+m]}return lg(d,[c,u,t],"int32")}function Ak(n){return ug.apply(this,arguments)}function ug(){return(ug=(0,ce.Z)(function*(n,t=3){let e=null;if(J().getBool("WRAP_TO_IMAGEBITMAP")&&function Ek(n){return function Tk(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}()&&!(n instanceof ImageBitmap)&&function _k(n){return null!=n&&0!==n.width&&0!==n.height}(n)&&!function kk(n){return null!=n&&n.data instanceof Uint8Array}(n)}(n)){let s;try{s=yield createImageBitmap(n,{premultiplyAlpha:"none"})}catch{s=null}e=null!=s&&s.width===n.width&&s.height===n.height?s:n}else e=n;return uy(e,t)})).apply(this,arguments)}function cy(n){if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const t=2===n.rank?1:n.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}function cg(n,t){return hg.apply(this,arguments)}function hg(){return(hg=(0,ce.Z)(function*(n,t){let e=$(n,"img","toPixels");if(!(n instanceof Mt)){const u=e;e=Te(u,"int32"),u.dispose()}cy(e);const[s,r]=e.shape.slice(0,2),o=2===e.rank?1:e.shape[2],i=yield e.data(),a="float32"===e.dtype?255:1,l=new Uint8ClampedArray(r*s*4);for(let u=0;u<s*r;++u){const c=[0,0,0,255];for(let d=0;d<o;d++){const p=i[u*o+d];if("float32"===e.dtype){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if("int32"===e.dtype&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);1===o?(c[0]=p*a,c[1]=p*a,c[2]=p*a):c[d]=p*a}const h=4*u;l[h+0]=Math.round(c[0]),l[h+1]=Math.round(c[1]),l[h+2]=Math.round(c[2]),l[h+3]=Math.round(c[3])}if(null!=t){ly||null!=Wc(Ut,z.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),ly=!0),t.width=r,t.height=s;const u=t.getContext("2d"),c=new ImageData(l,r,s);u.putImageData(c,0,0)}return e!==n&&e.dispose(),l})).apply(this,arguments)}function Rk(n,t,e){let s=$(n,"img","draw");if(!(n instanceof Mt)){const i=s;s=Te(i,"int32"),i.dispose()}cy(s),function $k(n){const t=(null==n?void 0:n.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==e?void 0:e.imageOptions),z.runKernel(Ut,{image:s},{canvas:t,options:e})}const Qd=V({fromPixels_:uy});function ep(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(0===ie(n.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=t.shape,o=r[r.length-1];let i=1;for(let h=0;h<r.length-1;++h)i*=r[h];const a=n.shape,l=r.slice();l.pop();let u=1;for(let h=o;h<e;++h)u*=a[h],l.push(a[h]);const c=[...Ye(n.shape).map(h=>h/u),1].slice(0,o);return[l,i,u,c]}function dg(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(e.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(e.rank-r))throw new Error(o+` Output shape length < ${s+(e.rank-r)}`);if(e.rank!==r+n.length-s)throw new Error(o+" update.rank != "+(r+n.length-s));for(let i=0;i<r;++i)if(e.shape[i]!==t.shape[i])throw new Error(o+` updates.shape[${i}] (${e.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<e.rank-r;++i)if(e.shape[i+r]!==n[i+s])throw new Error(o+` updates.shape[${i+r}] (${e.shape[i+r]}) != shape[${i+r}] (${n[i+r]})`)}function tp(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(0===e.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===n.size)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}dg(e,t,n)}function Bi(n,t,e){const s=t.shape.length,r=s>1?t.shape[s-1]:1,o=e.length;let i=1;for(let h=r;h<o;++h)i*=e[h];const a=r<1?1:r;return{sliceRank:r,numUpdates:ie(t.shape)/a,sliceSize:i,strides:[...Ye(e.slice(0,r)),1],outputSize:ie(e)}}const pg=-2,Dk=-1;function fg(n,t,e){const s=n.shape.length;E(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),E(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)E(t[r]+e[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+e[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function Fk(n){const t=[];let e=0;for(;n>0;)1&n&&t.push(e),n/=2,e++;return t}function mg(n,t,e){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((t[r]-n[r])/e[r]);return s}function hy(n,t,e,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<e;o++)0===o?r[t]=1:(r.splice(t,0,1),r.pop());return r}function dy(n,t,e){return e<=n?e:e-(t-1)}function py(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function Ok(n,t,e,s,r,o,i,a,l){const u=n.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&e>0){const p=t[0],f=e+1;c=fy(i,p,f,s,n),h=my(a,p,f,r,n),d=hy(o,p,f,n)}else for(let p=0;p<u;p++)c[p]=yy(i,s,o,n,p,l),h[p]=by(a,r,o,n,p,l),d[p]=gy(o,p,l);return{begin:c,end:h,strides:d}}function fy(n,t,e,s,r){const o=[...r],i=py(e,t);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=0;else{const l=dy(t,e,a);let u=s[l];n&1<<l&&(u=0),o[a]=u}return o}function my(n,t,e,s,r){const o=[...r],i=py(e,t);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const l=dy(t,e,a);let u=s[l];n&1<<l&&(u=Number.MAX_SAFE_INTEGER),o[a]=u}for(let a=0;a<o.length;a++)o[a]<0&&(o[a]+=r[a]),o[a]=bs(0,o[a],r[a]);return o}function gy(n,t,e){let s=n[t];return(e&1<<t||null==s)&&(s=1),s}function yy(n,t,e,s,r,o){let i=t[r];(n&1<<r||o&1<<r||null==i)&&(i=(e[r]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=bs(0,i,l-1),i}function by(n,t,e,s,r,o){let i=t[r];const a=e[r]||1;(n&1<<r||o&1<<r||null==i)&&(i=a>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=a>0?bs(0,i,l):bs(-1,i,l-1),i}function gg(n,t,e){let s=e.length;for(let r=0;r<e.length;r++)if(e[r]>1){s=r;break}for(let r=s+1;r<e.length;r++)if(t[r]>0||e[r]!==n[r])return!1;return!0}function yg(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function np(n,t,e){let s;const r=n.shape.length;let o;return s="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach(i=>{E(-1!==i,()=>"slice() does not support negative begin indexing.")}),o=null==e?new Array(r).fill(-1):"number"==typeof e?[e,...new Array(r-1).fill(-1)]:e.length<r?e.concat(new Array(r-e.length).fill(-1)):e,o=o.map((i,a)=>i>=0?i:(E(-1===i,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,o]}function bg(n,t,e,s,r,o,i,a,l){let u;if(null==s?(u=new Array(t.length),u.fill(1)):u=s,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:u.slice(),beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};for(let S=0;S<h.dims;S++)c&&1<<S&a&&h.numAddAxisAfterEllipsis++,1<<S&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function Lk(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=null!=n.begin,t.endValid=null!=n.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(t.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<r;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=s}else if(1<<s&n.newAxisMask)t.finalShapeGatherIndices.push(pg),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=n.begin&&(t.begin[e]=n.begin[s]),null!=n.end&&(t.end[e]=n.end[s]),t.strides[e]=n.strides[s],n.beginMask&1<<s&&(t.beginMask|=1<<e),n.endMask&1<<s&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(Dk),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[e]=s,e++}}(h,d);let p=!0,f=!0,g=!0;const m=[],y=[];for(let S=0;S<n.length;++S){if(0===d.strides[S])throw Error(`strides[${S}] must be non-zero`);const w=!!(d.shrinkAxisMask&1<<S),I=n[S];if(-1===I){m.push(w?1:-1);continue}const _=[d.beginMask&1<<S,d.endMask&1<<S],R=[d.strides[S]>0?0:-1,d.strides[S]>0?I:I-1];if(w&&d.strides[S]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===d.strides[S];const F=!!(d.beginMask&1<<S&&d.endMask&1<<S);if(d.beginValid&&d.endValid){if(w){const Q=d.begin[S]<0?I+d.begin[S]:d.begin[S];if(d.begin[S]=Q,d.end[S]=d.begin[S]+1,Q<0||Q>=I)throw Error(`slice index ${d.begin[S]} of dimension ${S} out of bounds.`)}else d.begin[S]=xy(d.begin[S],0,d.strides[S],I,_,R),d.end[S]=xy(d.end[S],1,d.strides[S],I,_,R);const j=1===d.strides[S]&&0===d.begin[S]&&d.end[S]===I;p=p&&j,f=f&&(0===S&&1===d.strides[S]||j)}else p=p&&1===d.strides[S]&&F,f=f&&(0===S&&1===d.strides[S]||F);let O,L=!1;if(d.beginValid&&d.endValid?(O=d.end[S]-d.begin[S],L=!0):w?(O=1,L=!0):F&&I>=0&&(O=d.strides[S]<0?-I:I,L=!0),L){let j;j=0===O||O<0!=d.strides[S]<0?0:Math.trunc(O/d.strides[S])+(O%d.strides[S]!=0?1:0),m.push(j)}else m.push(-1)}for(let S=0;S<d.finalShapeGatherIndices.length;++S){const w=d.finalShapeGatherIndices[S];w>=0?y.push(m[w]):w===pg&&y.push(1)}return{finalShapeSparse:y.filter((S,w)=>d.finalShapeGatherIndices[w]!==pg),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function xy(n,t,e,s,r,o){if(r[t])return e>0?o[t]:o[t+1&1];{const i=n<0?s+n:n;return i<o[0]?o[0]:i>o[1]?o[1]:i}}const Pk=.001,vy=.1;function Mk(n,t,e){return null==e&&(e=xg()),vg(n,t,(s,r)=>wg(s,r,e))}function xg(){return 32===z.backend.floatPrecision()?Pk:vy}function vg(n,t,e){let s=!0;if((ds(n)||ds(t))&&(s=!1),ds(n)&&ds(t)&&(s=!0),s){const i=n.constructor.name,a=t.constructor.name;if(i!==a)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${a}`)}if(Array.isArray(n)&&Array.isArray(t)){const i=Io(n),a=Io(t);if(!At(i,a))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${a}]`)}const r=ds(n)?n:So(n),o=ds(t)?t:So(t);if(r.length!==o.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${o.length}.\nActual:   ${r}.\nExpected: ${o}.`);for(let i=0;i<o.length;++i){const a=r[i],l=o[i];if(!e(a,l))throw new Error(`Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${l}.\nActual:   ${r}.\nExpected: ${o}.`)}typeof expect<"u"&&expect().nothing()}function zk(n,t){n().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function Bk(n,t){const e="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return yr(n)||yr(n[0])||yr(t)||yr(t[0])?vg(n,e,(s,r)=>s==r):vg(n,t,(s,r)=>wg(s,r,0))}function Vk(n,t,e){if(null==e&&(e=xg()),!wg(n,t,e))throw new Error(`Numbers differ: actual === ${n}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function wg(n,t,e){return!isFinite(n)&&!isFinite(t)||!(isNaN(n)||isNaN(t)||Math.abs(n-t)>e)}function Wk(n,t,e){for(let s=0;s<n.length;s++)if(n[s]<t||n[s]>e)throw new Error(`Value out of range:${n[s]} low: ${t}, high: ${e}`)}function Uk(n,t){const e=new Float32Array(n),s=new Float32Array(t);if(e.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${e.length}`);for(let r=0;r<s.length;r++)if(e[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${e[r]} instead`)}function wy(n){for(let t=0;t<n.length;t++){const e=n[t];Array.isArray(e)?wy(e):n[t]=wo(e)}return n}function Gk(n){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(n),new Promise(e=>{t.addEventListener("loadeddata",s=>e(t)),t.load()})}function Hk(n){return Sg.apply(this,arguments)}function Sg(){return(Sg=(0,ce.Z)(function*(n){yield n.play(),"requestVideoFrameCallback"in n&&(yield new Promise(t=>{n.requestVideoFrameCallback(t)}))})).apply(this,arguments)}const Sy="4.11.0";class Iy{static sgd(t){return new Jd(t)}static momentum(t,e,s=!1){return new eg(t,e,s)}static rmsprop(t,e=.9,s=0,r=null,o=!1){return new tg(t,e,s,r,o)}static adam(t=.001,e=.9,s=.999,r=null){return new Jm(t,e,s,r)}static adadelta(t=.001,e=.95,s=null){return new Zm(t,e,s)}static adamax(t=.002,e=.9,s=.999,r=null,o=0){return new Qm(t,e,s,r,o)}static adagrad(t,e=.1){return new Ym(t,e)}}const Ig=V({acos_:function jk(n){const e={x:$(n,"x","acos")};return z.runKernel(Ni,e)}}),Cg=V({acosh_:function Kk(n){const e={x:$(n,"x","acosh")};return z.runKernel(ki,e)}}),Cy=V({addN_:function qk(n){E(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),E(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const t=n.map((r,o)=>$(r,`tensors${o}`,"addN")),e=t[0];return t.forEach(r=>{if(r.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!At(r.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),z.runKernel(Ti,t)}}),sp=V({all_:function Xk(n,t=null,e=!1){const r={x:$(n,"x","all","bool")};return z.runKernel(ul,r,{axis:t,keepDims:e})}}),Yc=V({any_:function Zk(n,t=null,e=!1){const r={x:$(n,"x","any","bool")};return z.runKernel(cl,r,{axis:t,keepDims:e})}}),Vi=V({argMax_:function Yk(n,t=0){const s={x:$(n,"x","argMax")};return z.runKernel(Ko,s,{axis:t})}}),Ng=V({argMin_:function Jk(n,t=0){const s={x:$(n,"x","argMin")};return z.runKernel(ga,s,{axis:t})}}),kg=V({asin_:function Qk(n){const e={x:$(n,"x","asin")};return z.runKernel(_i,e)}}),Tg=V({asinh_:function eT(n){const e={x:$(n,"x","asinh")};return z.runKernel(Ei,e)}}),_g=V({atan_:function tT(n){const e={x:$(n,"x","atan")};return z.runKernel(Ai,e)}}),Eg=V({atan2_:function nT(n,t){let e=$(n,"a","atan2"),s=$(t,"b","atan2");return[e,s]=Rn(e,s),z.runKernel($i,{a:e,b:s})}}),Ag=V({atanh_:function sT(n){const e={x:$(n,"x","atanh")};return z.runKernel(vo,e)}});function Jc(n,t,e,s,r="NHWC",o){return ps(n,[...t,n[3]],e,o,s,null,null,ti(r))}function Lr(n,t,e,s,r,o,i="channelsLast"){const[a,l]=Qc(t);let u;if("channelsLast"===i)u=[a,l,n[3],n[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[a,l,n[1],n[1]]}return ps(n,u,e,s,r,o,!1,i)}function ei(n,t,e,s,r,o,i="NDHWC"){const[a,l,u]=Rg(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[a,l,u,n[4],n[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[a,l,u,n[1],n[1]]}return Wi(n,c,e,s,r,!1,h,o)}function ps(n,t,e,s,r,o,i=!1,a="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h]=n;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,h,u,c]=n}const[d,p,,f]=t,[g,m]=Qc(e),[y,b]=Qc(s),S=tu(d,y),w=tu(p,b),{padInfo:I,outHeight:_,outWidth:R}=function iT(n,t,e,s,r,o,i,a,l){let u,c,h;if("number"==typeof n){u={top:n,bottom:n,left:n,right:n,type:0===n?"VALID":"NUMBER"};const p=function rT(n,t,e,s,r){null==s&&(s=$g(n,t,e));const i=n[1];return[eh((n[0]-t+2*s)/e+1,r),eh((i-t+2*s)/e+1,r)]}([t,e],o,s,n,a);c=p[0],h=p[1]}else if("same"===n){c=Math.ceil(t/s),h=Math.ceil(e/r);const d=Math.max(0,(c-1)*s+o-t),p=Math.max(0,(h-1)*r+i-e),f=Math.floor(d/2),g=d-f,m=Math.floor(p/2);u={top:f,bottom:g,left:m,right:p-m,type:"SAME"}}else if("valid"===n)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-o+1)/s),h=Math.ceil((e-i+1)/r);else{if("object"!=typeof n)throw Error(`Unknown padding parameter: ${n}`);{const d="channelsLast"===l?n[1][0]:n[2][0],p="channelsLast"===l?n[1][1]:n[2][1],f="channelsLast"===l?n[2][0]:n[3][0],g="channelsLast"===l?n[2][1]:n[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=eh((t-o+d+p)/s+1,a),h=eh((e-i+f+g)/r+1,a)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,g,m,S,w,o,a),F=i?f*h:f;let O;return"channelsFirst"===a?O=[l,F,_,R]:"channelsLast"===a&&(O=[l,_,R,F]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:h,outHeight:_,outWidth:R,outChannels:F,padInfo:I,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:S,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:n,outShape:O,filterShape:t}}function Wi(n,t,e,s,r,o=!1,i="channelsLast",a){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=n;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=n}const[p,f,g,,m]=t,[y,b,S]=Rg(e),[w,I,_]=Rg(s),R=tu(p,w),F=tu(f,I),O=tu(g,_),{padInfo:L,outDepth:j,outHeight:Q,outWidth:te}=function aT(n,t,e,s,r,o,i,a,l,u,c){let h,d,p,f;if("valid"===n&&(n=0),"number"==typeof n){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:0===n?"VALID":"NUMBER"};const m=function oT(n,t,e,s,r,o){null==r&&(r=$g(n,t[0],s[0]));const i=[0,0,0,e];for(let a=0;a<3;a++)n[a]+2*r>=t[a]&&(i[a]=eh((n[a]-t[a]+2*r)/s[a]+1,o));return i}([t,e,s,1],[a,l,u],1,[r,o,i],n,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==n)throw Error(`Unknown padding parameter: ${n}`);{d=Math.ceil(t/r),p=Math.ceil(e/o),f=Math.ceil(s/i);const g=(d-1)*r+a-t,m=(p-1)*o+l-e,y=(f-1)*i+u-s,b=Math.floor(g/2),S=g-b,w=Math.floor(m/2),I=m-w,_=Math.floor(y/2);h={top:w,bottom:I,left:_,right:y-_,front:b,back:S,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,u,c,h,y,b,S,R,F,O,a),se=o?m*d:m;let oe;return"channelsFirst"===i?oe=[l,se,j,Q,te]:"channelsLast"===i&&(oe=[l,j,Q,te,se]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:j,outHeight:Q,outWidth:te,outChannels:se,padInfo:L,strideDepth:y,strideHeight:b,strideWidth:S,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:R,effectiveFilterHeight:F,effectiveFilterWidth:O,dilationDepth:w,dilationHeight:I,dilationWidth:_,inShape:n,outShape:oe,filterShape:t}}function $g(n,t,e,s=1){const r=tu(t,s);return Math.floor((n[0]*(e-1)-e+r)/2)}function Qc(n){return"number"==typeof n?[n,n,n]:2===n.length?[n[0],n[1],1]:n}function Rg(n){return"number"==typeof n?[n,n,n]:n}function tu(n,t){return t<=1?n:n+(n-1)*(t-1)}function eh(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ui(n){const[t,e,s]=Qc(n);return 1===t&&1===e&&1===s}function vs(n,t){return Ui(n)||Ui(t)}function $a(n){return Qc(n).every(t=>t>0)}function ti(n){if("NHWC"===n)return"channelsLast";if("NCHW"===n)return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Os(n,t,e){if(null!=e){if("string"==typeof t)throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if("number"==typeof t)E(go(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else{if("object"!=typeof t)throw Error(`Error in ${n}: Unknown padding parameter: ${t}`);t.forEach(s=>{s.forEach(r=>{E(go(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${r}.`)})})}}}const H=V({reshape_:function lT(n,t){const s={x:$(n,"x","reshape","string_or_numeric")};return z.runKernel(Cc,s,{shape:t})}}),th=V({avgPool_:function uT(n,t,e,s,r){const o=$(n,"x","avgPool","float32");E(vs(e,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '1'`);let a=o,l=!1;3===o.rank&&(l=!0,a=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(4===a.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Os("avgPool",s,r);let h=z.runKernel(ya,{x:a},{filterSize:t,strides:e,pad:s,dimRoundingMode:r});return h=Te(h,o.dtype),l?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Dg=V({avgPool3d_:function cT(n,t,e,s,r,o="NDHWC"){const i=$(n,"x","avgPool3d","float32");let a=i,l=!1;4===i.rank&&(l=!0,a=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),E(5===a.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),E("NDHWC"===o,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),E("number"==typeof e&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),Os("avgPool3d",s,r);let h=z.runKernel(ba,{x:a},{filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:o});return h=Te(h,a.dtype),l?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Fn=V({concat_:function hT(n,t=0){E(n.length>=1,()=>"Pass at least one tensor to concat");const e=qc(n,"tensors","concat","string_or_numeric");return"complex64"===e[0].dtype&&e.forEach(o=>{if("complex64"!==o.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${o.dtype}. `)}),1===e.length?No(e[0]):z.runKernel(P,e,{axis:t})}}),sr=V({sigmoid_:function dT(n){const e={x:$(n,"x","sigmoid","float32")};return z.runKernel(zl,e)}}),at=V({slice_:function pT(n,t,e){const s=$(n,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");return z.runKernel(Ec,{x:s},{begin:t,size:e})}}),Ra=V({tanh_:function fT(n){const e={x:$(n,"x","tanh","float32")};return z.runKernel(Hl,e)}}),Ny=V({basicLSTMCell_:function mT(n,t,e,s,r,o){const i=$(n,"forgetBias","basicLSTMCell"),a=$(t,"lstmKernel","basicLSTMCell"),l=$(e,"lstmBias","basicLSTMCell"),u=$(s,"data","basicLSTMCell"),c=$(r,"c","basicLSTMCell"),h=$(o,"h","basicLSTMCell"),d=Fn([u,h],1),p=Tt(d,a),f=ge(p,l),m=f.shape[1]/4,y=[f.shape[0],m],b=at(f,[0,0],y),S=at(f,[0,m],y),w=at(f,[0,2*m],y),I=at(f,[0,3*m],y),_=ge(G(sr(b),Ra(S)),G(c,sr(ge(i,w))));return[_,G(Ra(_),sr(I))]}}),nh=V({batchToSpaceND_:function gT(n,t,e){const s=$(n,"x","batchToSpaceND"),r=t.reduce((a,l)=>a*l);return E(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),E(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),E(s.shape[0]%r==0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`),z.runKernel(Di,{x:s},{blockShape:t,crops:e})}});function yT(n){let t;return t=0===n.rank||1===n.rank?H(n,[1,1,1,n.size]):2===n.rank?H(n,[1,1,n.shape[0],n.shape[1]]):3===n.rank?H(n,[1,n.shape[0],n.shape[1],n.shape[2]]):n,t}const nu=V({batchNorm_:function bT(n,t,e,s,r,o){null==o&&(o=.001);const i=$(n,"x","batchNorm"),a=$(t,"mean","batchNorm"),l=$(e,"variance","batchNorm");let u,c;null!=r&&(u=$(r,"scale","batchNorm")),null!=s&&(c=$(s,"offset","batchNorm")),E(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E(null==c||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E(null==u||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:yT(i),scale:u,offset:c,mean:a,variance:l},f=z.runKernel(ec,d,{varianceEpsilon:o});return H(f,i.shape)}}),Fg=V({batchNorm2d_:function xT(n,t,e,s,r,o){const i=$(n,"x","batchNorm"),a=$(t,"mean","batchNorm"),l=$(e,"variance","batchNorm");let u,c;return null!=r&&(u=$(r,"scale","batchNorm")),null!=s&&(c=$(s,"offset","batchNorm")),E(2===i.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),E(2===a.rank||1===a.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),E(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=u&&E(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&E(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),nu(i,a,l,c,u,o)}}),Og=V({batchNorm3d_:function vT(n,t,e,s,r,o){const i=$(n,"x","batchNorm"),a=$(t,"mean","batchNorm"),l=$(e,"variance","batchNorm");let u,c;return null!=r&&(u=$(r,"scale","batchNorm")),null!=s&&(c=$(s,"offset","batchNorm")),E(3===i.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),E(3===a.rank||1===a.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),E(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=u&&E(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&E(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),nu(i,a,l,c,u,o)}}),Lg=V({batchNorm4d_:function wT(n,t,e,s,r,o){const i=$(n,"x","batchNorm"),a=$(t,"mean","batchNorm"),l=$(e,"variance","batchNorm");let u,c;return null!=r&&(u=$(r,"scale","batchNorm")),null!=s&&(c=$(s,"offset","batchNorm")),E(4===i.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),E(4===a.rank||1===a.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),E(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=u&&E(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&E(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),nu(i,a,l,c,u,o)}}),Pg=V({bincount_:function ST(n,t,e){const s=$(n,"x","bincount"),r=$(t,"weights","bincount");return E("int32"===s.dtype,()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),E(e>=0,()=>`size must be non-negative, but got ${e}.`),E(r.size===s.size||0===r.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`),z.runKernel(xa,{x:s,weights:r},{size:e})}}),ky=V({bitwiseAnd_:function IT(n,t){const e=$(n,"x","bitwiseAnd"),s=$(t,"y","bitwiseAnd");if(!At(e.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${e.shape}, y: ${s.shape}`);if("int32"!==e.dtype||"int32"!==s.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${e.dtype} and type of y: ${s.dtype}`);return z.runKernel(Fi,{a:e,b:s})}}),Ty=V({broadcastArgs_:function CT(n,t){const e=$(n,"s0","broadcastArgs","int32"),s=$(t,"s1","broadcastArgs","int32");if(1!==e.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(1!==s.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);return z.runKernel(va,{s0:e,s1:s})}}),Da=V({broadcastTo_:function NT(n,t){let e=$(n,"broadcastTo","x");const s=e.shape;if(Xn(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const u=e.shape.slice();for(;u.length<t.length;)u.unshift(1);e=H(e,u)}const r=e.shape,o=Array.from(t);for(let u=t.length-1;u>=0;u--)if(r[u]===t[u])o[u]=1;else if(1!==e.shape[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);return 0===o.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length?No(e):z.runKernel(jl,{x:e},{reps:o})}}),Mg=V({ceil_:function kT(n){const e={x:$(n,"x","ceil","float32")};return z.runKernel(qo,e)}}),Ls=V({clipByValue_:function TT(n,t,e){const s=$(n,"x","clipByValue");return E(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e?Ta(s.shape,t,s.dtype):z.runKernel(v,{x:s},{clipValueMin:t,clipValueMax:e})}}),zg=V({concat1d_:function _T(n){return Fn(n,0)}}),Bg=V({concat2d_:function ET(n,t){return Fn(n,t)}}),Vg=V({concat3d_:function AT(n,t){return Fn(n,t)}}),Wg=V({concat4d_:function $T(n,t){return Fn(n,t)}}),ni=V({conv2d_:function RT(n,t,e,s,r="NHWC",o=[1,1],i){const a=$(n,"x","conv2d","float32"),l=$(t,"filter","conv2d","float32");let u=a,c=!1;3===a.rank&&(c=!0,u=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),E(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),E(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Os("conv2d",s,i);const h="NHWC"===r?u.shape[3]:u.shape[1];E(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),E(vs(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),E($a(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),E($a(e),()=>"Error in conv2D: Strides should be larger than 0.");const f=z.runKernel(Z,{x:u,filter:l},{strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i});return c?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),rp=V({conv1d_:function DT(n,t,e,s,r="NWC",o=1,i){const a=$(n,"x","conv1d"),l=$(t,"filter","conv1d");let u=a,c=!1;2===a.rank&&(c=!0,u=H(a,[1,a.shape[0],a.shape[1]])),E(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),E(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Os("conv1d",s,i),E(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),E(vs(e,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${o}'`),E($a(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),E($a(e),()=>"Error in conv1D: Stride should be larger than 0."),E("NWC"===r,()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=H(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=H(u,[u.shape[0],1,u.shape[1],u.shape[2]]),m=ni(d,h,[1,e],s,"NHWC",[1,o],i);return H(m,c?[m.shape[2],m.shape[3]]:[m.shape[0],m.shape[2],m.shape[3]])}}),Ug=V({conv2DBackpropInput_:function FT(n,t,e,s,r,o="NHWC",i){E(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let a=n,l=t,u=!1;3===t.rank&&(u=!0,l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,n[0],n[1],n[2]]),E(4===a.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),E(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),E(4===e.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const c="NHWC"===o?a[3]:a[1],h="NHWC"===o?l.shape[3]:l.shape[1];E(c===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${e.shape[2]}.`),E(h===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[3]}.`),Os("conv2dDerInput",r,i);const f=z.runKernel(ne,{dy:l,filter:e},{strides:s,pad:r,dataFormat:o,dimRoundingMode:i,inputShape:a});return u?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),op=V({conv2dTranspose_:function OT(n,t,e,s,r,o){const i=$(n,"x","conv2dTranspose"),a=$(t,"filter","conv2dTranspose");return Ug(e,i,a,s,r,"NHWC",o)}}),Gg=V({conv3d_:function LT(n,t,e,s,r="NDHWC",o=[1,1,1]){const i=$(n,"x","conv3d"),a=$(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),E(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),E(5===a.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),E(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),E(vs(e,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),E("NDHWC"===r,()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),E($a(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),E($a(e),()=>"Error in conv3D: Strides should be larger than 0.");const d=z.runKernel(fe,{x:l,filter:a},{strides:e,pad:s,dataFormat:r,dilations:o});return u?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),_y=V({conv3DBackpropInput_:function PT(n,t,e,s,r){E(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let o=n,i=t,a=!1;4===t.rank&&(a=!0,i=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const l=o[4],u=i.shape[4];E(5===o.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),E(5===i.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),E(5===e.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),E(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),E(u===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${e.shape[4]}.`);const d=z.runKernel(Be,{dy:i,filter:e},{pad:r,strides:s,inputShape:o});return a?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Hg=V({conv3dTranspose_:function MT(n,t,e,s,r){const o=$(n,"x","conv3dTranspose"),i=$(t,"filter","conv3dTranspose");return _y(e,o,i,s,r)}}),sh=V({cos_:function zT(n){const e={x:$(n,"x","cos","float32")};return z.runKernel(it,e)}}),ip=V({cosh_:function BT(n){const e={x:$(n,"x","cosh","float32")};return z.runKernel(Ht,e)}}),rh=V({cumprod_:function VT(n,t=0,e=!1,s=!1){const o={x:$(n,"x","cumprod")};return z.runKernel(Nt,o,{axis:t,exclusive:e,reverse:s})}}),ap=V({cumsum_:function WT(n,t=0,e=!1,s=!1){const o={x:$(n,"x","cumsum")};return z.runKernel(mt,o,{axis:t,exclusive:e,reverse:s})}}),lp=V({denseBincount_:function UT(n,t,e,s=!1){const r=$(n,"x","denseBincount"),o=$(t,"weights","denseBincount");return E("int32"===r.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),E(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),E(e>=0,()=>`size must be non-negative, but got ${e}.`),E(o.size===r.size||0===o.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`),z.runKernel(ct,{x:r,weights:o},{size:e,binaryOutput:s})}}),jg=V({depthToSpace_:function GT(n,t,e="NHWC"){const s=$(n,"x","depthToSpace","float32"),r="NHWC"===e?s.shape[1]:s.shape[2],o="NHWC"===e?s.shape[2]:s.shape[3],i="NHWC"===e?s.shape[3]:s.shape[1];return E(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),E(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`),E(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${o} and ${t} for depthToSpace with input shape\n        ${s.shape}`),E(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`),z.runKernel(It,{x:s},{blockSize:t,dataFormat:e})}}),su=V({depthwiseConv2d_:function HT(n,t,e,s,r="NHWC",o=[1,1],i){const a=$(n,"x","depthwiseConv2d","float32"),l=$(t,"filter","depthwiseConv2d","float32");let u=a,c=!1;3===a.rank&&(c=!0,u=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),E(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),E(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h="NHWC"===r?u.shape[3]:u.shape[1];E(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),Os("depthwiseConv2d",s,i);const f=z.runKernel(Dt,{x:u,filter:l},{strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i});return c?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ey=V({diag_:function jT(n){const e={x:$(n,"x","diag")};return z.runKernel(ts,e)}}),Kg=V({dilation2d_:function KT(n,t,e,s,r=[1,1],o="NHWC"){const i=$(n,"x","dilation2d"),a=$(t,"filter","dilation2d");E(3===i.rank||4===i.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),E(3===a.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),E("NHWC"===o,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let l=i,u=!1;3===i.rank&&(l=H(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),E(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);const d=z.runKernel(bn,{x:l,filter:a},{strides:e,pad:s,dilations:r});return u?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),rr=V({equal_:function qT(n,t){let e=$(n,"a","equal","string_or_numeric"),s=$(t,"b","equal","string_or_numeric");return[e,s]=Rn(e,s),yt(e.shape,s.shape),z.runKernel(Ju,{a:e,b:s})}}),ws=V({where_:function XT(n,t,e){const s=$(t,"a","where"),r=$(e,"b","where"),o=$(n,"condition","where","bool"),i=yt(yt(o.shape,s.shape),r.shape),a=Da(o,i),l=Da(s,i),u=Da(r,i);return z.runKernel(_c,{condition:a,t:l,e:u})}}),qg=V({divNoNan_:function ZT(n,t){let e=$(n,"a","div"),s=$(t,"b","div");[e,s]=Rn(e,s);const r=Me(e,s),o=jt(r),i=rr(s,o);return ws(i,o,r)}}),Xg=V({dot_:function YT(n,t){const e=$(n,"t1","dot"),s=$(t,"t2","dot");E(!(1!==e.rank&&2!==e.rank||1!==s.rank&&2!==s.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const r=1===e.rank?e.size:e.shape[1],o=1===s.rank?s.size:s.shape[0];if(E(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),1===e.rank&&1===s.rank){const i=H(e,[1,-1]),a=H(s,[-1,1]),l=Tt(i,a);return H(l,[])}if(1===e.rank&&2===s.rank){const i=H(e,[1,-1]),a=H(s,[s.shape[0],s.shape[1]]),l=Tt(i,a);return H(l,[l.size])}if(2===e.rank&&1===s.rank){const i=H(s,[-1,1]),a=Tt(e,i);return H(a,[a.size])}{const i=H(s,[s.shape[0],s.shape[1]]);return Tt(e,i)}}}),Fa=V({einsum_:function JT(n,...t){const e=t.map((r,o)=>$(r,`tensors${o}`,"einsum"));return z.runKernel(Wt,e,{equation:n})}}),ru=V({elu_:function QT(n){const e={x:$(n,"x","elu","float32")};return z.runKernel(Pt,e)}}),Ay=V({ensureShape_:function e_(n,t){const e=$(n,"x","ensureShape","string_or_numeric");if(!Gu(e.shape,t))throw new Error(`EnsureShape: Shape of tensor ${e.shape} is not compatible with expected shape ${t}`);return n}}),Zg=V({erf_:function t_(n){let t=$(n,"x","erf");return E("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=Te(t,"float32")),z.runKernel(pl,{x:t})}});function Yg(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function $y(n,t,e){const s=n.length+t.length,r=[];let o=0,i=0;for(let a=0;a<s;a++)-1===e.indexOf(a)?r.push(n[o++]):r.push(t[i++]);return r}function fs(n,t){const e=[],s=n.length;for(let o=0;o<s;o++)-1===t.indexOf(o)&&e.push(n[o]);return[e,t.map(o=>n[o])]}function Gn(n,t){return $y(n,t.map(s=>1),t)}function Ss(n,t,e){E(Yg(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function On(n,t){if(Yg(n,t))return null;const e=[];for(let s=0;s<t;++s)-1===n.indexOf(s)&&e.push(s);return n.forEach(s=>e.push(s)),e}function Gi(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function Hn(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}const Ir=V({max_:function n_(n,t=null,e=!1){const r={x:$(n,"x","max")};return z.runKernel(cc,r,{reductionIndices:t,keepDims:e})}}),ou=V({min_:function s_(n,t=null,e=!1){const r={x:$(n,"x","min")};return z.runKernel(fc,r,{axis:t,keepDims:e})}}),He=V({sum_:function r_(n,t=null,e=!1){let s=$(n,"x","sum");return"bool"===s.dtype&&(s=Te(s,"int32")),z.runKernel(Ac,{x:s},{axis:t,keepDims:e})}});function Ry(n,t,e=null){if(0===n.rank)return Yn(n);if(1!==n.rank&&null===e)return Ry(H(n,[-1]),t,e);if(1===n.rank||"number"==typeof e||Array.isArray(e)&&1===e.length){if(1===t)return He(Yn(n),e);if(t===1/0)return Ir(Yn(n),e);if(t===-1/0)return ou(Yn(n),e);if("euclidean"===t||2===t)return xs(He(Qo(Yn(n),Ze(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&2===e.length){if(1===t)return Ir(He(Yn(n),e[0]),e[1]-1);if(t===1/0)return Ir(He(Yn(n),e[1]),e[0]);if(t===-1/0)return ou(He(Yn(n),e[1]),e[0]);if("fro"===t||"euclidean"===t)return xs(He(dn(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const iu=V({norm_:function o_(n,t="euclidean",e=null,s=!1){const r=Ry(n=$(n,"x","norm"),t,e);let o=r.shape;if(s){const i=St(e,n.shape);o=Gn(r.shape,i)}return H(r,o)}}),Jg=V({euclideanNorm_:function i_(n,t=null,e=!1){return iu(n,"euclidean",t,e)}}),_s=V({exp_:function a_(n){const e={x:$(n,"x","exp")};return z.runKernel(fl,e)}}),_n=V({expandDims_:function l_(n,t=0){const e=$(n,"x","expandDims","string_or_numeric");return E(t<=e.rank,()=>"Axis must be <= rank of the tensor"),z.runKernel(Qu,{input:e},{dim:t})}}),Qg=V({expm1_:function u_(n){const e={x:$(n,"x","expm1")};return z.runKernel(ml,e)}}),Cr=V({tile_:function c_(n,t){const e=$(n,"x","tile","string_or_numeric");return E(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`),z.runKernel(jl,{x:e},{reps:t})}}),up=V({eye_:function h_(n,t,e,s="float32"){null==t&&(t=n);const r=kt([n,t],s),o=n<=t?n:t;for(let a=0;a<o;++a)r.set(1,a,a);const i=H(r.toTensor(),[n,t]);if(null==e)return i;if(1===e.length)return Cr(_n(i,0),[e[0],1,1]);if(2===e.length)return Cr(_n(_n(i,0),0),[e[0],e[1],1,1]);if(3===e.length)return Cr(_n(_n(_n(i,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}}),au=V({floor_:function d_(n){const e={x:$(n,"x","floor","float32")};return z.runKernel(gl,e)}}),lu=V({gather_:function p_(n,t,e=0,s=0){const r=$(n,"x","gather"),o=$(t,"indices","gather","int32");return z.runKernel(tc,{x:r,indices:o},{axis:e,batchDims:s})}}),Ps=V({greater_:function f_(n,t){let e=$(n,"a","greater","string_or_numeric"),s=$(t,"b","greater","string_or_numeric");return[e,s]=Rn(e,s),yt(e.shape,s.shape),z.runKernel(nc,{a:e,b:s})}}),si=V({greaterEqual_:function m_(n,t){let e=$(n,"a","greaterEqual","string_or_numeric"),s=$(t,"b","greaterEqual","string_or_numeric");return[e,s]=Rn(e,s),yt(e.shape,s.shape),z.runKernel(bl,{a:e,b:s})}}),e1=V({isFinite_:function g_(n){const e={x:$(n,"x","isFinite")};return z.runKernel(vl,e)}}),t1=V({isInf_:function y_(n){const e={x:$(n,"x","isInf")};return z.runKernel(wl,e)}}),n1=V({isNaN_:function b_(n){const e={x:$(n,"x","isNaN")};return z.runKernel(Sl,e)}}),oh=V({leakyRelu_:function x_(n,t=.2){const s={x:$(n,"x","leakyRelu")};return z.runKernel(sc,s,{alpha:t})}}),uu=V({less_:function v_(n,t){let e=$(n,"a","less","string_or_numeric"),s=$(t,"b","less","string_or_numeric");return[e,s]=Rn(e,s),yt(e.shape,s.shape),z.runKernel(rc,{a:e,b:s})}}),Hi=V({lessEqual_:function w_(n,t){let e=$(n,"a","lessEqual","string_or_numeric"),s=$(t,"b","lessEqual","string_or_numeric");return[e,s]=Rn(e,s),yt(e.shape,s.shape),z.runKernel(oc,{a:e,b:s})}});function Dy(n,t,e){if(e<=0)throw new Error("The number of values should be positive.");return z.runKernel(ad,{},{start:n,stop:t,num:e})}const s1=V({localResponseNormalization_:function S_(n,t=5,e=1,s=1,r=.5){const o=$(n,"x","localResponseNormalization");E(4===o.rank||3===o.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${o.rank}.`),E(go(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=o,a=!1;3===o.rank&&(a=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const c=z.runKernel(uc,{x:i},{depthRadius:t,bias:e,alpha:s,beta:r});return a?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),or=V({log_:function I_(n){const e={x:$(n,"x","log","float32")};return z.runKernel(Il,e)}}),ih=V({log1p_:function C_(n){const e={x:$(n,"x","log1p")};return z.runKernel(Cl,e)}}),Oa=V({softplus_:function N_(n){const e={x:$(n,"x","softplus")};return z.runKernel(Bl,e)}}),r1=V({logSigmoid_:function k_(n){const t=$(n,"x","logSigmoid");return ko(s=>({value:vn(Oa(vn(s))),gradFunc:i=>G(i,sr(vn(s)))}))(t)}}),cp=V({logSoftmax_:function T_(n,t=-1){const e=$(n,"logits","logSoftmax");if(-1===t&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return ko((r,o)=>{const a=Ir(r,t,!0),l=Pe(r,a),u=Pe(Te(l,"float32"),or(He(_s(l),t,!0)));return o([u]),{value:u,gradFunc:(h,d)=>{const[p]=d,g=_s(p);return Pe(h,G(He(h,t,!0),g))}}})(e)}}),ah=V({logSumExp_:function __(n,t=null,e=!1){const s=$(n,"x","logSumExp"),r=St(t,s.shape),o=Ir(s,r,!0),i=Pe(s,o),a=_s(i),l=He(a,r),u=or(l),c=ge(H(o,u.shape),u);if(e){const h=Gn(c.shape,r);return H(c,h)}return c}}),Qr=V({logicalAnd_:function E_(n,t){const e=$(n,"a","logicalAnd","bool"),s=$(t,"b","logicalAnd","bool");return yt(e.shape,s.shape),z.runKernel(ic,{a:e,b:s})}}),lh=V({logicalNot_:function A_(n){const e={x:$(n,"x","logicalNot","bool")};return z.runKernel(ac,e)}}),hp=V({logicalOr_:function $_(n,t){const e=$(n,"a","logicalOr","bool"),s=$(t,"b","logicalOr","bool");return yt(e.shape,s.shape),z.runKernel(lc,{a:e,b:s})}}),o1=V({logicalXor_:function R_(n,t){const e=$(n,"a","logicalXor","bool"),s=$(t,"b","logicalXor","bool");return yt(e.shape,s.shape),Qr(hp(n,t),lh(Qr(n,t)))}}),dp=2147483648,pp=V({searchSorted_:function D_(n,t,e="left"){const s=$(n,"sortedSequence","searchSorted"),r=$(t,"values","searchSorted"),i=r.shape[r.shape.length-1],a=H(s,[-1,s.shape[s.shape.length-1]]),l=H(r,[-1,i]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ie(l.shape)>=dp)throw new Error(`values tensor size must less than ${dp}`);if(a.shape[1]>=dp)throw new Error(`trailing dim_size must less than ${dp} for int32 output type, was ${a.shape[1]}`);return z.runKernel(Nd,{sortedSequence:a,values:l},{side:e})}});function Fy(n,t){return pp(n,t,"left")}const uh=V({maxPool_:function F_(n,t,e,s,r){const o=$(n,"x","maxPool");let a=o,l=!1;3===o.rank&&(l=!0,a=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(4===a.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),E(vs(e,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '1'`),Os("maxPool",s,r);const h=z.runKernel(hc,{x:a},{filterSize:t,strides:e,pad:s,dimRoundingMode:r});return l?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),i1=V({maxPool3d_:function O_(n,t=[1,1,1],e,s,r,o="NDHWC"){const i=$(n,"x","maxPool3d");let a=i,l=!1;4===i.rank&&(l=!0,a=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),E(5===a.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),E("NDHWC"===o,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),Os("maxPool3d",s,r);const h=z.runKernel(dc,{x:a},{filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:o});return l?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Oy=V({maxPoolWithArgmax_:function L_(n,t,e,s,r=!1){const i={x:$(n,"x","maxPoolWithArgmax")},l=z.runKernel(hd,i,{filterSize:t,strides:e,pad:s,includeBatchInIndex:r});return{result:l[0],indexes:l[1]}}}),Ln=V({mean_:function P_(n,t=null,e=!1){const r={x:$(n,"x","mean")};return z.runKernel(pc,r,{axis:t,keepDims:e})}});function Qn(n,t="float32"){if(Xn(n),"complex64"===t){const s=Qn(n,"float32"),r=Qn(n,"float32");return Yo(s,r)}const e=Un(ie(n),t);return z.makeTensor(e,n,t)}function Gs(n,t="float32"){if(Xn(n),"complex64"===t){const s=Gs(n,"float32"),r=Qn(n,"float32");return Yo(s,r)}const e=il(ie(n),t);return z.makeTensor(e,n,t)}function Ly(n,t,{indexing:e="xy"}={}){if("xy"!==e&&"ij"!==e)throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(void 0===n)return[];let s=$(n,"x","meshgrid",n instanceof Mt?n.dtype:"float32");if(void 0===t)return[s];let r=$(t,"y","meshgrid",t instanceof Mt?t.dtype:"float32");const o=ie(s.shape),i=ie(r.shape);return"xy"===e?(s=H(s,[1,-1]),r=H(r,[-1,1]),[Tt(Gs([i,1],s.dtype),s),Tt(r,Gs([1,o],r.dtype))]):(s=H(s,[-1,1]),r=H(r,[1,-1]),[Tt(s,Gs([1,i],s.dtype)),Tt(Gs([o,1],r.dtype),r)])}const ji=V({minimum_:function M_(n,t){let e=$(n,"a","minimum"),s=$(t,"b","minimum");return[e,s]=Rn(e,s),"bool"===e.dtype&&(e=Te(e,"int32"),s=Te(s,"int32")),yt(e.shape,s.shape),z.runKernel(kl,{a:e,b:s})}}),a1=V({mirrorPad_:function z_(n,t,e){E("reflect"===e||"symmetric"===e,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=$(n,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");E(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const r="reflect"===e?1:0;for(let a=0;a<s.rank;a++)E(2===t[a].length,()=>"Invalid number of paddings. Must be length of 2 each."),E(t[a][0]>=0&&t[a][0]<=s.shape[a]-r&&t[a][1]>=0&&t[a][1]<=s.shape[a]-r,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-r} or less than 0 for input of shape ${s.shape}`);return z.runKernel(mc,{x:s},{paddings:t,mode:e})}}),l1=V({mod_:function B_(n,t){let e=$(n,"a","mod"),s=$(t,"b","mod");return[e,s]=Rn(e,s),z.runKernel(Tl,{a:e,b:s})}}),ch=V({moments_:function V_(n,t=null,e=!1){const s=St(t,(n=$(n,"x","moments")).shape),r=Ln(n,s,e);let o=r.shape;e||(o=Gn(r.shape,s));const i=dn(Pe(Te(n,"float32"),H(r,o)));return{mean:r,variance:Ln(i,s,e)}}}),Py=V({multiRNNCell_:function W_(n,t,e,s){const r=$(t,"data","multiRNNCell"),o=qc(e,"c","multiRNNCell"),i=qc(s,"h","multiRNNCell");let a=r;const l=[];for(let h=0;h<n.length;h++){const d=n[h](a,o[h],i[h]);l.push(d[0]),l.push(d[1]),a=d[1]}const u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}}),My=V({multinomial_:function U_(n,t,e,s=!1){const r=$(n,"logits","multinomial"),o=r.size,i=r.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);e=e||Math.random();const l={logits:1===i?H(r,[1,-1]):r},c=z.runKernel(dd,l,{numSamples:t,seed:e,normalized:s});return 1===i?H(c,[c.size]):c}}),La=V({notEqual_:function G_(n,t){let e=$(n,"a","notEqual","string_or_numeric"),s=$(t,"b","notEqual","string_or_numeric");return[e,s]=Rn(e,s),yt(e.shape,s.shape),z.runKernel(yc,{a:e,b:s})}}),ir=V({onesLike_:function H_(n){const e={x:$(n,"x","onesLike")};return z.runKernel(bc,e)}}),zy=V({outerProduct_:function j_(n,t){const e=$(n,"v1","outerProduct"),s=$(t,"v2","outerProduct");E(1===e.rank&&1===s.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${s.rank}.`);const r=H(e,[-1,1]),o=H(s,[1,-1]);return Tt(r,o)}}),ri=V({pad_:function K_(n,t,e=0){const s=$(n,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return z.runKernel(wc,{x:s},{paddings:t,constantValue:e})}}),By=V({pad1d_:function q_(n,t,e=0){return E(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),ri(n,[t],e)}}),Vy=V({pad2d_:function X_(n,t,e=0){return E(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),ri(n,t,e)}}),u1=V({pad3d_:function Z_(n,t,e=0){return E(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),ri(n,t,e)}}),Wy=V({pad4d_:function Y_(n,t,e=0){return E(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),ri(n,t,e)}}),hh=V({spaceToBatchND_:function J_(n,t,e){const s=$(n,"x","spaceToBatchND");return E(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),E(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),E(s.shape.reduce((i,a,l)=>l>0&&l<=t.length?i&&(a+e[l-1][0]+e[l-1][1])%t[l-1]==0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`),z.runKernel($c,{x:s},{blockShape:t,paddings:e})}}),c1=V({pool_:function Q_(n,t,e,s,r,o,i){null==r&&(r=[1,1]),null==o&&(o=1),0===s&&(s="valid");const a=$(n,"x","maxPool");let l=a,u=!1;3===a.rank&&(u=!0,l=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),E(vs(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const c=Lr(l.shape,t,o,r,s),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===s?function tE(n,t){const s=n.map((i,a)=>i+(i-1)*(t[a]-1)).map(i=>i-1),r=s.map(i=>Math.floor(i/2)),o=s.map((i,a)=>i-r[a]);return s.map((i,a)=>[r[a],o[a]])}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,g]=function eE(n,t,e){const s=e.map(c=>c[0]),r=e.map(c=>c[1]),o=n.concat(s,r),i=t.map((c,h)=>(c-o[h]%c)%c),a=r.map((c,h)=>c+i[h]),l=t.map((c,h)=>[s[h],a[h]]),u=t.map((c,h)=>[0,i[h]]);return[l,u]}([c.inHeight,c.inWidth],h,d),m=p?s:"valid",y=p?l:hh(l,h,f),S=("avg"===e?()=>th(y,t,o,m,i):()=>uh(y,t,o,m,i))(),w=p?S:nh(S,h,g);return u?H(w,[w.shape[1],w.shape[2],w.shape[3]]):w}}),dh=V({prelu_:function nE(n,t){const e=$(n,"x","prelu"),s=$(t,"alpha","prelu");return z.runKernel(Sc,{x:e,alpha:s})}}),h1=V({prod_:function sE(n,t=null,e=!1){let s=$(n,"x","prod");return"bool"===s.dtype&&(s=Te(s,"int32")),z.runKernel(Ic,{x:s},{axis:t,keepDims:e})}}),Uy=V({raggedGather_:function rE(n,t,e,s){const r=n.map((c,h)=>$(c,`tensors${h}`,"raggedGather","int32")),o=$(t,"paramsDenseValues","raggedGather"),i=$(e,"indices","raggedGather","int32"),u=z.runKernel(gd,{paramsNestedSplits:r,paramsDenseValues:o,indices:i},{outputRaggedRank:s});return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}}),Gy=V({raggedRange_:function oE(n,t,e){const s=$(n,"starts","raggedRange"),r=$(t,"limits","raggedRange",s.dtype),o=$(e,"deltas","raggedRange",s.dtype),a=z.runKernel(yd,{starts:s,limits:r,deltas:o});return{rtNestedSplits:a[0],rtDenseValues:a[1]}}}),Hy=V({raggedTensorToTensor_:function iE(n,t,e,s,r){const o=$(n,"shape","raggedTensorToTensor","int32"),i=$(t,"values","raggedTensorToTensor"),a=$(e,"defaultValue","raggedTensorToTensor",i.dtype),l=s.map((h,d)=>$(h,`tensors${d}`,"raggedTensorToTensor","int32"));return z.runKernel(bd,{shape:o,values:i,defaultValue:a,rowPartitionTensors:l},{rowPartitionTypes:r})}}),jy=V({rand_:function aE(n,t,e){Xn(n);const s=ie(n);let r=null;if(null==e||"float32"===e)r=new Float32Array(s);else if("int32"===e)r=new Int32Array(s);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);r=new Uint8Array(s)}for(let o=0;o<s;o++)r[o]=t();return z.makeTensor(r,n,e)}});var fp=Y(9128);class d1{constructor(t,e,s,r,o){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=o||Math.random();this.random=fp.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let t,e,s=!1;for(;!s;){let r,o,i;do{r=2*this.random()-1,o=2*this.random()-1,i=r*r+o*o}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*r*a,e=this.mean+this.stdDev*o*a,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class lE{constructor(t,e,s,r){this.alpha=t,this.beta=1/e,this.dtype=s;const o=r||Math.random();this.randu=fp.alea(o.toString()),this.randn=new d1(0,1,s,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,s,r,o,i;for(;;){do{r=this.randn.nextValue(),i=1+this.c*r}while(i<=0);if(i*=i*i,t=r*r,e=1-.331*t*t,s=.5*t+this.d*(1-i+Math.log(i)),o=this.randu(),o<e||Math.log(o)<s)break}return i*=1/this.beta*this.d,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class uE{constructor(t=0,e=1,s,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=s,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=fp.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Ky=V({randomGamma_:function pE(n,t,e=1,s="float32",r){if(Xn(n),null==e&&(e=1),null==s&&(s="float32"),"float32"!==s&&"int32"!==s)throw new Error(`Unsupported data type ${s}`);const o=new lE(t,e,s,r),i=kt(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}}),mp=V({randomNormal_:function fE(n,t=0,e=1,s,r){if(Xn(n),null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const o=new d1(t,e,s,!1,r),i=kt(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}}),qy=V({randomStandardNormal_:function mE(n,t,e){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return mp(n,0,1,t,e)}}),Ki=V({randomUniform_:function gE(n,t=0,e=1,s="float32",r){Xn(n);const o=kt(n,s),i=new uE(t,e,null,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}}),Xy=V({randomUniformInt_:function yE(n,t,e,s){return Ki(n,t,e,"int32",s)}});function oi(n,t,e=1,s="float32"){if(0===e)throw new Error("Cannot have a step of zero");return z.runKernel(xd,{},{start:n,stop:t,step:e,dtype:s})}const f1=V({reciprocal_:function bE(n){const e={x:$(n,"x","reciprocal")};return z.runKernel(Al,e)}}),eo=V({relu_:function xE(n){const e={x:$(n,"x","relu")};return z.runKernel($l,e)}}),gp=V({relu6_:function vE(n){const e={x:$(n,"x","relu6")};return z.runKernel(Rl,e)}}),Nr=V({reverse_:function wE(n,t){const s={x:$(n,"x","reverse")};return z.runKernel(Tc,s,{dims:t})}}),Zy=V({reverse1d_:function SE(n){const t=$(n,"x","reverse");return E(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Nr(t,0)}}),Yy=V({reverse2d_:function IE(n,t){const e=$(n,"x","reverse");return E(2===e.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),Nr(e,t)}}),Jy=V({reverse3d_:function CE(n,t){const e=$(n,"x","reverse");return E(3===e.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),Nr(e,t)}}),Qy=V({reverse4d_:function NE(n,t){const e=$(n,"x","reverse");return E(4===e.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),Nr(e,t)}}),yp=V({round_:function kE(n){const e={x:$(n,"x","round")};return z.runKernel(Dl,e)}}),bp=V({rsqrt_:function TE(n){const e={x:$(n,"x","rsqrt","float32")};return z.runKernel(Fl,e)}}),xp=V({selu_:function _E(n){const e={x:$(n,"x","selu")};return z.runKernel(Ol,e)}}),vp=V({separableConv2d_:function EE(n,t,e,s,r,o=[1,1],i="NHWC"){const a=$(n,"x","separableConv2d"),l=$(t,"depthwiseFilter","separableConv2d"),u=$(e,"pointwiseFilter","separableConv2d");let c=a,h=!1;if(3===a.rank&&(h=!0,c=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");E(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),E(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),E(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),E(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),E(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];E(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=su(c,l,s,r,i,o),m=ni(f,u,1,"valid",i);return h?H(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});function m1(){return(m1=(0,ce.Z)(function*(n,t){const e=$(n,"x","setdiff1d"),s=$(t,"y","setdiff1d");E(e.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${s.dtype}).`),E(1===e.rank,()=>`x should be 1D tensor, but got x (${e.shape}).`),E(1===s.rank,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=yield e.data(),o=yield s.data(),i=new Set(o);let a=0;for(let c=0;c<r.length;c++)i.has(r[c])||a++;const l=new Zn([a],e.dtype),u=new Zn([a],"int32");for(let c=0,h=0;c<r.length;c++)i.has(r[c])||(l.values[h]=r[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]})).apply(this,arguments)}const e4=function AE(n,t){return m1.apply(this,arguments)},g1=V({sign_:function $E(n){const e={x:$(n,"x","sign")};return z.runKernel(Ml,e)}}),wp=V({sin_:function RE(n){const e={x:$(n,"x","sin","float32")};return z.runKernel(Ll,e)}}),Sp=V({sinh_:function DE(n){const e={x:$(n,"x","sinh")};return z.runKernel(Pl,e)}}),ph=V({slice1d_:function FE(n,t,e){const s=$(n,"x","slice1d");return E(1===s.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),at(s,[t],[e])}}),Ip=V({slice2d_:function OE(n,t,e){const s=$(n,"x","slice2d");return E(2===s.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),at(s,t,e)}}),fh=V({slice3d_:function LE(n,t,e){const s=$(n,"x","slice3d");return E(3===s.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),at(s,t,e)}}),cu=V({slice4d_:function PE(n,t,e){const s=$(n,"x","slice4d");return E(4===s.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),at(s,t,e)}}),mh=V({softmax_:function ME(n,t=-1){const e=$(n,"logits","softmax","float32");if(-1===t&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);return z.runKernel(Dc,{logits:e},{dim:t})}}),gh=V({fft_:function zE(n){return E("complex64"===n.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`),z.runKernel(td,{input:n})}}),hu=V({ifft_:function BE(n){return E("complex64"===n.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`),z.runKernel(od,{input:n})}}),Cp=V({irfft_:function VE(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const r=H(n,[e,t]);s=hu(r)}else{const r=[e,2*(t-1)],o=H(eu(n),[e,t]),i=H(Zc(n),[e,t]),a=Nr(at(o,[0,1],[e,t-2]),1),l=G(Nr(at(i,[0,1],[e,t-2]),1),Ze(-1)),u=Fn([o,a],1),c=Fn([i,l],1),h=H(Yo(u,c),[r[0],r[1]]);s=hu(h)}if(s=eu(s),3===n.rank&&0!==n.shape[0]){const r=s,o=n.shape[0];s=H(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}}),Hs=V({split_:function WE(n,t,e=0){const r={x:$(n,"x","split")};return z.runKernel(Rc,r,{numOrSizeSplits:t,axis:e})}}),yh=V({rfft_:function UE(n,t){E("float32"===n.dtype,()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let r;if(null!=t&&t<e){const f=n.shape.map(m=>0),g=n.shape.map(m=>m);g[n.shape.length-1]=t,r=at(n,f,g),e=t}else if(null!=t&&t>e){const f=n.shape.map(g=>g);f[n.shape.length-1]=t-e,r=Fn([n,Qn(f)],n.shape.length-1),e=t}else r=n;const o=jt(r),i=H(Yo(r,o),[s,e]),a=gh(i),l=Math.floor(e/2)+1,u=eu(a),c=Zc(a),h=Hs(u,[l,e-l],u.shape.length-1),d=Hs(c,[l,e-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,H(Yo(h[0],d[0]),p)}}),Np=V({squaredDifference_:function GE(n,t){let e=$(n,"a","squaredDifference"),s=$(t,"b","squaredDifference");return[e,s]=Rn(e,s),yt(e.shape,s.shape),z.runKernel(Wl,{a:e,b:s},{})}}),on=V({squeeze_:function HE(n,t){const e=$(n,"x","squeeze","string_or_numeric");return H(e,Qt(e.shape,t).newShape)}}),js=V({stack_:function jE(n,t=0){const e=qc(n,"tensors","stack","string_or_numeric");return E(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&E(t<=e[0].rank,()=>"Axis must be <= rank of the tensor"),z.runKernel(vc,e,{axis:t})}}),Pa=V({step_:function KE(n,t=0){const s={x:$(n,"x","step")};return z.runKernel(Kl,s,{alpha:t})}}),y1=V({stridedSlice_:function qE(n,t,e,s,r=0,o=0,i=0,a=0,l=0){const c={x:$(n,"x","stridedSlice","string_or_numeric")};return z.runKernel(Rd,c,{begin:t,end:e,strides:s,beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l})}}),b1=V({tan_:function XE(n){const e={x:$(n,"x","tan","float32")};return z.runKernel(Gl,e)}});function jn(n,t){nr(n);const e=Io(n,t);if(1!==e.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Mi(n,null,e,t)}function ii(n,t,e){if(nr(n),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=Io(n,e);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Mi(n,t,s,e)}function t4(n,t,e){if(nr(n),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const s=Io(n,e);if(4!==s.length&&1!==s.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Mi(n,t,s,e)}function n4(n,t,e){if(nr(n),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const s=Io(n,e);if(5!==s.length&&1!==s.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Mi(n,t,s,e)}function s4(n,t,e){if(nr(n),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const s=Io(n,e);if(6!==s.length&&1!==s.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Mi(n,t=t||s,s,e)}const r4=V({tensorScatterUpdate_:function ZE(n,t,e){const s=$(n,"tensor","tensorScatterupdate"),r=$(t,"indices","tensorScatterupdate","int32"),o=$(e,"updates","tensorScatterupdate");if(tp(o,r,s.shape),s.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${o.dtype}.`);return z.runKernel(Cd,{tensor:s,indices:r,updates:o},{})}}),x1=V({topk_:function YE(n,t=1,e=!0){const s=$(n,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const o={x:s},i={k:t,sorted:e},[a,l]=z.runKernel(Ld,o,i);return{values:a,indices:l}}}),kp=V({truncatedNormal_:function JE(n,t=0,e=1,s,r){if(Xn(n),null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const o=new d1(t,e,s,!0,r),i=kt(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}}),v1=V({unique_:function QE(n,t=0){const e=$(n,"x","unique","string_or_numeric");E(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},r={axis:t},[o,i]=z.runKernel(Md,s,r);return{values:o,indices:i}}}),Tp=V({unsortedSegmentSum_:function e6(n,t,e){const s=$(n,"x","unsortedSegmentSum"),r=$(t,"segmentIds","unsortedSegmentSum","int32");return E(go(e),()=>"numSegments must be of dtype int"),z.runKernel(Lc,{x:s,segmentIds:r},{numSegments:e})}}),kr=V({unstack_:function t6(n,t=0){const e=$(n,"x","unstack","string_or_numeric");return E(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`),z.runKernel(Oc,{value:e},{axis:t})}});function o4(n,t){return pp(n,t,"right")}function w1(n,t=!0,e,s){return z.makeVariable(n,t,e,s)}function _p(n,t){const e=[];for(let o=0;o<t.length;o++)t[o]&&e.push(o);const s=kt(n,"int32"),r=kt([e.length,n.length],"int32");for(let o=0;o<e.length;o++){const i=s.indexToLoc(e[o]);r.values.set(i,o*n.length)}return r.toTensor()}function S1(){return(S1=(0,ce.Z)(function*(n){const t=$(n,"condition","whereAsync","bool"),e=yield t.data(),s=_p(t.shape,e);return n!==t&&t.dispose(),s})).apply(this,arguments)}const I1=function n6(n){return S1.apply(this,arguments)};function C1(){return(C1=(0,ce.Z)(function*(n,t,e){const s=$(n,"tensor","boolMask"),r=$(t,"mask","boolMask","bool"),o=null==e?0:e,i=r.rank,a=s.shape;E(i>0,()=>"mask cannot be scalar"),Vn(a.slice(o,o+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let g=o;g<o+i;g++)l*=a[g];const u=a.slice(0,o).concat([l],a.slice(o+i)),c=H(s,u),h=H(r,[-1]),d=yield I1(h),p=on(d,[1]),f=lu(c,p,o);return n!==s&&s.dispose(),t!==r&&r.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f})).apply(this,arguments)}const i4=function s6(n,t,e){return C1.apply(this,arguments)},a4=V({movingAverage_:function r6(n,t,e,s,r=!0){const o=$(n,"v","movingAverage"),i=$(t,"x","movingAverage"),a=$(e,"decay","movingAverage");E3(o,i),E(At(o.shape,i.shape),()=>"Shape mismatch in v and x");const l=Ze(1),u=Pe(l,a);let c=G(Pe(i,o),u);if(r){E(null!=s,()=>"When using zeroDebias: true, step is required.");const h=$(s,"step","movingAverage");c=Me(c,Pe(l,Qo(a,h)))}return ge(o,c)}}),l4=V({scatterND_:function o6(n,t,e){Xn(e);const s=$(n,"indices","scatterND","int32"),r=$(t,"updates","scatterND");return tp(r,s,e),z.runKernel(Id,{indices:s,updates:r},{shape:e})}}),u4=V({sparseToDense_:function a6(n,t,e,s=0){Xn(e);const r=$(n,"sparseIndices","sparseToDense","int32"),o=$(t,"sparseValues","sparseToDense","string_or_numeric"),i=$(s,"defaultValue","sparseToDense",o.dtype);return function i6(n,t,e,s){if("int32"!==n.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(e.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${o}.`);if(0!==t.rank&&(1!==t.rank||t.size!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,o,e,i),z.runKernel(Ad,{sparseIndices:r,sparseValues:o,defaultValue:i},{outputShape:e})}}),c4=V({gatherND_:function l6(n,t){const e=$(t,"indices","gatherND","int32"),r={params:$(n,"x","gatherND","string_or_numeric"),indices:e};return z.runKernel(rd,r)}}),N1=V({dropout_:function c6(n,t,e,s){const r=$(n,"x","dropout");if(E("float32"===r.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),E(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return n instanceof Mt?r.clone():r;const o=function u6(n,t){if(null==t)return n.shape.slice();if(At(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)e.push(null==t[s]&&null!=n.shape[s]?n.shape[s]:t[s]);return e}return t}(r,e),i=1-t,a=Me(au(ge(Ki(o,0,1,"float32",s),i)),i);return G(r,a)}});function k1(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function Ep(n,t,e){const s=1-n%2,r=new Float32Array(n);for(let o=0;o<n;++o){const i=2*Math.PI*o/(n+s-1);r[o]=t-e*Math.cos(i)}return jn(r,"float32")}function T1(){return(T1=(0,ce.Z)(function*(n,t,e=1){const s=$(n,"predictions","inTopK"),r=$(t,"targets","inTopK");E(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),E(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Vn(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=s.shape[s.shape.length-1];E(e>0&&e<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${e}`);const i=yield s.data(),a=yield r.data(),[l,u]=[i.length/o,o],c=$n("bool",l);for(let h=0;h<l;h++){const d=h*u,p=i.subarray(d,d+u),f=[];for(let g=0;g<p.length;g++)f.push({value:p[g],index:g});f.sort((g,m)=>m.value-g.value),c[h]=0;for(let g=0;g<e;g++)if(f[g].index===a[h]){c[h]=1;break}}return n!==s&&s.dispose(),t!==r&&r.dispose(),vr(c,r.shape,"bool")})).apply(this,arguments)}const h4=function h6(n,t){return T1.apply(this,arguments)},_1=V({conv2DBackpropFilter_:function d6(n,t,e,s,r,o="NHWC",i){let a=n;3===n.rank&&(a=H(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;3===l.rank&&(l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]])),E(4===a.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),E(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),E(4===e.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const u="NHWC"===o?a.shape[3]:a.shape[1],c="NHWC"===o?l.shape[3]:l.shape[1];return E(u===e[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${e[2]}.`),E(c===e[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${e[3]}).`),Os("conv2dDerFilter",r,i),z.runKernel(pe,{x:a,dy:l},{strides:s,pad:r,dataFormat:o,dimRoundingMode:i,filterShape:e})}});function Ap(n,t,e){if(null==e||"linear"===e)return n;if("relu"===e)return G(n,Pa(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function $p(n,t){let e=t;const s=Jn(n.shape,t.shape);return s.length>0&&(e=He(e,s)),H(e,n.shape)}function Rp(n,t,e,s){if("linear"===t)return n;if("relu"===t)return eo(n);if("elu"===t)return ru(n);if("relu6"===t)return gp(n);if("prelu"===t)return dh(n,e);if("leakyrelu"===t)return oh(n,s);if("sigmoid"===t)return sr(n);throw new Error(`Unknown fused activation ${t}.`)}const Dp=(n,t)=>!(n>0)||"linear"===t,d4=V({fusedConv2d_:function p6({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Dp(z.state.gradientDepth,l=l||"linear")){E("NHWC"===r,()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let _=ni(n,t,e,s,r,o,i);return null!=a&&(_=ge(_,a)),Rp(_,l,u,c)}const h=$(n,"x","conv2d","float32"),d=$(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=H(h,[1,h.shape[0],h.shape[1],h.shape[2]])),E(4===p.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),E(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Os("fused conv2d",s,i);const g="NHWC"===r?p.shape[3]:p.shape[1];E(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),E(vs(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);const m=ps(p.shape,d.shape,e,o,s,i);let y,b;if(null!=a&&(y=$(a,"bias","fused conv2d"),[y]=Rn(y,h),"NHWC"===r?yt(m.outShape,y.shape):(E(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),E(0===y.shape.length||y.shape[0]===m.outChannels||1===y.shape[0],()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${m.outChannels})`))),null!=u){const _=u.shape;if(E(_.length<=1||3===_.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${_.length}.`),1===_.length)E(1===_[0]||_[0]===m.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the number of output channels (${m.outChannels}).`);else if(3===_.length)try{yt(_,m.outShape)}catch{throw Error(`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the output shape of the conv2d (${m.outShape}).`)}b=$(u,"prelu weights","fused conv2d")}const S=(_,R)=>{E("NHWC"===r,()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[F,O,L,j]=R,Q=Ap(_,L,l);E(Ui(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const oe=[Ug(O.shape,Q,F,e,s),_1(O,Q,F.shape,e,s)];if(null!=j){const ae=$p(j,Q);oe.push(ae)}return oe},w={x:p,filter:d,bias:y,preluActivationWeights:b},I={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==a?ko((R,F,O)=>{let L=z.runKernel(zc,w,I);return O([F,R,L]),f&&(L=H(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:S}})(p,d):ko((R,F,O,L)=>{let j=z.runKernel(zc,w,I);return L([F,R,j,O]),f&&(j=H(j,[j.shape[1],j.shape[2],j.shape[3]])),{value:j,gradFunc:S}})(p,d,y)}}),p4=V({depthwiseConv2dNativeBackpropFilter_:function f6(n,t,e,s,r,o=[1,1],i){let a=n;3===n.rank&&(a=H(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;return 3===l.rank&&(l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]])),z.runKernel(Bn,{x:a,dy:l},{strides:s,pad:r,dimRoundingMode:i,dilations:o,filterShape:e})}}),f4=V({depthwiseConv2dNativeBackpropInput_:function m6(n,t,e,s,r,o=[1,1],i){let a=t,l=!1;3===t.rank&&(l=!0,a=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h=z.runKernel(tn,{dy:a,filter:e},{strides:s,pad:r,dimRoundingMode:i,dilations:o,inputShape:n});return l?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),y6=V({fusedDepthwiseConv2d_:function g6({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Dp(z.state.gradientDepth,l)){let I=su(n,t,e,s,r,o,i);return null!=a&&(I=ge(I,a)),Rp(I,l,u,c)}const h=$(n,"x","depthwiseConv2d","float32"),d=$(t,"filter","depthwiseConv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=H(h,[1,h.shape[0],h.shape[1],h.shape[2]])),E(4===p.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),E(4===d.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),E(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),null==o&&(o=[1,1]),E(vs(e,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),Os("fused depthwiseConv2d",s,i);const g=ps(p.shape,d.shape,e,o,s,i,!0);let m,y;null!=a&&(m=$(a,"bias","fused conv2d"),[m]=Rn(m,h),yt(g.outShape,m.shape)),null!=u&&(y=$(u,"prelu weights","fused depthwiseConv2d"));const b=(I,_)=>{E(Ui(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[R,F,O,L]=_,j=Ap(I,O,l),Q=f4(F.shape,j,R,e,s,o,i),te=p4(F,j,R.shape,e,s,o,i);return null!=L?[Q,te,$p(m,j)]:[Q,te]},S={x:p,filter:d,bias:m,preluActivationWeights:y},w={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==a?ko((_,R,F)=>{let O=z.runKernel(Bc,S,w);return F([R,_,O]),f&&(O=H(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:b}})(p,d):ko((_,R,F,O)=>{let L=z.runKernel(Bc,S,w);return O([R,_,L,F]),f&&(L=H(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:b}})(p,d,m)}}),E1=V({fusedMatMul_:function b6({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(!1===Dp(z.state.gradientDepth,o)){let j=Tt(n,t,e,s);return null!=r&&(j=ge(j,r)),Rp(j,o,i,a)}let l=$(n,"a","fused matMul"),u=$(t,"b","fused matMul");[l,u]=Rn(l,u);const c=e?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=e?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),m=ie(f),y=ie(g);E(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${e} and transposeB=${s} must match.`);const S=yt(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),w=H(l,e?[m,c,d]:[m,d,c]),I=H(u,s?[y,p,h]:[y,h,p]);let _,R;null!=r&&(_=$(r,"bias","fused matMul"),[_]=Rn(_,l),yt(S,_.shape)),null!=i&&(R=$(i,"prelu weights","fused matMul"));const F=(j,Q)=>{const[te,se,oe,ae]=Q,ue=Ap(H(j,oe.shape),oe,o);let re,de;return e||s?!e&&s?(re=Tt(ue,se,!1,!1),de=Tt(ue,te,!0,!1)):e&&!s?(re=Tt(se,ue,!1,!0),de=Tt(te,ue,!1,!1)):(re=Tt(se,ue,!0,!0),de=Tt(ue,te,!0,!0)):(re=Tt(ue,se,!1,!0),de=Tt(te,ue,!0,!1)),null!=r?[re,de,$p(ae,ue)]:[re,de]},O={a:w,b:I,bias:_,preluActivationWeights:R},L={transposeA:e,transposeB:s,activation:o,leakyreluAlpha:a};return null==r?ko((Q,te,se)=>{const oe=z.runKernel(Mc,O,L);return se([Q,te,oe]),{value:H(oe,S),gradFunc:F}})(w,I):ko((Q,te,se,oe)=>{const ae=z.runKernel(Mc,O,L);return oe([Q,te,ae,se]),{value:H(ae,S),gradFunc:F}})(w,I,_)}}),v6=V({hammingWindow_:function x6(n){return Ep(n,.54,.46)}}),m4=V({hannWindow_:function w6(n){return Ep(n,.5,.5)}}),g4=V({frame_:function S6(n,t,e,s=!1,r=0){let o=0;const i=[];for(;o+t<=n.size;)i.push(at(n,o,t)),o+=e;if(s)for(;o<n.size;){const a=o+t-n.size,l=Fn([at(n,o,t-a),Ta([a],r)]);i.push(l),o+=e}return 0===i.length?ii([],[0,t]):H(Fn(i),[i.length,t])}}),C6=V({stft_:function I6(n,t,e,s,r=m4){null==s&&(s=k1(t));const o=g4(n,t,e),i=G(o,r(t));return yh(i,s)}}),k6=V({cropAndResize_:function N6(n,t,e,s,r="bilinear",o=0){const i=$(n,"image","cropAndResize"),a=$(t,"boxes","cropAndResize","float32"),l=$(e,"boxInd","cropAndResize","int32"),u=a.shape[0];return E(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),E(2===a.rank&&4===a.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),E(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),E(2===s.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),E(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),E("bilinear"===r||"nearest"===r,()=>`method must be bilinear or nearest, but was ${r}`),z.runKernel(qe,{image:i,boxes:a,boxInd:l},{method:r,extrapolationValue:o,cropSize:s})}}),_6=V({flipLeftRight_:function T6(n){const t=$(n,"image","flipLeftRight","float32");return E(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),z.runKernel(sd,{image:t},{})}}),A6=V({grayscaleToRGB_:function E6(n){const t=$(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];E(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),E(1===s,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(t.rank);return r.fill(1,0,e),r[e]=3,Cr(t,r)}}),R6=V({rgbToGrayscale_:function $6(n){const t=$(n,"image","RGBToGrayscale"),s=t.shape[t.rank-1];E(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),E(3===s,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=t.dtype,o=Te(t,"float32"),i=jn([.2989,.587,.114]);let a;switch(t.rank){case 2:a=Fa("ij,j->i",o,i);break;case 3:a=Fa("ijk,k->ij",o,i);break;case 4:a=Fa("ijkl,l->ijk",o,i);break;case 5:a=Fa("ijklm,m->ijkl",o,i);break;case 6:a=Fa("ijklmn,n->ijklm",o,i);break;default:throw new Error("Not a valid tensor rank.")}return a=_n(a,-1),Te(a,r)}}),F6=V({rotateWithOffset_:function D6(n,t,e=0,s=.5){const r=$(n,"image","rotateWithOffset","float32");return E(4===r.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`),z.runKernel(Bd,{image:r},{radians:t,fillValue:e,center:s})}});function du(n,t,e,s,r,o){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==o&&(o=0);const i=n.shape[0];return e=Math.min(e,i),E(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),E(2===n.rank,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),E(4===n.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),E(1===t.rank,()=>"scores must be a 1D tensor"),E(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),E(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}const L6=V({nonMaxSuppression_:function O6(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const o=$(n,"boxes","nonMaxSuppression","float32"),i=$(t,"scores","nonMaxSuppression","float32"),a=du(o,i,e,s,r);return z.runKernel(pd,{boxes:o,scores:i},{maxOutputSize:e=a.maxOutputSize,iouThreshold:s=a.iouThreshold,scoreThreshold:r=a.scoreThreshold})}});function P6(n,t,e){const s=function M6(n,t,e){return function B6(n,t,e){let s=0,r=n.length,o=0,i=!1;for(;s<r;){o=s+(r-s>>>1);const a=e(t,n[o]);a>0?s=o+1:(r=o,i=!a)}return i?s:-s-1}(n,t,e||z6)}(n,t,e);n.splice(s<0?-(s+1):s,0,t)}function z6(n,t){return n>t?1:n<t?-1:0}function Fp(n,t,e,s,r){return A1(n,t,e,s,r,0)}function Op(n,t,e,s,r,o){return A1(n,t,e,s,r,0,!1,o,!0)}function Lp(n,t,e,s,r,o){return A1(n,t,e,s,r,o,!0)}function A1(n,t,e,s,r,o,i=!1,a=!1,l=!1){const u=[];for(let m=0;m<t.length;m++)t[m]>r&&u.push({score:t[m],boxIndex:m,suppressBeginIndex:0});u.sort(y4);const c=o>0?-.5/o:0,h=[],d=[];for(;h.length<e&&u.length>0;){const m=u.pop(),{score:y,boxIndex:b,suppressBeginIndex:S}=m;if(y<r)break;let w=!1;for(let I=h.length-1;I>=S;--I){const _=V6(n,b,h[I]);if(_>=s){w=!0;break}if(m.score=m.score*W6(s,c,_),m.score<=r)break}m.suppressBeginIndex=h.length,w||(m.score===y?(h.push(b),d.push(m.score)):m.score>r&&P6(u,m,y4))}const p=h.length,f=e-p;a&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return i&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function V6(n,t,e){const s=n.subarray(4*t,4*t+4),r=n.subarray(4*e,4*e+4),o=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(a-o)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(o,u),m=Math.max(i,c),y=Math.min(a,h),b=Math.min(l,d),S=Math.max(y-g,0)*Math.max(b-m,0);return S/(p+f-S)}function W6(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function y4(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}function $1(){return($1=(0,ce.Z)(function*(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const o=$(n,"boxes","nonMaxSuppressionAsync"),i=$(t,"scores","nonMaxSuppressionAsync"),a=du(o,i,e,s,r);e=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l=yield Promise.all([o.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=Fp(u,c,e,s,r);return o!==n&&o.dispose(),i!==t&&i.dispose(),jn(h,"int32")})).apply(this,arguments)}const j6=V({nonMaxSuppressionWithScore_:function H6(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=$(n,"boxes","nonMaxSuppression"),a=$(t,"scores","nonMaxSuppression"),l=du(i,a,e,s,r,o),h=z.runKernel(md,{boxes:i,scores:a},{maxOutputSize:e=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:o=l.softNmsSigma});return{selectedIndices:h[0],selectedScores:h[1]}}});function R1(){return(R1=(0,ce.Z)(function*(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=$(n,"boxes","nonMaxSuppressionAsync"),a=$(t,"scores","nonMaxSuppressionAsync"),l=du(i,a,e,s,r,o);e=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const u=yield Promise.all([i.data(),a.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Lp(c,h,e,s,r,o);return i!==n&&i.dispose(),a!==t&&a.dispose(),{selectedIndices:jn(d,"int32"),selectedScores:jn(p)}})).apply(this,arguments)}const Z6=V({nonMaxSuppressionPadded_:function X6(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=$(n,"boxes","nonMaxSuppression"),a=$(t,"scores","nonMaxSuppression"),l=du(i,a,e,s,r,null),f=z.runKernel(fd,{boxes:i,scores:a},{maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:o});return{selectedIndices:f[0],validOutputs:f[1]}}});function D1(){return(D1=(0,ce.Z)(function*(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=$(n,"boxes","nonMaxSuppressionAsync"),a=$(t,"scores","nonMaxSuppressionAsync"),l=du(i,a,e,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=yield Promise.all([i.data(),a.data()]),{selectedIndices:f,validOutputs:g}=Op(d,p,u,c,h,o);return i!==n&&i.dispose(),a!==t&&a.dispose(),{selectedIndices:jn(f,"int32"),validOutputs:Ze(g,"int32")}})).apply(this,arguments)}const b4=V({resizeBilinear_:function Q6(n,t,e=!1,s=!1){const r=$(n,"images","resizeBilinear");E(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),E(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),E(!1===s||!1===e,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;3===r.rank&&(i=!0,o=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,u=z.runKernel(kc,{images:o},{alignCorners:e,halfPixelCenters:s,size:t});return i?H(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),x4=V({resizeNearestNeighbor_:function e5(n,t,e=!1,s=!1){const r=$(n,"images","resizeNearestNeighbor");E(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),E(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),E("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype"),E(!1===s||!1===e,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;3===r.rank&&(i=!0,o=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,u=z.runKernel(Nc,{images:o},{alignCorners:e,halfPixelCenters:s,size:t});return i?H(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),s5=V({threshold_:function t5(n,t="binary",e=!1,s=.5){const r=$(n,"image","threshold"),l=r.shape[0]*r.shape[1];let c,h,d,p,u=G(jn([s]),255);if(E(3===r.rank,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),E(3===r.shape[2]||1===r.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),E("int32"===r.dtype||"float32"===r.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),E("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===r.shape[2]){[c,h,d]=Hs(r,[1,1,1],-1);const m=G(c,.2989),y=G(h,.587),b=G(d,.114);p=ge(ge(m,y),b)}else p=n;"otsu"===t&&(u=function n5(n,t){let o,i,a,l,u,c,e=jn([-1]),s=jn([0]),r=jn([0]);for(let h=0;h<n.size-1;h++){o=at(n,0,h+1),i=at(n,h+1),u=Me(He(o),t),c=Me(He(i),t);const d=He(G(o,oi(0,o.size)));a=Me(d,He(o));const p=Ta(i.shape,o.size),f=ge(oi(0,i.size),p),g=G(i,f);l=Me(He(g),He(i));const m=Pe(a,l),y=Pe(a,l),b=G(u,c);r=G(G(b,m),y);const S=Ps(r,s);s=ws(S,r,s),e=ws(S,jn([h]),e)}return e}(Pg(Te(yp(p),"int32"),vr([]),256),l));const f=e?Hi(p,u):Ps(p,u);return Te(G(f,255),"int32")}}),o5=V({transform_:function r5(n,t,e="nearest",s="constant",r=0,o){const i=$(n,"image","transform","float32"),a=$(t,"transforms","transform","float32");return E(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),E(2===a.rank&&(a.shape[0]===i.shape[0]||1===a.shape[0])&&8===a.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),E(null==o||2===o.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`),z.runKernel(Pd,{image:i,transforms:a},{interpolation:e,fillMode:s,fillValue:r,outputShape:o})}}),a5=V({bandPart_:function i5(n,t,e){const s=$(n,"a","bandPart");E(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,i]=s.shape.slice(-2);let a,l;"number"==typeof t?(E(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),E(t<=o,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`),a=$(t<0?o:t,"numLower","bandPart")):(E("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),a=ws(uu(t,0),o,ji(t,o))),"number"==typeof e?(E(e%1==0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),E(e<=i,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${i}).`),l=$(e<0?i:e,"numUpper","bandPart")):(E("int32"===e.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),l=ws(uu(e,0),i,ji(e,i)));const u=H(oi(0,o,1,"int32"),[-1,1]),c=oi(0,i,1,"int32"),h=Pe(u,c),d=Qr(Hi(h,a),si(h,vn(l))),p=Qn([o,i],s.dtype);return H(js(kr(H(s,[-1,o,i])).map(f=>ws(d,f,p))),r)}}),u5=V({gramSchmidt_:function l5(n){let t;if(Array.isArray(n)){t=!1,E(null!=n&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)E(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else t=!0,n=Hs(n,n.shape[0],0).map(r=>on(r,[0]));E(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let r=0;r<n.length;++r)e.push(z.tidy(()=>{let o=s[r];if(r>0)for(let i=0;i<r;++i){const a=G(He(G(e[i],o)),e[i]);o=Pe(o,a)}return Me(o,iu(o,"euclidean"))}));return t?js(e,0):e}});function v4(n,t=!1){return z.tidy(()=>{E(2===n.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let r=up(e),o=No(n);const i=ii([[1]],[1,1]);let a=No(i);const l=e>=s?s:e;for(let u=0;u<l;++u){const c=o,h=a,d=r;[a,o,r]=z.tidy(()=>{const p=at(o,[u,u],[e-u,1]),f=iu(p),g=at(o,[u,u],[1,1]),m=ws(Ps(g,0),ii([[-1]]),ii([[1]])),y=Pe(g,G(m,f)),b=Me(p,y);a=1===b.shape[0]?No(i):Fn([i,at(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const S=vn(Me(Tt(m,y),f)),w=at(o,[u,0],[e-u,s]),I=G(S,a),_=Gt(a);if(0===u)o=Pe(w,Tt(I,Tt(_,w)));else{const O=Pe(w,Tt(I,Tt(_,w)));o=Fn([at(o,[0,0],[u,s]),O],0)}const R=Gt(I),F=at(r,[0,u],[e,r.shape[1]-u]);if(0===u)r=Pe(F,Tt(Tt(F,a),R));else{const O=Pe(F,Tt(Tt(F,a),R));r=Fn([at(r,[0,0],[e,u]),O],1)}return[a,o,r]}),ht([c,h,d])}return!t&&e>s&&(r=at(r,[0,0],[e,s]),o=at(o,[0,0],[s,s])),[r,o]})}const h5=V({qr_:function c5(n,t=!1){if(E(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),2===n.rank)return v4(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((l,u)=>l*u),s=kr(H(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];return s.forEach(l=>{const[u,c]=v4(l,t);r.push(u),o.push(c)}),[H(js(r,0),n.shape),H(js(o,0),n.shape)]}}});var Ks=function(n){return n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",n}(Ks||{});const ai=V({computeWeightedLoss_:function d5(n,t,e=Ks.SUM_BY_NONZERO_WEIGHTS){const s=$(n,"losses","computeWeightedLoss");let r=null;null!=t&&(r=$(t,"weights","computeWeightedLoss"));const o=null==r?s:G(s,r);if(e===Ks.NONE)return o;if(e===Ks.SUM)return He(o);if(e===Ks.MEAN){if(null==r)return Ln(o);{const i=s.size/r.size,a=Me(He(o),He(r));return i>1?Me(a,Ze(i)):a}}if(e===Ks.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Me(He(o),Ze(s.size));{const i=G(r,Gs(s.shape)),a=Te(He(La(i,Ze(0))),"float32");return Me(He(o),a)}}throw Error(`Unknown reduction: ${e}`)}}),f5=V({absoluteDifference_:function p5(n,t,e,s=Ks.SUM_BY_NONZERO_WEIGHTS){const r=$(n,"labels","absoluteDifference"),o=$(t,"predictions","absoluteDifference");let i=null;null!=e&&(i=$(e,"weights","absoluteDifference")),Vn(r.shape,o.shape,"Error in absoluteDifference: ");const a=Yn(Pe(r,o));return ai(a,i,s)}}),g5=V({cosineDistance_:function m5(n,t,e,s,r=Ks.SUM_BY_NONZERO_WEIGHTS){const o=$(n,"labels","cosineDistance"),i=$(t,"predictions","cosineDistance");let a=null;null!=s&&(a=$(s,"weights","cosineDistance")),Vn(o.shape,i.shape,"Error in cosineDistance: ");const l=Ze(1),u=Pe(l,He(G(o,i),e,!0));return ai(u,a,r)}}),b5=V({hingeLoss_:function y5(n,t,e,s=Ks.SUM_BY_NONZERO_WEIGHTS){let r=$(n,"labels","hingeLoss");const o=$(t,"predictions","hingeLoss");let i=null;null!=e&&(i=$(e,"weights","hingeLoss")),Vn(r.shape,o.shape,"Error in hingeLoss: ");const a=Ze(1);r=Pe(G(Ze(2),r),a);const l=eo(Pe(a,G(r,o)));return ai(l,i,s)}}),v5=V({huberLoss_:function x5(n,t,e,s=1,r=Ks.SUM_BY_NONZERO_WEIGHTS){const o=$(n,"labels","huberLoss"),i=$(t,"predictions","huberLoss");let a=null;null!=e&&(a=$(e,"weights","huberLoss")),Vn(o.shape,i.shape,"Error in huberLoss: ");const l=Ze(s),u=Yn(Pe(i,o)),c=ji(u,l),h=Pe(u,c),d=ge(G(Ze(.5),dn(c)),G(l,h));return ai(d,a,r)}}),S5=V({logLoss_:function w5(n,t,e,s=1e-7,r=Ks.SUM_BY_NONZERO_WEIGHTS){const o=$(n,"labels","logLoss"),i=$(t,"predictions","logLoss");let a=null;null!=e&&(a=$(e,"weights","logLoss")),Vn(o.shape,i.shape,"Error in logLoss: ");const l=Ze(1),u=Ze(s),c=vn(G(o,or(ge(i,u)))),h=G(Pe(l,o),or(ge(Pe(l,i),u))),d=Pe(c,h);return ai(d,a,r)}}),C5=V({meanSquaredError_:function I5(n,t,e,s=Ks.SUM_BY_NONZERO_WEIGHTS){const r=$(n,"labels","meanSquaredError"),o=$(t,"predictions","meanSquaredError");let i=null;null!=e&&(i=$(e,"weights","meanSquaredError")),Vn(r.shape,o.shape,"Error in meanSquaredError: ");const a=Np(r,o);return ai(a,i,s)}}),T5=V({sigmoidCrossEntropy_:function k5(n,t,e,s=0,r=Ks.SUM_BY_NONZERO_WEIGHTS){let o=$(n,"multiClassLabels","sigmoidCrossEntropy");const i=$(t,"logits","sigmoidCrossEntropy");let a=null;if(null!=e&&(a=$(e,"weights","sigmoidCrossEntropy")),Vn(o.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=Ze(s),c=Ze(1),h=Ze(.5);o=ge(G(o,Pe(c,u)),G(h,u))}const l=function N5(n,t){const e=$(n,"labels","sigmoidCrossEntropyWithLogits"),s=$(t,"logits","sigmoidCrossEntropyWithLogits");Vn(e.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=eo(s),o=G(s,e),i=ih(_s(vn(Yn(s))));return ge(Pe(r,o),i)}(o,i);return ai(l,a,r)}}),A5=V({softmaxCrossEntropy_:function E5(n,t,e,s=0,r=Ks.SUM_BY_NONZERO_WEIGHTS){let o=$(n,"onehotLabels","softmaxCrossEntropy");const i=$(t,"logits","softmaxCrossEntropy");let a=null;if(null!=e&&(a=$(e,"weights","softmaxCrossEntropy")),Vn(o.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const u=Ze(s),c=Ze(1),h=Ze(o.shape[1]);o=ge(G(o,Pe(c,u)),Me(u,h))}const l=function _5(n,t,e=-1){if(-1===e&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return ko((r,o,i)=>{const l=ah(o,[e],!0),u=Pe(Te(o,"float32"),l);i([r,u]);const c=vn(G(u,r));return{value:He(c,[e]),gradFunc:(p,f)=>{const[g,m]=f,y=Gn(p.shape,[e]);return[G(H(p,y),Pe(Te(g,"float32"),_s(m))),G(H(p,y),Pe(_s(m),Te(g,"float32")))]}}})(n,t)}(o,i);return ai(l,a,r)}}),w4={fft:gh,ifft:hu,rfft:yh,irfft:Cp},S4={hammingWindow:v6,hannWindow:m4,frame:g4,stft:C6},ms={flipLeftRight:_6,grayscaleToRGB:A6,resizeNearestNeighbor:x4,resizeBilinear:b4,rgbToGrayscale:R6,rotateWithOffset:F6,cropAndResize:k6,nonMaxSuppression:L6,nonMaxSuppressionAsync:function U6(n,t,e){return $1.apply(this,arguments)},nonMaxSuppressionWithScore:j6,nonMaxSuppressionWithScoreAsync:function K6(n,t,e){return R1.apply(this,arguments)},nonMaxSuppressionPadded:Z6,nonMaxSuppressionPaddedAsync:function Y6(n,t,e){return D1.apply(this,arguments)},threshold:s5,transform:o5},F1={bandPart:a5,gramSchmidt:u5,qr:h5},I4={absoluteDifference:f5,computeWeightedLoss:ai,cosineDistance:g5,hingeLoss:b5,huberLoss:v5,logLoss:S5,meanSquaredError:C5,sigmoidCrossEntropy:T5,softmaxCrossEntropy:A5},C4={sparseFillEmptyRows:V({sparseFillEmptyRows_:function $5(n,t,e,s){const r=$(n,"indices","sparseFillEmptyRows","int32"),o=$(t,"values","sparseFillEmptyRows"),i=$(e,"denseShape","sparseFillEmptyRows","int32"),a=$(s,"defaultValue","sparseFillEmptyRows",o.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==o.rank)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==a.rank)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const u=z.runKernel(kd,{indices:r,values:o,denseShape:i,defaultValue:a});return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),sparseReshape:V({sparseReshape_:function D5(n,t,e){const s=$(n,"inputIndices","sparseReshape","int32"),r=$(t,"inputShape","sparseReshape","int32"),o=$(e,"newShape","sparseReshape","int32");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==o.rank)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const a=z.runKernel(Td,{inputIndices:s,inputShape:r,newShape:o});return{outputIndices:a[0],outputShape:a[1]}}}),sparseSegmentMean:V({sparseSegmentMean_:function O5(n,t,e){const s=$(n,"data","sparseSegmentMean"),r=$(t,"indices","sparseSegmentMean","int32"),o=$(e,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==o.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${o.shape}`);return z.runKernel(_d,{data:s,indices:r,segmentIds:o})}}),sparseSegmentSum:V({sparseSegmentSum_:function P5(n,t,e){const s=$(n,"data","sparseSegmentSum"),r=$(t,"indices","sparseSegmentSum","int32"),o=$(e,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==o.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${o.shape}`);return z.runKernel(Ed,{data:s,indices:r,segmentIds:o})}})},N4={stringNGrams:V({stringNGrams_:function z5(n,t,e,s,r,o,i,a){const l=$(n,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=$(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const d=z.runKernel(Dd,{data:l,dataSplits:u},{separator:e,nGramWidths:s,leftPad:r,rightPad:o,padWidth:i,preserveShortSequences:a});return{nGrams:d[0],nGramsSplits:d[1]}}}),stringSplit:V({stringSplit_:function V5(n,t,e=!0){const s=$(n,"input","stringSplit","string"),r=$(t,"delimiter","stringSplit","string");if(1!==s.rank)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const a=z.runKernel(Fd,{input:s,delimiter:r},{skipEmpty:e});return{indices:a[0],values:a[1],shape:a[2]}}}),stringToHashBucketFast:V({stringToHashBucketFast_:function U5(n,t){const e=$(n,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");return z.runKernel(Od,{input:e},s)}}),staticRegexReplace:V({staticRegexReplace_:function H5(n,t,e,s=!0){const r=$(n,"input","staticRegexReplace","string");return z.runKernel(Fc,{x:r},{pattern:t,rewrite:e,replaceGlobal:s})}})},Ma=Iy,K5=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function O1(){return new Promise(n=>K5(()=>n()))}function L1(n,t){const e=n[0].length;n.forEach((r,o)=>{E(r.length===e,()=>`Error in concat${e}D: rank of tensors[${o}] must be the same as the rank of the rest (${e})`)}),E(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((r,o)=>{for(let i=0;i<e;i++)E(i===t||r[i]===s[i],()=>`Error in concat${e}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function _o(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}var Eo=function(n){return n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS",n}(Eo||{});function k4(n,t,e){let s=new Array;if(null==e&&null==t)return s;if(null==t)for(;s.length<n+e.length;)s.push(-1);else s=t.slice();if(null==e)return s;if(n+e.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${s.length}`);for(let r=1;r<e.length;++r){const o=e[r],i=s[s.length-e.length+r],a=s[i];if(o>=0)if(a>=0){if(a!==o)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+n}] = ${o} but shape[${r+n}] = ${a}`)}else s[i]=o}return s}function T4(n){const t={FIRST_DIM_SIZE:Eo.FIRST_DIM_SIZE,VALUE_ROWIDS:Eo.VALUE_ROWIDS,ROW_LENGTHS:Eo.ROW_LENGTHS,ROW_SPLITS:Eo.ROW_SPLITS,ROW_LIMITS:Eo.ROW_LIMITS,ROW_STARTS:Eo.ROW_STARTS},e=[];for(const s of n){if(!(s in t))break;e.push(t[s])}return e}function _4(n){return 0===n.length?0:n[0]===Eo.FIRST_DIM_SIZE?n.length-1:n.length}function E4(n,t){if(null==n||null==t)return;const e=n.length,s=t.length;if(e>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(e,s-1);++r){const o=n[r],i=t[r+1];if(o>=0&&i>=0&&1!==o&&o!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-n.length}] = ${o} but ragged tensor input.flatValues.shape[${r-n.length}] = ${i}`)}}const P1=30;function Pp(n){return n<=P1?n:Or(n,Math.floor(Math.sqrt(n)))}function M1(n,t,e){return[e*("number"==typeof n?n:n[0]),t*("number"==typeof n?n:n[1])]}function bh(n,t,e,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(n[0]/e),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=t.length;for(let i=0;i<o;++i)r=r.concat([n[i+1]/t[i],t[i]]);r=r.concat(n.slice(o+1))}return r}function xh(n,t,e=!0){const s=[];if(e){s.push(t);for(let r=t+1;r<n;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{const r=[],o=[];for(let i=1;i<n;++i)i>=2*t+1||i%2==1?o.push(i):r.push(i);s.push(...r),s.push(0),s.push(...o)}return s}function vh(n,t,e,s=!0){const r=[];r.push(s?n[0]/e:n[0]*e);for(let o=1;o<n.length;++o)r.push(o<=t.length?s?t[o-1]*n[o]:n[o]/t[o-1]:n[o]);return r}function z1(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function B1(n,t,e){const s=n.slice(0,1);for(let r=0;r<e;++r)s.push(n[r+1]-t[r][0]-t[r][1]);return s}const Mp=1.7580993408473768,zp=1.0507009873554805,V1=.3275911,W1=.254829592,U1=-.284496736,G1=1.421413741,H1=-1.453152027,j1=1.061405429;function li(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(2*n.length);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function A4(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function $4(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function R4(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function K1(n,t){return{real:n[2*t],imag:n[2*t+1]}}function D4(n,t,e,s){n[2*s]=t,n[2*s+1]=e}function F4(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(t?2:-2)*Math.PI*(r/n);e[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:e,imag:s}}function O4(n,t,e){const s=(e?2:-2)*Math.PI*(n/t);return{real:Math.cos(s),imag:Math.sin(s)}}const q1="->",q5=/->/g,L4=",",P4="...";function X1(n,t){const e=((n=n.replace(/\s/g,"")).length-n.replace(q5,"").length)/q1.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${q1}").`);const[s,r]=n.split(q1);E(-1===s.indexOf(P4),()=>`The ellipsis notation ("${P4}") is not supported yet.`);const o=s.split(L4),i=o.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<r.length;++d){const p=r[d];if(!o.some(f=>-1!==f.indexOf(p)))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);-1===a.indexOf(p)&&a.push(p)}for(let d=0;d<s.length;++d){const p=s[d];-1===a.indexOf(p)&&p!==L4&&a.push(p)}const l=new Array(o.length);for(let d=0;d<i;++d){if(new Set(o[d].split("")).size!==o[d].length)throw new Error(`Found duplicate axes in input component ${o[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<o[d].length;++p)l[d].push(a.indexOf(o[d][p]))}const u=a.length,h=[];for(let d=r.length;d<u;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function Z1(n,t){let e=new Array(n);e.fill(-1);for(let r=0;r<t.length;++r)e[t[r]]=r;const s=[];for(let r=0;r<n;++r)-1===e[r]&&s.push(r);return e=e.filter(r=>-1!==r),{permutationIndices:e,expandDims:s}}function Y1(n,t,e){const s=new Array(n);for(let r=0;r<e.length;++r){const o=e[r].shape;for(let i=0;i<t[r].length;++i)void 0===s[t[r][i]]?s[t[r][i]]=o[i]:E(s[t[r][i]]===o[i],()=>`Expected dimension ${s[t[r][i]]} at axis ${i} of input shaped ${JSON.stringify(o)}, but got dimension ${o[i]}`)}}function J1(n,t){const e=n,s=[];let r=0;0===n.length&&e.push(-1),r=n.length+1;for(let i=0;i<r;++i)s.push([]);const o=[];for(let i=0;i<e.length;++i){const l=X5(t,e[i]);for(const u of l)-1===o.indexOf(u)&&(s[i].push(u),o.push(u))}return{path:e,steps:s}}function Q1(n){return n.every((t,e)=>t===e)}function X5(n,t){const e=[];for(let s=0;s<n.length;++s)(0===n[s].length||-1!==n[s].indexOf(t)||-1===t)&&e.push(s);return e}function e2(n,t,e=0){let s=[];if("number"==typeof t)E(n.shape[e]%t==0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{E(t.reduce((i,a)=>(-1===a&&(i+=1),i),0)<=1,()=>"There should be only one negative value in split array.");const o=t.indexOf(-1);if(-1!==o){const i=t.reduce((a,l)=>l>0?a+l:a);t[o]=n.shape[e]-i}E(n.shape[e]===t.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}function M4(n){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${n}`}function z4(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function B4(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}function V4(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function W4(n,t){return`size ${n} must be non-negative, not ${t}`}function U4(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function G4(n,t){return`Input to reshape is a SparseTensor with ${ie(n)}\n  dense values, but the requested shape requires a multiple of ${ie(t)}. inputShape=${n} outputShape= ${t}`}function H4(n,t){return`Input to reshape is a tensor with ${ie(n)} dense values, but the requested shape has ${ie(t)}. inputShape=${n} outputShape=${t}`}function t2(){return"segment ids must be >= 0"}function j4(){return"segment ids are not increasing"}function K4(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function q4(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}function X4(n,t){let s,e=!1;for(n<=P1?(s=n,e=!0):s=Or(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=Or(n,s+1);return s}function Z4(n,t,e){const s=[],r=n.length;for(let o=0;o<r;o++)s.push(o!==t?n[o]:e);return s}function n2(n,t,e,s){const r=t.shape.length,o=n.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${o}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let h=0;h<s;++h)if(n.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const i=n.shape[e],a=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)a.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<e;h++)a.push(n.shape[h]),u*=n.shape[h];for(let h=s;h<r;h++)a.push(t.shape[h]);for(let h=e+1;h<o;h++)a.push(n.shape[h]),c*=n.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:a}}function ui(n){try{return n.map(t=>Zo(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Y4(n){return n.map(t=>wo(t))}!function tk(){for(const n of ek)Se(n)}(),J().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var J4,to=function(n){return n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF",n}(to||{});!function(n){let t;var e;(e=t=n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(J4||(J4={}));const s2={};function Q4(n){return s2[n]}function C(n,t,e,s,r){const o=t.inputParams[n];if(o&&void 0!==o.inputIndexStart){const a=o.inputIndexStart,l=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?a+1:o.inputIndexEnd,u=a<0?t.inputNames.length+a:a;if("tensor"===o.type)return Is(t.inputNames[u],e,s,r);if("tensors"===o.type){const d=t.inputs.slice(a,l);return t.inputNames.slice(a,l).filter((f,g)=>{var m;return"NoOp"!==(null===(m=d[g])||void 0===m?void 0:m.op)}).map(f=>Is(f,e,s,r))}const c=Is(t.inputNames[u],e,s,r),h=c.dataSync();return"number"===o.type?h[0]:hn(c.shape,h)}const i=t.attrParams[n];return i&&i.value}function Is(n,t,e,s){const[r,o]=ar(n,e);if(null!=s){const a=s.getHashTableHandleByName(r);if(null!=a)return a}const i=e.currentContextIds.find(a=>!!t[Bp(r,a)]);return void 0!==i?t[Bp(r,i)][o]:void 0}function eb(n,t,e){return t[Bp(n,e.currentContextId)]}function ci(n,t){const[e,s,r]=ar(n,t);return[Bp(e,t&&t.currentContextId),s,r]}function Bp(n,t){return t?`${n}-${t}`:n}function ar(n,t){if(""===n)return["",0,void 0];const e=null!=t&&null!=t.parseNodeNameCache;if(e){const o=t.parseNodeNameCache.get(n);if(null!=o)return o}const s=n.split(":");let r;if(1===s.length)r=[n,0,void 0];else{const i=3===s.length?s[1]:void 0;r=[s[0],Number(s[s.length-1]),i]}return e&&t.parseNodeNameCache.set(n,r),r}function Vp(n,t,e){let s=C("pad",n,t,e);if("explicit"===s){s=C("explicitPaddings",n,t,e);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)r[o][0]=s[2*o],r[o][1]=s[2*o+1];return r}return s}function hi(n){return n.kept?n:No(n)}const Z5=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Y5=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],J5=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Q5=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],eA=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],tA=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],nA=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],sA=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],rA=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],oA=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],iA=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],aA=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],lA=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],uA=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],cA=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],hA=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],dA=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],pA=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],fA=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class tb{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[Mn,er,ks,_t,qt,ft,we,me,B,ke,rt,Bt,Et,Xt,kn,Tn,zn,rn,ys].map(s=>s.json));this.opMappers=e.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(t,e={}){const r=[],o=[],i=[],a=t.node.reduce((g,m)=>(g[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?r.push(g[m.name]):"Const"===m.op?o.push(g[m.name]):(null==m.input||0===m.input.length)&&i.push(g[m.name]),g),{});let l=[];const u=[];let c={},h={};null!=e&&(c=this.mapSignatureEntries(e.inputs),h=this.mapSignatureEntries(e.outputs));const d=Object.keys(a);d.forEach(g=>{const m=a[g];m.inputNames.forEach((y,b)=>{const[S,,w]=ci(y),I=a[S];if(null!=I.outputs){const _=I.outputs.indexOf(w);-1!==_&&(m.inputNames[b]=`${S}:${_}`)}m.inputs.push(I),I.children.push(m)})}),0===Object.keys(h).length?d.forEach(g=>{const m=a[g];0===m.children.length&&u.push(m)}):Object.keys(h).forEach(g=>{const[m]=ci(g),y=a[m];null!=y&&(y.signatureKey=h[g],u.push(y))}),Object.keys(c).length>0?Object.keys(c).forEach(g=>{const[m]=ci(g),y=a[m];y&&(y.signatureKey=c[g],l.push(y))}):l=r;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce((g,m)=>(g[m.signature.name]=this.mapFunction(m),g),{}));const f={nodes:a,inputs:l,outputs:u,weights:o,placeholders:r,signature:e,functions:p};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,s)=>(e[t[s].name]=s,e),{})}mapNode(t){const e=Q4(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const s={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return null!=e.inputs&&(s.inputParams=e.inputs.reduce((r,o)=>(r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},r),{})),null!=e.attrs&&(s.attrParams=e.attrs.reduce((r,o)=>{const i=o.type;let a;switch(o.type){case"string":a=r2(t.attr,o.tfName,o.defaultValue),void 0===a&&o.tfDeprecatedName&&(a=r2(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":a=d2(t.attr,o.tfName,o.defaultValue),void 0===a&&o.tfDeprecatedName&&(a=d2(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":a=i2(t.attr,o.tfName,o.defaultValue||0),void 0===a&&o.tfDeprecatedName&&(a=i2(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":a=h2(t.attr,o.tfName,o.defaultValue),void 0===a&&o.tfDeprecatedName&&(a=h2(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":a=o2(t.attr,o.tfName,o.defaultValue),void 0===a&&o.tfDeprecatedName&&(a=o2(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":a=f2(t.attr,o.tfName,o.defaultValue),void 0===a&&o.tfDeprecatedName&&(a=f2(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":a=c2(t.attr,o.tfName,o.defaultValue),void 0===a&&o.tfDeprecatedName&&(a=c2(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":a=p2(t.attr,o.tfName,o.defaultValue),void 0===a&&o.tfDeprecatedName&&(a=p2(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":a=l2(t.attr,o.tfName,o.defaultValue),void 0===a&&o.tfDeprecatedName&&(a=l2(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":a=u2(t.attr,o.tfName,o.defaultValue),void 0===a&&o.tfDeprecatedName&&(a=u2(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":a=sb(t.attr,o.tfName,o.defaultValue),void 0===a&&o.tfDeprecatedName&&(a=sb(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${t.op}`)}return r[o.name]={value:a,type:i},r},{})),s}mapFunction(t){const e=t.nodeDef,r=[];let o={};null!=e&&(o=e.reduce((h,d)=>(h[d.name]=this.mapNode(d),"Const"===d.op&&r.push(h[d.name]),h),{}));const i=[],a=[];t.signature.inputArg.forEach(h=>{const[d]=ci(h.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:a2(h.type),type:"dtype"}},children:[]};p.signatureKey=h.name,i.push(p),o[d]=p}),Object.keys(o).forEach(h=>{const d=o[h];d.inputNames.forEach((p,f)=>{const[g,,m]=ci(p),y=o[g];if(null!=y.outputs){const b=y.outputs.indexOf(m);-1!==b&&(d.inputNames[f]=`${g}:${b}`)}d.inputs.push(y),y.children.push(d)})});const u=t.ret;t.signature.outputArg.forEach(h=>{const[d,p]=ci(u[h.name]),f=o[d];null!=f&&(f.defaultOutput=p,a.push(f))});const c=this.mapArgsToSignature(t);return{nodes:o,inputs:i,outputs:a,weights:r,placeholders:[],signature:c}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s),e),{}),outputs:t.signature.outputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s,t.ret),e),{})}}mapArgToTensorInfo(t,e){let s=t.name;return null!=e&&(s=e[s]),{name:s,dtype:t.type}}}function nb(n,t){const e=Array.isArray(n)?String.fromCharCode.apply(null,n):function mA(n){const t=J().global;if(typeof t.atob<"u")return t.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(n);return t?e:e.toLowerCase()}function r2(n,t,e,s=!1){const r=n[t];return null!=r?nb(r.s,s):e}function o2(n,t,e){const s=n[t];return s?s.b:e}function i2(n,t,e){const s=n[t]||{},r=null!=s.i?s.i:null!=s.f?s.f:e;return"number"==typeof r?r:parseInt(r,10)}function a2(n){switch("string"==typeof n&&(n=to[n]),n){case to.DT_FLOAT:case to.DT_HALF:return"float32";case to.DT_INT32:case to.DT_INT64:case to.DT_INT8:case to.DT_UINT8:return"int32";case to.DT_BOOL:return"bool";case to.DT_DOUBLE:return"float32";case to.DT_STRING:return"string";default:return null}}function sb(n,t,e){const s=n[t];return s&&s.func?s.func.name:e}function l2(n,t,e){const s=n[t];return s&&s.type?a2(s.type):e}function u2(n,t,e){const s=n[t];return s&&s.list&&s.list.type?s.list.type.map(r=>a2(r)):e}function rb(n){if(!n.unknownRank)return null!=n.dim?n.dim.map(t=>"number"==typeof t.size?t.size:parseInt(t.size,10)):[]}function c2(n,t,e){const s=n[t];return s&&s.shape?rb(s.shape):e}function h2(n,t,e){const s=n[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>"number"==typeof r?r:parseInt(r,10)):e}function d2(n,t,e,s=!1){const r=n[t];return r&&r.list&&r.list.s?r.list.s.map(o=>nb(o,s)):e}function p2(n,t,e){const s=n[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>rb(r)):e}function f2(n,t,e){const s=n[t];return s&&s.list&&s.list.b?s.list.b:e}class gA{constructor(t,e,s){this.node=t,this.tensorMap=e,this.context=s,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(r=>this.getInput(r)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((r,o)=>(r[o]=this.getAttr(o),r),{}))}getInput(t){return Is(t,this.tensorMap,this.context)}getAttr(t,e){const s=this.node.rawAttrs[t];if(null!=s.tensor)return Is(t,this.tensorMap,this.context);if(null!=s.i||null!=s.f)return i2(this.node.rawAttrs,t,e);if(null!=s.s)return r2(this.node.rawAttrs,t,e);if(null!=s.b)return o2(this.node.rawAttrs,t,e);if(null!=s.shape)return c2(this.node.rawAttrs,t,e);if(null!=s.type)return l2(this.node.rawAttrs,t,e);if(null!=s.list){if(null!=s.list.i||null!=s.list.f)return h2(this.node.rawAttrs,t,e);if(null!=s.list.s)return d2(this.node.rawAttrs,t,e);if(null!=s.list.shape)return p2(this.node.rawAttrs,t,e);if(null!=s.list.b)return f2(this.node.rawAttrs,t,e);if(null!=s.list.type)return u2(this.node.rawAttrs,t,e)}return e}}function Pr(n,t,e=""){if("number"!=typeof n&&"number"!=typeof t){E(n.length===t.length,()=>e+` Shapes ${n} and ${t} must match`);for(let s=0;s<n.length;s++){const r=n[s],o=t[s];E(r<0||o<0||r===o,()=>e+` Shapes ${n} and ${t} must match`)}}}function ob(n){return!("number"==typeof n||n.some(t=>t<0))}function wh(n,t,e){let s=m2(n,e);const r=!ob(s);if(r&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(o=>{s=m2(o.shape,s)}),!ob(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function m2(n,t){if("number"==typeof n)return t;if("number"==typeof t)return n;if(n.length!==t.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${t}`);const e=[];for(let s=0;s<n.length;++s){const r=n[s],o=t[s];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${t}`);e[s]=r>=0?r:o}return e}class xA{constructor(t,e,s,r,o,i,a){this.name=t,this.dtype=e,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Ze(0),ns(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(null==t||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=e.shape),Pr(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);s.tensor=e,ns(e),s.written=!0,this.tensors[t]=s}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((s,r)=>this.write(s,e[r]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let r=0;r<this.size();r++)t.push(r)}if(0===t.length)return vr([],[0].concat(this.elementShape));const s=this.readMany(t);return Pr(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),js(s,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return vr([],[0].concat(this.elementShape));const e=[];for(let r=0;r<this.size();r++)e.push(r);const s=this.readMany(e);return Pr(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),Fn(s,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(t,kr(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let s=0;const r=t.map(l=>(s+=l,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const o=0===s?0:e.size/s,i=[];q(()=>{e=H(e,[1,s,o]);for(let l=0;l<t.length;++l)i[l]=H(at(e,[0,0===l?0:r[l-1],0],[1,t[l],o]),this.elementShape);return i});const a=[];for(let l=0;l<t.length;l++)a[l]=l;this.writeMany(a,i)}}class za{get id(){return this.idTensor.id}constructor(t,e,s,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=s,null!=t&&t.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);Pr(e,o.shape,"TensorList shape mismatch: "),ns(o)}),this.idTensor=Ze(0),this.maxNumElements=r,ns(this.idTensor)}copy(){return new za([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(null==t||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,s=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==s&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);Pr(t,this.elementShape,"TensorList shape mismatch: ");const r=wh(this.elementShape,this.tensors,t);return q(()=>{const o=this.tensors.map(i=>H(i,r));return js(o,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const s=wh(this.elementShape,this.tensors,t),r=this.tensors.pop();return r.kept=!1,Pr(r.shape,t,"TensorList shape mismatch: "),H(r,s)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Pr(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ns(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);const e=new za([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let s=0;s<Math.min(this.tensors.length,t);++s)e.tensors[s]=this.tensors[s];return e}getItem(t,e,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);Pr(this.tensors[t].shape,e,"TensorList shape mismatch: ");const r=wh(this.elementShape,this.tensors,e);return H(this.tensors[t],r)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Pr(this.elementShape,e.shape,"TensorList shape mismatch: "),ns(e),null!=this.tensors[t]&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,s){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Pr(this.elementShape,s,"TensorList shape mismatch: "),t=t.slice(0,this.size());const r=wh(this.elementShape,this.tensors,s);return 0===t.length?vr([],[0].concat(r)):q(()=>{const o=t.map(i=>H(this.tensors[i],r));return js(o,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Pr(this.elementShape,e,"TensorList shape mismatch: ");const s=wh(this.elementShape,this.tensors,e);return 0===this.size()?vr([],[0].concat(s)):q(()=>{const r=this.tensors.map(o=>H(o,s));return Fn(r,0)})}}const CA=function(){var n=(0,ce.Z)(function*(t,e,s){switch(t.op){case"If":case"StatelessIf":{const r=C("thenBranch",t,e,s),o=C("elseBranch",t,e,s),i=C("cond",t,e,s),a=C("args",t,e,s);return(yield i.data())[0]?s.functionMap[r].executeFunctionAsync(a,s.tensorArrayMap,s.tensorListMap):s.functionMap[o].executeFunctionAsync(a,s.tensorArrayMap,s.tensorListMap)}case"While":case"StatelessWhile":{const r=C("body",t,e,s),o=C("cond",t,e,s),i=C("args",t,e,s),a=yield s.functionMap[o].executeFunctionAsync(i,s.tensorArrayMap,s.tensorListMap),l=i.map(h=>h.id);let u=yield a[0].data();a.forEach(h=>{!h.kept&&-1===l.indexOf(h.id)&&h.dispose()});let c=i;for(;u[0];){const h=c;c=yield s.functionMap[r].executeFunctionAsync(c,s.tensorArrayMap,s.tensorListMap);const d=c.map(f=>f.id);h.forEach(f=>{!f.kept&&-1===l.indexOf(f.id)&&-1===d.indexOf(f.id)&&f.dispose()});const p=yield s.functionMap[o].executeFunctionAsync(c,s.tensorArrayMap,s.tensorListMap);u=yield p[0].data(),p.forEach(f=>{!f.kept&&-1===l.indexOf(f.id)&&-1===d.indexOf(f.id)&&f.dispose()})}return c}case"LoopCond":return[hi(C("pred",t,e,s))];case"Switch":{const r=C("pred",t,e,s);let o=C("data",t,e,s);return o.kept||(o=hi(o)),(yield r.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{const r=t.inputNames.find(o=>void 0!==Is(o,e,s));return r?[hi(Is(r,e,s))]:void 0}case"Enter":{const r=C("frameName",t,e,s),o=C("tensor",t,e,s);return s.enterFrame(r),[hi(o)]}case"Exit":{const r=C("tensor",t,e,s);return s.exitFrame(),[hi(r)]}case"NextIteration":{const r=C("tensor",t,e,s);return s.nextIteration(),[hi(r)]}case"TensorArrayV3":{const r=C("size",t,e,s),o=C("dtype",t,e,s),i=C("elementShape",t,e,s),a=C("dynamicSize",t,e,s),l=C("clearAfterRead",t,e,s),u=C("identicalElementShapes",t,e,s),c=C("name",t,e,s),h=new xA(c,o,r,i,u,a,l);return s.addTensorArray(h),[h.idTensor,Ze(1)]}case"TensorArrayWriteV3":{const r=C("tensorArrayId",t,e,s),o=C("index",t,e,s),i=C("tensor",t,e,s),a=s.getTensorArray(r.id);return a.write(o,i),[a.idTensor]}case"TensorArrayReadV3":{const r=C("tensorArrayId",t,e,s),o=C("index",t,e,s);return[s.getTensorArray(r.id).read(o)]}case"TensorArrayGatherV3":{const r=C("tensorArrayId",t,e,s),o=C("indices",t,e,s),i=C("dtype",t,e,s);return[s.getTensorArray(r.id).gather(o,i)]}case"TensorArrayScatterV3":{const r=C("tensorArrayId",t,e,s),o=C("indices",t,e,s),i=C("tensor",t,e,s),a=s.getTensorArray(r.id);return a.scatter(o,i),[a.idTensor]}case"TensorArrayConcatV3":{const r=C("tensorArrayId",t,e,s),o=s.getTensorArray(r.id),i=C("dtype",t,e,s);return[o.concat(i)]}case"TensorArraySplitV3":{const r=C("tensorArrayId",t,e,s),o=C("tensor",t,e,s),i=C("lengths",t,e,s),a=s.getTensorArray(r.id);return a.split(i,o),[a.idTensor]}case"TensorArraySizeV3":{const r=C("tensorArrayId",t,e,s);return[Ze(s.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=C("tensorArrayId",t,e,s),o=s.getTensorArray(r.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{const r=C("tensorListId",t,e,s),o=C("index",t,e,s),i=C("tensor",t,e,s),a=s.getTensorList(r.id);return a.setItem(o,i),[a.idTensor]}case"TensorListGetItem":{const r=C("tensorListId",t,e,s),o=C("index",t,e,s),i=C("elementShape",t,e,s),a=C("elementDType",t,e,s);return[s.getTensorList(r.id).getItem(o,i,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=C("indices",t,e,s),l=function SA(n,t,e,s){if(t.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${n.shape[0]}`);const r=Math.max(...t);if(null!=s&&-1!==s&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const o=new za([],e,n.dtype,s),i=kr(n,0);return t.forEach((a,l)=>{o.setItem(a,i[l])}),o}(C("tensor",t,e,s),r,C("elementShape",t,e,s),C("numElements",t,e,s));return s.addTensorList(l),[l.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=C("elementShape",t,e,s),o=C("elementDType",t,e,s);let i;i="TensorListReserve"===t.op?"numElements":"maxNumElements";const a=C(i,t,e,s),u=function wA(n,t,e,s){return new za([],n,t,s)}(r,o,0,"TensorListReserve"===t.op?-1:a);return s.addTensorList(u),[u.idTensor]}case"TensorListGather":{const r=C("tensorListId",t,e,s),o=C("indices",t,e,s),i=C("elementShape",t,e,s),a=C("elementDType",t,e,s);return[s.getTensorList(r.id).gather(o,a,i)]}case"TensorListStack":{const r=C("tensorListId",t,e,s),o=C("elementShape",t,e,s),i=C("elementDType",t,e,s),a=C("numElements",t,e,s);return[s.getTensorList(r.id).stack(o,i,a)]}case"TensorListFromTensor":{const a=function vA(n,t,e){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==e)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${e}`);Pr(n.shape.slice(1),t,"TensorList shape mismatch: ");const o=kr(n);return new za(o,t,s)}(C("tensor",t,e,s),C("elementShape",t,e,s),C("elementDType",t,e,s));return s.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=C("tensorListId",t,e,s),o=s.getTensorList(r.id),i=C("dtype",t,e,s),a=C("elementShape",t,e,s);return[o.concat(i,a)]}case"TensorListPushBack":{const r=C("tensorListId",t,e,s),o=C("tensor",t,e,s),i=s.getTensorList(r.id);return i.pushBack(o),[i.idTensor]}case"TensorListPopBack":{const r=C("tensorListId",t,e,s),o=C("elementShape",t,e,s),i=C("elementDType",t,e,s);return[s.getTensorList(r.id).popBack(o,i)]}case"TensorListSplit":{const r=C("tensor",t,e,s),o=C("elementShape",t,e,s),a=function IA(n,t,e){let s=0;const r=t.map(c=>(s+=c,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${n.shape}`);const i=m2(n.shape.slice(1),e),a=0===s?0:n.size/s,l=q(()=>{const c=[];n=H(n,[1,s,a]);for(let h=0;h<t.length;++h)c[h]=H(at(n,[0,0===h?0:r[h-1],0],[1,t[h],a]),i);return n.dispose(),c}),u=new za([],e,n.dtype,t.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}(r,C("lengths",t,e,s),o);return s.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=C("tensorListId",t,e,s);return[Ze(s.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=C("tensorListId",t,e,s),o=C("size",t,e,s),a=s.getTensorList(r.id).resize(o);return s.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}});return function(e,s,r){return n.apply(this,arguments)}}();function ib(n,t,e){const[s,r]=C("fusedOps",n,t,e),o="biasadd"===s,i=!o,a="prelu"===r,l="fusedbatchnorm"===s,u=C("numArgs",n,t,e);if(o){if(a&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&o&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=C("strides",n,t,e),h=Vp(n,t,e),d=C("dataFormat",n,t,e).toUpperCase(),p=C("dilations",n,t,e);let[f,g]=C("args",n,t,e);return i&&(g=f,f=void 0),{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:g,activationFunc:r,leakyreluAlpha:C("leakyreluAlpha",n,t,e)}}function g2(n,t,e){return{boxes:C("boxes",n,t,e),scores:C("scores",n,t,e),maxOutputSize:C("maxOutputSize",n,t,e),iouThreshold:C("iouThreshold",n,t,e),scoreThreshold:C("scoreThreshold",n,t,e),softNmsSigma:C("softNmsSigma",n,t,e)}}const TA=function(){var n=(0,ce.Z)(function*(t,e,s,r,o=Rt){switch(t.op){case"NonMaxSuppressionV5":{const{boxes:i,scores:a,maxOutputSize:l,iouThreshold:u,scoreThreshold:c,softNmsSigma:h}=g2(t,e,s),d=yield o.image.nonMaxSuppressionWithScoreAsync(i,a,l,u,c,h);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:i,scores:a,maxOutputSize:l,iouThreshold:u,scoreThreshold:c}=g2(t,e,s),h=C("padToMaxOutputSize",t,e,s),d=yield o.image.nonMaxSuppressionPaddedAsync(i,a,l,u,c,h);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:i,scores:a,maxOutputSize:l,iouThreshold:u,scoreThreshold:c}=g2(t,e,s);return[yield o.image.nonMaxSuppressionAsync(i,a,l,u,c)]}case"Where":{const i=o.cast(C("condition",t,e,s),"bool"),a=[yield o.whereAsync(i)];return i.dispose(),a}case"ListDiff":return o.setdiff1dAsync(C("x",t,e,s),C("y",t,e,s));default:throw TypeError(`Node type ${t.op} is not implemented`)}});return function(e,s,r,o){return n.apply(this,arguments)}}();class AA{get id(){return this.handle.id}constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Ze(0),this.tensorMap=new Map,ns(this.handle)}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ze(this.size(),"int32")}import(t,e){var s=this;return(0,ce.Z)(function*(){s.checkKeyAndValueTensor(t,e);const r=yield t.data();return s.tensorMap.forEach(o=>o.dispose()),s.tensorMap.clear(),q(()=>{const o=kr(e),i=r.length,a=o.length;E(i===a,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${a} elements.`);for(let l=0;l<i;l++){const u=r[l],c=o[l];ns(c),s.tensorMap.set(u,c)}return s.handle})})()}find(t,e){var s=this;return(0,ce.Z)(function*(){s.checkKeyAndValueTensor(t,e);const r=yield t.data();return q(()=>{const o=[];for(let i=0;i<r.length;i++){const l=s.findWithDefault(r[i],e);o.push(l)}return js(o)})})()}findWithDefault(t,e){const s=this.tensorMap.get(t);return null!=s?s:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}const $A=function(){var n=(0,ce.Z)(function*(t,e,s,r){switch(t.op){case"HashTable":case"HashTableV2":{const o=r.getHashTableHandleByName(t.name);if(null!=o)return[o];{const i=C("keyDType",t,e,s),a=C("valueDType",t,e,s),l=new AA(i,a);return r.addHashTable(t.name,l),[l.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const o=C("tableHandle",t,e,s,r),i=C("keys",t,e,s),a=C("values",t,e,s);return[yield r.getHashTableById(o.id).import(i,a)]}case"LookupTableFind":case"LookupTableFindV2":{const o=C("tableHandle",t,e,s,r),i=C("keys",t,e,s),a=C("defaultValue",t,e,s);return[yield r.getHashTableById(o.id).find(i,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const o=C("tableHandle",t,e,s,r);return[r.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}});return function(e,s,r,o){return n.apply(this,arguments)}}();function ab(n,t,e,s,r=q){const o=((i,a,l)=>{switch(i.category){case"arithmetic":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(C("a",n,t,e),C("b",n,t,e))];case"AddN":return[s.addN(C("tensors",n,t,e))];case"FloorMod":case"Mod":return[s.mod(C("a",n,t,e),C("b",n,t,e))];case"Mul":return[s.mul(C("a",n,t,e),C("b",n,t,e))];case"RealDiv":case"Div":return[s.div(C("a",n,t,e),C("b",n,t,e))];case"DivNoNan":return[s.divNoNan(C("a",n,t,e),C("b",n,t,e))];case"FloorDiv":return[s.floorDiv(C("a",n,t,e),C("b",n,t,e))];case"Sub":return[s.sub(C("a",n,t,e),C("b",n,t,e))];case"Minimum":return[s.minimum(C("a",n,t,e),C("b",n,t,e))];case"Maximum":return[s.maximum(C("a",n,t,e),C("b",n,t,e))];case"Pow":return[s.pow(C("a",n,t,e),C("b",n,t,e))];case"SquaredDifference":return[s.squaredDifference(C("a",n,t,e),C("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"basic_math":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(C("x",n,t,e))];case"Acos":return[s.acos(C("x",n,t,e))];case"Acosh":return[s.acosh(C("x",n,t,e))];case"Asin":return[s.asin(C("x",n,t,e))];case"Asinh":return[s.asinh(C("x",n,t,e))];case"Atan":return[s.atan(C("x",n,t,e))];case"Atan2":return[s.atan2(C("x",n,t,e),C("y",n,t,e))];case"Atanh":return[s.atanh(C("x",n,t,e))];case"Ceil":return[s.ceil(C("x",n,t,e))];case"Complex":return[s.complex(C("real",n,t,e),C("imag",n,t,e))];case"Cos":return[s.cos(C("x",n,t,e))];case"Cosh":return[s.cosh(C("x",n,t,e))];case"Elu":return[s.elu(C("x",n,t,e))];case"Erf":return[s.erf(C("x",n,t,e))];case"Exp":return[s.exp(C("x",n,t,e))];case"Expm1":return[s.expm1(C("x",n,t,e))];case"Floor":return[s.floor(C("x",n,t,e))];case"Log":return[s.log(C("x",n,t,e))];case"Log1p":return[s.log1p(C("x",n,t,e))];case"Imag":return[s.imag(C("x",n,t,e))];case"Neg":return[s.neg(C("x",n,t,e))];case"Reciprocal":return[s.reciprocal(C("x",n,t,e))];case"Real":return[s.real(C("x",n,t,e))];case"Relu":return[s.relu(C("x",n,t,e))];case"Round":return[s.round(C("x",n,t,e))];case"Selu":return[s.selu(C("x",n,t,e))];case"Sigmoid":return[s.sigmoid(C("x",n,t,e))];case"Sin":return[s.sin(C("x",n,t,e))];case"Sign":return[s.sign(C("x",n,t,e))];case"Sinh":return[s.sinh(C("x",n,t,e))];case"Softplus":return[s.softplus(C("x",n,t,e))];case"Sqrt":return[s.sqrt(C("x",n,t,e))];case"Square":return[s.square(C("x",n,t,e))];case"Tanh":return[s.tanh(C("x",n,t,e))];case"Tan":return[s.tan(C("x",n,t,e))];case"ClipByValue":return[s.clipByValue(C("x",n,t,e),C("clipValueMin",n,t,e),C("clipValueMax",n,t,e))];case"Relu6":return[s.relu6(C("x",n,t,e))];case"Rsqrt":return[s.rsqrt(Is(n.inputNames[0],t,e))];case"LeakyRelu":return[s.leakyRelu(C("x",n,t,e),C("alpha",n,t,e))];case"Prelu":return[s.prelu(C("x",n,t,e),C("alpha",n,t,e))];case"IsNan":return[s.isNaN(Is(n.inputNames[0],t,e))];case"IsInf":return[s.isInf(Is(n.inputNames[0],t,e))];case"IsFinite":return[s.isFinite(Is(n.inputNames[0],t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"control":return CA(i,a,l);case"convolution":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"Conv1D":{const r=C("stride",n,t,e),o=C("pad",n,t,e),i=C("dataFormat",n,t,e).toUpperCase(),a=C("dilation",n,t,e);return[s.conv1d(C("x",n,t,e),C("filter",n,t,e),r,o,i,a)]}case"Conv2D":{const r=C("strides",n,t,e),o=Vp(n,t,e),i=C("dataFormat",n,t,e).toUpperCase(),a=C("dilations",n,t,e);return[s.conv2d(C("x",n,t,e),C("filter",n,t,e),[r[1],r[2]],o,i,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=ib(n,t,e);return[s.fused.conv2d({x:C("x",n,t,e),filter:C("filter",n,t,e),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=ib(n,t,e);return[s.fused.depthwiseConv2d({x:C("x",n,t,e),filter:C("filter",n,t,e),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=C("outputShape",n,t,e),o=C("strides",n,t,e),i=Vp(n,t,e);return[s.conv2dTranspose(C("x",n,t,e),C("filter",n,t,e),r,[o[1],o[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=C("strides",n,t,e),o=Vp(n,t,e),i=C("dilations",n,t,e),a=C("dataFormat",n,t,e).toUpperCase();return[s.depthwiseConv2d(C("input",n,t,e),C("filter",n,t,e),[r[1],r[2]],o,a,[i[1],i[2]])]}case"Conv3D":{const r=C("strides",n,t,e),o=C("pad",n,t,e),i=C("dataFormat",n,t,e).toUpperCase(),a=C("dilations",n,t,e);return[s.conv3d(C("x",n,t,e),C("filter",n,t,e),[r[1],r[2],r[3]],o,i,[a[1],a[2],a[3]])]}case"AvgPool":{const r=C("strides",n,t,e),o=C("pad",n,t,e),i=C("kernelSize",n,t,e);return[s.avgPool(C("x",n,t,e),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=C("strides",n,t,e),o=C("pad",n,t,e),i=C("kernelSize",n,t,e);return[s.maxPool(C("x",n,t,e),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=C("strides",n,t,e),o=C("pad",n,t,e),i=C("kernelSize",n,t,e),a=C("includeBatchInIndex",n,t,e),{result:l,indexes:u}=s.maxPoolWithArgmax(C("x",n,t,e),[i[1],i[2]],[r[1],r[2]],o,a);return[l,u]}case"AvgPool3D":{const r=C("strides",n,t,e),o=C("pad",n,t,e),i=C("kernelSize",n,t,e);return[s.avgPool3d(C("x",n,t,e),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=C("strides",n,t,e),o=C("pad",n,t,e),i=C("kernelSize",n,t,e);return[s.maxPool3d(C("x",n,t,e),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=C("strides",n,t,e),o=C("pad",n,t,e),i=C("dilations",n,t,e),a=r[1],l=r[2],u=i[1],c=i[2];return[s.dilation2d(C("x",n,t,e),C("filter",n,t,e),[a,l],o,[u,c],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"creation":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"Fill":{const r=C("shape",n,t,e),o=C("dtype",n,t,e),i=C("value",n,t,e);return[s.fill(r,i,o)]}case"LinSpace":{const r=C("start",n,t,e),o=C("stop",n,t,e),i=C("num",n,t,e);return[s.linspace(r,o,i)]}case"Multinomial":{const r=C("logits",n,t,e),o=C("numSamples",n,t,e),i=C("seed",n,t,e);return[s.multinomial(r,o,i)]}case"OneHot":{const r=C("indices",n,t,e),o=C("depth",n,t,e),i=C("onValue",n,t,e),a=C("offValue",n,t,e),l=C("dtype",n,t,e);return[s.oneHot(r,o,i,a,l)]}case"Ones":return[s.ones(C("shape",n,t,e),C("dtype",n,t,e))];case"OnesLike":return[s.onesLike(C("x",n,t,e))];case"RandomStandardNormal":return[s.randomStandardNormal(C("shape",n,t,e),C("dtype",n,t,e),C("seed",n,t,e))];case"RandomUniform":return[s.randomUniform(C("shape",n,t,e),C("minval",n,t,e),C("maxval",n,t,e),C("dtype",n,t,e))];case"RandomUniformInt":return[s.randomUniformInt(C("shape",n,t,e),C("minval",n,t,e),C("maxval",n,t,e),C("seed",n,t,e))];case"Range":{const r=C("start",n,t,e),o=C("stop",n,t,e),i=C("step",n,t,e);return[s.range(r,o,i,C("dtype",n,t,e))]}case"TruncatedNormal":{const r=C("shape",n,t,e),o=C("mean",n,t,e),i=C("stdDev",n,t,e),a=C("seed",n,t,e);return[s.truncatedNormal(r,o,i,C("dtype",n,t,e),a)]}case"Zeros":return[s.zeros(C("shape",n,t,e),C("dtype",n,t,e))];case"ZerosLike":return[s.zerosLike(C("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"dynamic":return TA(i,a,l);case"evaluation":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"LowerBound":{const r=C("sortedSequence",n,t,e),o=C("values",n,t,e);return[s.lowerBound(r,o)]}case"TopKV2":{const r=C("x",n,t,e),o=C("k",n,t,e),i=C("sorted",n,t,e),a=s.topk(r,o,i);return[a.values,a.indices]}case"UpperBound":{const r=C("sortedSequence",n,t,e),o=C("values",n,t,e);return[s.upperBound(r,o)]}case"Unique":{const r=C("x",n,t,e),o=s.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=C("x",n,t,e),o=C("axis",n,t,e),i=s.unique(r,o);return[i.values,i.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"image":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"ResizeBilinear":{const r=C("images",n,t,e),o=C("size",n,t,e),i=C("alignCorners",n,t,e),a=C("halfPixelCenters",n,t,e);return[s.image.resizeBilinear(r,[o[0],o[1]],i,a)]}case"ResizeNearestNeighbor":{const r=C("images",n,t,e),o=C("size",n,t,e),i=C("alignCorners",n,t,e),a=C("halfPixelCenters",n,t,e);return[s.image.resizeNearestNeighbor(r,[o[0],o[1]],i,a)]}case"CropAndResize":{const r=C("image",n,t,e),o=C("boxes",n,t,e),i=C("boxInd",n,t,e),a=C("cropSize",n,t,e),l=C("method",n,t,e),u=C("extrapolationValue",n,t,e);return[s.image.cropAndResize(r,o,i,a,l,u)]}case"ImageProjectiveTransformV3":{const r=C("images",n,t,e),o=C("transforms",n,t,e),i=C("outputShape",n,t,e),a=C("fillValue",n,t,e),l=C("interpolation",n,t,e),u=C("fillMode",n,t,e);return[s.image.transform(r,o,l.toLowerCase(),u.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"graph":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"Const":return t[n.name];case"PlaceholderWithDefault":const r=C("default",n,t,e);return[Is(n.name,t,e)||r];case"Placeholder":return[Is(n.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[hi(C("x",n,t,e))];case"IdentityN":return C("x",n,t,e).map(c=>hi(c));case"Shape":return[s.tensor1d(C("x",n,t,e).shape,"int32")];case"ShapeN":return C("x",n,t,e).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(C("x",n,t,e).size,"int32")];case"Rank":return[s.scalar(C("x",n,t,e).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=C("x",n,t,e),a=C("data",n,t,e),l=C("message",n,t,e),u=C("summarize",n,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"logical":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"Equal":return[s.equal(C("a",n,t,e),C("b",n,t,e))];case"NotEqual":return[s.notEqual(C("a",n,t,e),C("b",n,t,e))];case"Greater":return[s.greater(C("a",n,t,e),C("b",n,t,e))];case"GreaterEqual":return[s.greaterEqual(C("a",n,t,e),C("b",n,t,e))];case"Less":return[s.less(C("a",n,t,e),C("b",n,t,e))];case"LessEqual":return[s.lessEqual(C("a",n,t,e),C("b",n,t,e))];case"LogicalAnd":return[s.logicalAnd(C("a",n,t,e),C("b",n,t,e))];case"LogicalNot":return[s.logicalNot(C("a",n,t,e))];case"LogicalOr":return[s.logicalOr(C("a",n,t,e),C("b",n,t,e))];case"Select":case"SelectV2":return[s.where(C("condition",n,t,e),C("a",n,t,e),C("b",n,t,e))];case"BitwiseAnd":return[s.bitwiseAnd(C("a",n,t,e),C("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"matrices":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(C("a",n,t,e),C("b",n,t,e),C("transposeA",n,t,e),C("transposeB",n,t,e))];case"Einsum":return[s.einsum(C("equation",n,t,e),...C("tensors",n,t,e))];case"Transpose":return[s.transpose(C("x",n,t,e),C("perm",n,t,e))];case"_FusedMatMul":const[r,o]=C("fusedOps",n,t,e),i="biasadd"===r,a="prelu"===o,l=C("numArgs",n,t,e),u=C("leakyreluAlpha",n,t,e);if(i){if(a&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=C("args",n,t,e);return[s.fused.matMul({a:C("a",n,t,e),b:C("b",n,t,e),transposeA:C("transposeA",n,t,e),transposeB:C("transposeB",n,t,e),bias:c,activation:o,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[s.linalg.bandPart(C("a",n,t,e),C("numLower",n,t,e),C("numUpper",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"normalization":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(C("x",n,t,e),C("axis",n,t,e),C("keepDims",n,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[s.batchNorm(C("x",n,t,e),C("mean",n,t,e),C("variance",n,t,e),C("offset",n,t,e),C("scale",n,t,e),C("epsilon",n,t,e))];case"LRN":return[s.localResponseNormalization(C("x",n,t,e),C("radius",n,t,e),C("bias",n,t,e),C("alpha",n,t,e),C("beta",n,t,e))];case"Softmax":return[s.softmax(C("x",n,t,e))];case"LogSoftmax":return[s.logSoftmax(C("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"ragged":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:o}=s.raggedGather(C("paramsNestedSplits",n,t,e),C("paramsDenseValues",n,t,e),C("indices",n,t,e),C("outputRaggedRank",n,t,e));return r.concat(o)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:o}=s.raggedRange(C("starts",n,t,e),C("limits",n,t,e),C("splits",n,t,e));return[r,o]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(C("shape",n,t,e),C("values",n,t,e),C("defaultValue",n,t,e),C("rowPartitionTensors",n,t,e),C("rowPartitionTypes",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"reduction":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"Max":{const a=C("axis",n,t,e),l=C("keepDims",n,t,e);return[s.max(C("x",n,t,e),a,l)]}case"Mean":{const a=C("axis",n,t,e),l=C("keepDims",n,t,e);return[s.mean(C("x",n,t,e),a,l)]}case"Min":{const a=C("axis",n,t,e),l=C("keepDims",n,t,e);return[s.min(C("x",n,t,e),a,l)]}case"Sum":{const a=C("axis",n,t,e),l=C("keepDims",n,t,e);return[s.sum(C("x",n,t,e),a,l)]}case"All":{const a=C("axis",n,t,e),l=C("keepDims",n,t,e);return[s.all(C("x",n,t,e),a,l)]}case"Any":{const a=C("axis",n,t,e),l=C("keepDims",n,t,e);return[s.any(C("x",n,t,e),a,l)]}case"ArgMax":{const a=C("axis",n,t,e);return[s.argMax(C("x",n,t,e),a)]}case"ArgMin":{const a=C("axis",n,t,e);return[s.argMin(C("x",n,t,e),a)]}case"Prod":{const a=C("axis",n,t,e),l=C("keepDims",n,t,e);return[s.prod(C("x",n,t,e),a,l)]}case"Cumprod":{const a=C("axis",n,t,e),l=C("exclusive",n,t,e),u=C("reverse",n,t,e);return[s.cumprod(C("x",n,t,e),a,l,u)]}case"Cumsum":{const a=C("axis",n,t,e),l=C("exclusive",n,t,e),u=C("reverse",n,t,e);return[s.cumsum(C("x",n,t,e),a,l,u)]}case"Bincount":const r=C("x",n,t,e),o=C("weights",n,t,e),i=C("size",n,t,e);return[s.bincount(r,o,i)];case"DenseBincount":{const a=C("x",n,t,e),l=C("weights",n,t,e),u=C("size",n,t,e),c=C("binaryOutput",n,t,e);return[s.denseBincount(a,l,u,c)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"slice_join":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=C("n",n,t,e),o=C("axis",n,t,e);let i=C("tensors",n,t,e);return i=i.slice(0,r),[s.concat(i,o)]}case"Gather":{const r=C("x",n,t,e),o=C("indices",n,t,e);return[s.gather(r,s.cast(o,"int32"),0)]}case"GatherV2":{const r=C("axis",n,t,e),o=C("batchDims",n,t,e),i=C("x",n,t,e),a=C("indices",n,t,e);return[s.gather(i,s.cast(a,"int32"),r,o)]}case"Reverse":{const r=C("dims",n,t,e),o=[];for(let a=0;a<r.length;a++)r[a]&&o.push(a);const i=C("x",n,t,e);return[s.reverse(i,o)]}case"ReverseV2":{const r=C("axis",n,t,e),o=C("x",n,t,e);return[s.reverse(o,r)]}case"Slice":{const r=C("begin",n,t,e),o=C("size",n,t,e);return[s.slice(C("x",n,t,e),r,o)]}case"StridedSlice":{const r=C("begin",n,t,e),o=C("end",n,t,e),i=C("strides",n,t,e),a=C("beginMask",n,t,e),l=C("endMask",n,t,e),u=C("ellipsisMask",n,t,e),c=C("newAxisMask",n,t,e),h=C("shrinkAxisMask",n,t,e),d=C("x",n,t,e);return[s.stridedSlice(d,r,o,i,a,l,u,c,h)]}case"Pack":return q(()=>{const r=C("axis",n,t,e),o=C("tensors",n,t,e),i=o[0].shape,a=s.squeeze(o[0]).shape,l=o.map(u=>{const c=At(u.shape,i);if(!c&&!At(s.squeeze(u).shape,a))throw new Error("the input tensors shape does not match");return c?u:s.reshape(u,i)});return[s.stack(l,r)]});case"Unpack":{const r=C("axis",n,t,e),o=C("tensor",n,t,e);return s.unstack(o,r)}case"Tile":{const r=C("reps",n,t,e);return[s.tile(C("x",n,t,e),r)]}case"Split":case"SplitV":{const r=C("axis",n,t,e),o=C("numOrSizeSplits",n,t,e),i=C("x",n,t,e);return s.split(i,o,r)}case"ScatterNd":{const r=C("indices",n,t,e),o=C("values",n,t,e),i=C("shape",n,t,e);return[s.scatterND(r,o,i)]}case"GatherNd":{const r=C("x",n,t,e),o=C("indices",n,t,e);return[s.gatherND(r,o)]}case"SparseToDense":{const r=C("sparseIndices",n,t,e),o=C("outputShape",n,t,e),i=C("sparseValues",n,t,e),a=C("defaultValue",n,t,e);return[s.sparseToDense(r,i,o,i.dtype===a.dtype?a:s.cast(a,i.dtype))]}case"TensorScatterUpdate":{const r=C("indices",n,t,e),o=C("values",n,t,e),i=C("tensor",n,t,e);return[s.tensorScatterUpdate(i,r,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"sparse":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:i,reverseIndexMap:a}=s.sparse.sparseFillEmptyRows(C("indices",n,t,e),C("values",n,t,e),C("denseShape",n,t,e),C("defaultValue",n,t,e));return[r,o,i,a]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=s.sparse.sparseReshape(C("inputIndices",n,t,e),C("inputShape",n,t,e),C("newShape",n,t,e));return[r,o]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(C("data",n,t,e),C("indices",n,t,e),C("segmentIds",n,t,e))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(C("data",n,t,e),C("indices",n,t,e),C("segmentIds",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"spectral":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"FFT":return[s.fft(C("x",n,t,e))];case"IFFT":return[s.ifft(C("x",n,t,e))];case"RFFT":return[s.rfft(C("x",n,t,e))];case"IRFFT":return[s.irfft(C("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"string":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(C("input",n,t,e),C("pattern",n,t,e),C("rewrite",n,t,e),C("replaceGlobal",n,t,e))];case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=s.string.stringNGrams(C("data",n,t,e),C("dataSplits",n,t,e),C("separator",n,t,e),C("nGramWidths",n,t,e),C("leftPad",n,t,e),C("rightPad",n,t,e),C("padWidth",n,t,e),C("preserveShortSequences",n,t,e));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:i}=s.string.stringSplit(C("input",n,t,e),C("delimiter",n,t,e),C("skipEmpty",n,t,e));return[r,o,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(C("input",n,t,e),C("numBuckets",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"transformation":return r(()=>((n,t,e,s=Rt)=>{switch(n.op){case"Cast":return[s.cast(C("x",n,t,e),C("dtype",n,t,e))];case"ExpandDims":{const r=C("axis",n,t,e);return[s.expandDims(C("x",n,t,e),r)]}case"Squeeze":{const r=C("axis",n,t,e);return[s.squeeze(C("x",n,t,e),r)]}case"Reshape":return[s.reshape(C("x",n,t,e),C("shape",n,t,e))];case"EnsureShape":return[s.ensureShape(C("x",n,t,e),C("shape",n,t,e))];case"MirrorPad":return[s.mirrorPad(C("x",n,t,e),C("padding",n,t,e),C("mode",n,t,e))];case"PadV2":case"Pad":return[s.pad(C("x",n,t,e),C("padding",n,t,e),C("constantValue",n,t,e))];case"SpaceToBatchND":{const r=C("blockShape",n,t,e),o=C("paddings",n,t,e);return[s.spaceToBatchND(C("x",n,t,e),r,o)]}case"BatchToSpaceND":{const r=C("blockShape",n,t,e),o=C("crops",n,t,e);return[s.batchToSpaceND(C("x",n,t,e),r,o)]}case"DepthToSpace":{const r=C("blockSize",n,t,e),o=C("dataFormat",n,t,e).toUpperCase();return[s.depthToSpace(C("x",n,t,e),r,o)]}case"BroadcastTo":return[s.broadcastTo(C("x",n,t,e),C("shape",n,t,e))];case"BroadcastArgs":return[s.broadcastArgs(C("s0",n,t,e),C("s1",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,a,l));case"hash_table":return $A(i,a,l,s);case"custom":const u=Q4(i.op);if(u&&u.customExecutor)return u.customExecutor(new gA(i,a,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,t,e);return Xr(o)?o.then(i=>[].concat(i)):[].concat(o)}class lb{constructor(t={},e={},s={},r={},o){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const s=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(s))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function ub(n,t,e,s){const r=new Set,o=[];let i=null,a=null;const l=new Set,u=new Set(Object.keys(n).map(d=>ar(d)[0]));s=s||[];const c=new Set(s.map(d=>ar(d.name)[0])),h=[...t];for(;h.length>0;){const d=h.pop();if((Ba(d)||ZA(d)||YA(d))&&null==i&&(i=d,a=i.children.map(p=>p.name).filter(p=>r.has(p))),r.add(d.name),null==e[d.name]&&!u.has(d.name)&&!c.has(d.name)){if(0===d.inputs.length){o.push(d.name);continue}d.inputs.forEach(p=>{l.has(p.name)||(l.add(p.name),h.push(p))})}}return{inputs:n,outputs:t,usedNodes:r,missingInputs:o,dynamicNode:i,syncInputs:a}}class Wp extends Error{constructor(t){super(`NodesExecutionOrderError: ${t}`)}}const KA=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),qA=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),XA=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Ba(n){return KA.has(n.op)}function ZA(n){return qA.has(n.op)}function YA(n){return XA.has(n.op)}class Up{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(s=>t[s].map(r=>r.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(s=>{this._functionExecutorMap[s]=new Up(t.functions[s],this)})}getCompilationKey(t,e){const s=t.map(o=>o.name).sort(),r=e.map(o=>o.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(t,e){const s=ub(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:i}=s;if(null!=o)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const u=e.map(h=>h.name),c=Object.keys(t);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${r}]`)}const a=function UA(n,t){const{usedNodes:e,inputs:s}=t,i=m=>e.has("string"==typeof m?m:m.name);function a(m){return[...new Map(m.map(y=>[y.name,y])).values()]}const l=a([...Object.keys(s).map(m=>ar(m)[0]).map(m=>n.nodes[m]),...n.weights,...n.initNodes||[]]).filter(i),u=a([...l,...Object.values(n.nodes)]).filter(i),c=new Map(u.map(m=>[m.name,m])),h={};for(const m of u){h[m.name]=h[m.name]||0;for(const y of m.children)i(y)||(h[y.name]=Number.POSITIVE_INFINITY),h[y.name]=(h[y.name]||0)+1}const d=Object.entries(h).filter(([,m])=>0===m).map(([m])=>m),p=[...d];for(;d.length>0;){const m=d.pop(),y=c.get(m);for(const b of y.children.filter(i))0==--h[b.name]&&(p.push(b.name),d.push(b.name))}const g=function GA(n,t){const e=new Map(n.map(i=>[i.name,i])),s=t.map(i=>i.name),r=new Set(s);for(;s.length>0;){const i=s.pop(),a=e.get(i);for(const l of a.children)!e.has(l.name)||r.has(l.name)||(r.add(l.name),s.push(l.name))}return n.filter(i=>r.has(i.name))}(p.map(m=>c.get(m)),l);return function HA(n,t){const e=new Map(n.map((a,l)=>[a.name,l])),s=new Set(t.map(a=>a.name)),r=a=>s.has("string"==typeof a?a:a.name),o=new Set(n.map(a=>a.name)),i=a=>o.has("string"==typeof a?a:a.name);for(const a of n){for(const l of a.children.filter(i)){if(!e.has(l.name))throw new Wp(`Child ${l.name} of node ${a.name} is unreachable.`);if(e.get(a.name)>e.get(l.name))throw new Wp(`Node ${a.name} is scheduled to run after its child ${l.name}.`)}if(!r(a))for(const l of a.inputs){if(!e.has(l.name))throw new Wp(`Input ${l.name} of node ${a.name} is unreachable.`);if(e.get(l.name)>e.get(a.name))throw new Wp(`Node ${a.name} is scheduled to run before its input ${l.name}.`)}}}(g,l),g}(this.graph,s),l=function jA(n){const t=new Map(n.map((a,l)=>[a.name,l])),e=Number.MAX_SAFE_INTEGER,s=n.map((a,l)=>Ba(a)?e:l),r=a=>{const l=s[t.get(a.name)];return null==l?-1:l},o=n.map((a,l)=>a.children.map(r).reduce((u,c)=>Math.max(u,c),s[l])),i=new Map;for(let a=0;a<n.length;++a){const l=o[a];if(l===e)continue;const u=n[a],c=n[l];i.has(c.name)||i.set(c.name,[]),i.get(c.name).push(u)}return i}(a);return{orderedNodes:a,nodeLiveUntilMap:l}}cloneAndKeepTensor(t){if(null==t)return null;const e=t.clone();return ns(e),e}cloneTensorList(t){return t?t.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([e,s])=>[e,this.cloneTensorList(s)]))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);const s=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=s.map(d=>this.graph.nodes[ar(d)[0]]),o=e.map(d=>ar(d)[0]),i=new Set(o);let a=o.map(d=>this.graph.nodes[d]);0===a.length&&(a=this._outputs);const l=this.getCompilationKey(r,a);let u=this.compiledMap.get(l);null==u&&(u=this.compile(t,a),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=J().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const c={},h={};return q(()=>{const d=new lb(this.weightMap,c,h,this.functionExecutorMap,this.parseNodeNameCache),p=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(y=>{const[b,S]=ar(y,d),w=[];w[S]=t[y],p[b]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[b]=this.cloneTensorList(w))});const f=this.getFrozenTensorIds(p),{orderedNodes:g,nodeLiveUntilMap:m}=u;for(const y of g){if(p[y.name])continue;const b=ab(y,p,d,this._resourceManager);if(Xr(b))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);p[y.name]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(b)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,p,d,f,i,m.get(y.name))}return null==this.parent&&d.dispose(f),e.map(y=>Is(y,p,d))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(s=>t[s]).map(s=>s.map(r=>r.id)));return new Set(e)}checkTensorForDisposal(t,e,s,r,o,i,a){if(!Ba(e)&&!i.has(t)){for(const l of s[t])null!=l&&(a[l.id]=(a[l.id]||0)+e.children.length);for(const l of e.inputs){if(Ba(l))continue;const u=eb(l.name,s,r);if(null!=u)for(const c of u){if(!c||c.kept||o.has(c.id))continue;const h=a[c.id];1===h?(c.dispose(),delete a[c.id]):null!=h&&a[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,e,s,r,o,i){function a(l){return Ba(l)||o.has(l.name)}if(!Ba(t)&&null!=i)for(const l of i){if(a(l))continue;const u=eb(l.name,e,s);for(const c of u)!c||c.kept||r.has(c.id)||c.dispose()}}executeAsync(t,e){var s=this;return(0,ce.Z)(function*(){return s._executeAsync(t,e)})()}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(const e of t)e&&!e.isDisposed&&e.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}_executeAsync(t,e,s=!1,r={},o={}){var i=this;return(0,ce.Z)(function*(){i.disposeIntermediateTensors(),s||(t=i.mapInputs(t),i.checkInputs(t),i.checkInputShapeAndType(t),e=i.mapOutputs(e),i.checkOutputs(e));try{i.keepIntermediateTensors=J().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){i.keepIntermediateTensors=!1,console.warn(p.message)}const a=new lb(i.weightMap,r,o,i.functionExecutorMap,i.parseNodeNameCache);i.keepIntermediateTensors&&(i.clonedTensorsMap=i.cloneTensorMap(i.weightMap));const l=yield i.executeWithControlFlow(t,a,e,s),u=e.map(p=>Is(p,l,a)),c=u.map(p=>p.id),h=Object.keys(t).map(p=>t[p].id),d=new Set([...c,...h,...i.weightIds]);return Object.values(l).forEach(p=>{p.forEach(f=>{f&&!f.isDisposed&&!d.has(f.id)&&f.dispose()})}),null==i.parent&&a.dispose(d),u})()}executeFunctionAsync(t,e,s){var r=this;return(0,ce.Z)(function*(){const o=t.reduce((i,a,l)=>(i[r.inputs[l].name]=a,i),{});return r._executeAsync(o,r.outputNodes,!0,e,s)})()}executeWithControlFlow(t,e,s,r){var o=this;return(0,ce.Z)(function*(){const i=Object.keys(t),a=i.map(I=>o.graph.nodes[ar(I)[0]]),l=s.map(I=>ar(I)[0]),u=new Set(l);let c=l.map(I=>o.graph.nodes[I]);0===c.length&&(c=o._outputs);const{usedNodes:h,missingInputs:d,dynamicNode:p,syncInputs:f}=ub(t,c,o.weightMap,o._initNodes),g=[...a,...o.graph.weights,...o._initNodes||[]].map(I=>({node:I,contexts:e.currentContext})),m=Object.assign({},o.weightMap);Object.keys(t).forEach(I=>{const[_,R]=ar(I),F=[];F[R]=t[I],m[_]=F});const y={},b=o.getFrozenTensorIds(m),S={};for(;g.length>0;){const I=o.processStack(a,g,e,m,S,b,u,y,h);yield Promise.all(I)}null==p&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const w=c.filter(I=>!Ba(I)&&!Is(I.name,m,e)).map(I=>I.name);if(w.length>0){let I="";throw null!=p&&(I=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),new Error(`Cannot compute the outputs [${w}] from the provided inputs [${i}]. Consider providing the following inputs: [${d}]. ${I}`)}return m})()}processStack(t,e,s,r,o,i,a,l,u){const c=[];for(;e.length>0;){const h=e.pop();s.currentContext=h.contexts;let d="";if("Enter"===h.node.op&&C("isConstant",h.node,r,s)&&([d]=ci(h.node.name,s)),null==r[h.node.name]){const p=ab(h.node,r,s,this._resourceManager);d||([d]=ci(h.node.name,s));const f=s.currentContext;Xr(p)?c.push(p.then(g=>(r[d]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(g)),s.currentContext=f,this.checkTensorForDisposal(d,h.node,r,s,i,a,l),this.processChildNodes(h.node,e,s,r,o,u),g))):(r[d]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(p)),this.checkTensorForDisposal(d,h.node,r,s,i,a,l),this.processChildNodes(h.node,e,s,r,o,u))}else this.processChildNodes(h.node,e,s,r,o,u)}return c}processChildNodes(t,e,s,r,o,i){t.children.forEach(a=>{const[l]=ci(a.name,s);o[l]||!i.has(a.name)||("Merge"===a.op?a.inputNames.some(u=>!!Is(u,r,s))&&(o[l]=!0,e.push({contexts:s.currentContext,node:a})):a.inputNames.every(u=>!!Is(u,r,s))&&(o[l]=!0,e.push({contexts:s.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const s=t[e],[r]=ar(e),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const i=o.attrParams.shape.value;E(i.length===s.shape.length&&s.shape.every((l,u)=>-1===i[u]||i[u]===l),()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&E(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(t){var e,s;const r={};for(const o in t){const i=null===(s=null===(e=this._signature)||void 0===e?void 0:e.inputs)||void 0===s?void 0:s[o];null!=i?r[i.name]=t[o]:r[o]=t[o]}return r}checkInputs(t){const e=Object.keys(t).filter(s=>{const[r]=ar(s);return null==this.graph.nodes[r]});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{var s,r;const o=null===(r=null===(s=this._signature)||void 0===s?void 0:s.outputs)||void 0===r?void 0:r[e];return null!=o?o.name:e},{})}checkOutputs(t){t.forEach(e=>{const[s]=ar(e);if(!this.graph.nodes[s])throw new Error(`The output '${e}' is not found in the graph`)})}}class JA{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}const QA="?tfjs-format=file",e$="model.json";class cb{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,e={},s=Ke){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=s,null==e&&(this.loadOptions={}),this.resourceManager=new JA}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{const e=this.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=this.handler.load();return Xr(t)?t.then(e=>this.loadSync(e)):this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let s=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const o=this.artifacts.userDefinedMetadata;null!=o.signature&&(s=o.signature),null!=o.structuredOutputKeys&&(this.structuredOutputKeys=o.structuredOutputKeys)}this.signature=s,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Up(tb.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const o=tb.Instance.transformGraph(t.modelInitializer);this.initializer=new Up(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}save(t,e){var s=this;return(0,ce.Z)(function*(){if("string"==typeof t){const r=s.io.getSaveHandlers(t);if(0===r.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${t}'`);t=r[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(s.artifacts)})()}addStructuredOutputNames(t){if(this.structuredOutputKeys){const s={};return(t instanceof Mt?[t]:t).forEach((r,o)=>s[this.structuredOutputKeys[o]]=r),s}return t}predict(t,e){const s=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(s)}predictAsync(t,e){var s=this;return(0,ce.Z)(function*(){const r=yield s.executeAsync(t,s.outputNodes);return s.addStructuredOutputNames(r)})()}normalizeInputs(t){var e;if(!(t instanceof Mt||Array.isArray(t))){const o=null===(e=this.signature)||void 0===e?void 0:e.inputs;if(null!=o)for(const i in o){const a=o[i];null!=a.resourceId&&(t[i]=this.resourceIdToCapturedInput[a.resourceId])}return t}t=Array.isArray(t)?t:[t];const s=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${t.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((o,i)=>{var a,l,u;const c=null===(u=null===(l=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===l?void 0:l[i])||void 0===u?void 0:u.resourceId;return o[i]=null!=c?this.resourceIdToCapturedInput[c]:t[r++],o},{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return null==this.initializer?[]:this.initializer.execute({},null==this.initializerSignature?[]:Object.keys(this.initializerSignature.outputs))}executeInitializerGraphAsync(){var t=this;return(0,ce.Z)(function*(){return null==t.initializer?[]:t.initializer.executeAsync({},null==t.initializerSignature?[]:Object.keys(t.initializerSignature.outputs))})()}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){const e=this.initializerSignature.outputs,s=Object.keys(e);for(let r=0;r<s.length;r++)this.resourceIdToCapturedInput[e[s[r]].resourceId]=t[r]}}execute(t,e){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const s=this.executor.execute(t,e);return s.length>1?s:s[0]}executeAsync(t,e){var s=this;return(0,ce.Z)(function*(){null==s.resourceIdToCapturedInput&&s.setResourceIdToCapturedInput(yield s.executeInitializerGraphAsync()),t=s.normalizeInputs(t),e=s.normalizeOutputs(e);const r=yield s.executor.executeAsync(t,e);return r.length>1?r:r[0]})()}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,s)=>(e[s]=[t[s]],e),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&ht(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}function Gp(n){return y2.apply(this,arguments)}function y2(){return(y2=(0,ce.Z)(function*(n,t={},e=Ke){if(null==n)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof n&&(n=function t$(n){return n.endsWith("/")||(n+="/"),`${n}${e$}${QA}`}(n));const s=new cb(n,t,e);return yield s.load(),s})).apply(this,arguments)}var b2=function(n,t){return(b2=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,s){e.__proto__=s}||function(e,s){for(var r in s)s.hasOwnProperty(r)&&(e[r]=s[r])})(n,t)};function hb(n,t){function e(){this.constructor=n}b2(n,t),n.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)}var Ao=function(){return Ao=Object.assign||function(t){for(var e,s=1,r=arguments.length;s<r;s++)for(var o in e=arguments[s])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t},Ao.apply(this,arguments)};function $o(n,t,e,s){return new(e||(e=Promise))(function(o,i){function a(c){try{u(s.next(c))}catch(h){i(h)}}function l(c){try{u(s.throw(c))}catch(h){i(h)}}function u(c){c.done?o(c.value):function r(o){return o instanceof e?o:new e(function(i){i(o)})}(c.value).then(a,l)}u((s=s.apply(n,t||[])).next())})}function Ro(n,t){var s,r,o,i,e={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(u){return function(c){return function l(u){if(s)throw new TypeError("Generator is already executing.");for(;e;)try{if(s=1,r&&(o=2&u[0]?r.return:u[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,u[1])).done)return o;switch(r=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return e.label++,{value:u[1],done:!1};case 5:e.label++,r=u[1],u=[0];continue;case 7:u=e.ops.pop(),e.trys.pop();continue;default:if(!(o=(o=e.trys).length>0&&o[o.length-1])&&(6===u[0]||2===u[0])){e=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){e.label=u[1];break}if(6===u[0]&&e.label<o[1]){e.label=o[1],o=u;break}if(o&&e.label<o[2]){e.label=o[2],e.ops.push(u);break}o[2]&&e.ops.pop(),e.trys.pop();continue}u=t.call(n,e)}catch(c){u=[6,c],r=0}finally{s=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}}function db(n){var t=n.shape[2],e=Vi(n,2),s=H(e,[-1]);return Ea(s,t)}function Hp(n,t){return q(function(){return Te(Ps(n,Ze(t)),"int32")})}function r$(n,t){var e=t.shape,s=e[0],r=e[1],o=e[2];return q(function(){var i=db(t),a=_n(oi(0,o,1,"int32"),1),l=Te(Tt(i,a),"int32"),u=H(l,[s,r]),c=ge(u,Ze(1,"int32"));return Pe(function s$(n,t){return G(n,t)}(c,n),Ze(1,"int32"))})}var pb=function(){function n(t,e){this.model=t,this.outputStride=e;var s=this.model.inputs[0].shape;E(-1===s[1]&&-1===s[2],function(){return"Input shape [".concat(s[1],", ").concat(s[2],"] ")+"must both be equal to or -1"})}return n.prototype.predict=function(t){var e=this;return q(function(){var s=e.preprocessInput(Te(t,"float32")),r=_n(s,0),i=e.model.predict(r).map(function(l){return on(l,[0])}),a=e.nameOutputResults(i);return{heatmapScores:sr(a.heatmap),offsets:a.offsets,displacementFwd:a.displacementFwd,displacementBwd:a.displacementBwd,segmentation:a.segmentation,partHeatmaps:a.partHeatmaps,longOffsets:a.longOffsets,partOffsets:a.partOffsets}})},n.prototype.dispose=function(){this.model.dispose()},n}(),i$=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return hb(t,n),t.prototype.preprocessInput=function(e){return q(function(){return Pe(Me(e,127.5),1)})},t.prototype.nameOutputResults=function(e){return{offsets:e[0],segmentation:e[1],partHeatmaps:e[2],longOffsets:e[3],heatmap:e[4],displacementFwd:e[5],displacementBwd:e[6],partOffsets:e[7]}},t}(pb),jp=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],no=jp.length,Kp=jp.reduce(function(n,t,e){return n[t]=e,n},{});function x2(n,t,e){return[t[1]/(e.left+e.right+n[1]),t[0]/(e.top+e.bottom+n[0])]}function fb(n,t,e,s){return{y:s.get(n,t,e),x:s.get(n,t,e+no)}}function mb(n,t,e){var i=fb(n.heatmapY,n.heatmapX,n.id,e);return{x:n.heatmapX*t+i.x,y:n.heatmapY*t+i.y}}function gb(n,t,e){return n<t?t:n>e?e:n}function yb(n,t){return{x:n.x+t.x,y:n.y+t.y}}function c$(n,t,e){void 0===e&&(e=.3);for(var s=0,r=0,o=0;o<n.length;o++)t.keypoints[o].score>e&&(r+=1,s+=Math.pow(n[o].x-t.keypoints[o].position.x,2)+Math.pow(n[o].y-t.keypoints[o].position.y,2));return 0===r?s=1/0:s/=r,s}function d$(n,t,e,s,r,o,i){for(var a=i[0],l=i[1],u=e(n),c=u.y*s+u.x,h=r[no*(2*c)+t],d=r[no*(2*c+1)+t],p=n.y+h,f=n.x+d,g=0;g<o;g++){p=Math.min(p,a-1);var m=e({x:f=Math.min(f,l-1),y:p}),y=m.y*s+m.x;p+=h=r[no*(2*y)+t],f+=d=r[no*(2*y+1)+t]}return{x:f,y:p}}function bb(n,t,e,s,r,o,i,a,l,u){for(var c=r[0],h=r[1],d=o[0],p=o[1],f=a[0],g=a[1],m=[],y=function(F){return function h$(n,t,e,s){var o=t[1],i=e[0],l=Math.round(((t[0]+n.y+1)*e[1]-1)/s);return{x:Math.round(((o+n.x+1)*i-1)/s),y:l}}(F,[c,h],[d,p],l)},b=0;b<s;b++){var S=d$(n,b,y,i,t,u,[f,g]);m.push(S)}for(var w=-1,I=1/0,_=0;_<e.length;_++){var R=c$(m,e[_]);R<I&&(w=_,I=R)}return w}function xb(n,t){var e=n[0];return[Math.round((n[1]-1)/t+1),Math.round((e-1)/t+1)]}function vb(n,t,e,s,r,o,i,a,l,u,c){for(var h=i[0],d=i[1],p=n.shape,f=p[0],g=p[1],m=t.shape.slice(0,2),S=H(t,[m[0],m[1],2,no]),w=new Float32Array(c*no*3).fill(0),I=0;I<e.length;I++)for(var _=I*no*3,R=e[I],F=0;F<no;F++){var O=R.keypoints[F],L=_+3*F;w[L]=O.score,w[L+1]=O.position.y,w[L+2]=O.position.x}var j=x2([s,r],[h,d],a),Q=j[0],te=j[1],se=vr(w,[c,no,3]),oe=a.top,ae=a.left,ue={variableNames:["segmentation","longOffsets","poses"],outputShape:[f,g],userCode:"\n    int convertToPositionInOutput(int pos, int pad, float scale, int stride) {\n      return round(((float(pos + pad) + 1.0) * scale - 1.0) / float(stride));\n    }\n\n    float convertToPositionInOutputFloat(\n        int pos, int pad, float scale, int stride) {\n      return ((float(pos + pad) + 1.0) * scale - 1.0) / float(stride);\n    }\n\n    float dist(float x1, float y1, float x2, float y2) {\n      return pow(x1 - x2, 2.0) + pow(y1 - y2, 2.0);\n    }\n\n    float sampleLongOffsets(float h, float w, int d, int k) {\n      float fh = fract(h);\n      float fw = fract(w);\n      int clH = int(ceil(h));\n      int clW = int(ceil(w));\n      int flH = int(floor(h));\n      int flW = int(floor(w));\n      float o11 = getLongOffsets(flH, flW, d, k);\n      float o12 = getLongOffsets(flH, clW, d, k);\n      float o21 = getLongOffsets(clH, flW, d, k);\n      float o22 = getLongOffsets(clH, clW, d, k);\n      float o1 = mix(o11, o12, fw);\n      float o2 = mix(o21, o22, fw);\n      return mix(o1, o2, fh);\n    }\n\n    int findNearestPose(int h, int w) {\n      float prob = getSegmentation(h, w);\n      if (prob < 1.0) {\n        return -1;\n      }\n\n      // Done(Tyler): convert from output space h/w to strided space.\n      float stridedH = convertToPositionInOutputFloat(\n        h, ".concat(oe,", ").concat(te,", ").concat(o,");\n      float stridedW = convertToPositionInOutputFloat(\n        w, ").concat(ae,", ").concat(Q,", ").concat(o,");\n\n      float minDist = 1000000.0;\n      int iMin = -1;\n      for (int i = 0; i < ").concat(c,"; i++) {\n        float curDistSum = 0.0;\n        int numKpt = 0;\n        for (int k = 0; k < ").concat(no,"; k++) {\n          float dy = sampleLongOffsets(stridedH, stridedW, 0, k);\n          float dx = sampleLongOffsets(stridedH, stridedW, 1, k);\n\n          float y = float(h) + dy;\n          float x = float(w) + dx;\n\n          for (int s = 0; s < ").concat(l,"; s++) {\n            int yRounded = round(min(y, float(").concat(s-1,")));\n            int xRounded = round(min(x, float(").concat(r-1,")));\n\n            float yStrided = convertToPositionInOutputFloat(\n              yRounded, ").concat(oe,", ").concat(te,", ").concat(o,");\n            float xStrided = convertToPositionInOutputFloat(\n              xRounded, ").concat(ae,", ").concat(Q,", ").concat(o,");\n\n            float dy = sampleLongOffsets(yStrided, xStrided, 0, k);\n            float dx = sampleLongOffsets(yStrided, xStrided, 1, k);\n\n            y = y + dy;\n            x = x + dx;\n          }\n\n          float poseScore = getPoses(i, k, 0);\n          float poseY = getPoses(i, k, 1);\n          float poseX = getPoses(i, k, 2);\n          if (poseScore > ").concat(u,") {\n            numKpt = numKpt + 1;\n            curDistSum = curDistSum + dist(x, y, poseX, poseY);\n          }\n        }\n        if (numKpt > 0 && curDistSum / float(numKpt) < minDist) {\n          minDist = curDistSum / float(numKpt);\n          iMin = i;\n        }\n      }\n      return iMin;\n    }\n\n    void main() {\n        ivec2 coords = getOutputCoords();\n        int nearestPose = findNearestPose(coords[0], coords[1]);\n        setOutput(float(nearestPose));\n      }\n  ")};return qm().compileAndRun(ue,[n,S,se])}function wb(){return"webgl"===J3()}function y$(n,t,e,s,r,o,i,a,l,u,c,h){var d=i[0],p=i[1];return void 0===l&&(l=.2),void 0===u&&(u=8),void 0===c&&(c=.3),void 0===h&&(h=10),$o(this,void 0,void 0,function(){var f,g,m,y,b;return Ro(this,function(S){switch(S.label){case 0:return f=e.filter(function(w){return w.score>=l}),wb()?(m=q(function(){var w=vb(n,t,f,s,r,o,[d,p],a,u,c,h),I=wr().makeTensorFromDataId(w.dataId,w.shape,w.dtype);return f.map(function(_,R){return function m$(n,t){return q(function(){return Te(rr(n,Ze(t)),"int32")})}(I,R)})}),[4,Promise.all(m.map(function(w){return w.data()}))]):[3,2];case 1:return g=S.sent(),m.forEach(function(w){return w.dispose()}),[3,5];case 2:return[4,n.data()];case 3:return y=S.sent(),[4,t.data()];case 4:b=S.sent(),g=function p$(n,t,e,s,r,o,i,a,l,u){var c=i[0],h=i[1];void 0===u&&(u=5);for(var d=e.map(function(F){return new Uint8Array(s*r).fill(0)}),p=a.top,f=a.left,g=x2([s,r],[c,h],a),m=g[0],y=g[1],b=xb([c,h],o)[0],S=0;S<s;S+=1)for(var w=0;w<r;w+=1){var I=S*r+w;if(1===n[I]){var R=bb({x:w,y:S},t,e,u,[p,f],[m,y],b,[s,r],o,l);R>=0&&(d[R][I]=1)}}return d}(y,b,f,s,r,o,[d,p],a,u),S.label=5;case 5:return[2,g.map(function(w,I){return{data:w,pose:f[I],width:r,height:s}})]}})})}function b$(n,t,e,s,r,o,i,a,l,u,c,h,d){var p=a[0],f=a[1];return void 0===u&&(u=.2),void 0===c&&(c=8),void 0===h&&(h=.3),void 0===d&&(d=10),$o(this,void 0,void 0,function(){var g,m,y,b,S,w;return Ro(this,function(I){switch(I.label){case 0:return g=s.filter(function(_){return _.score>=u}),wb()?(y=q(function(){var _=vb(n,t,g,r,o,i,[p,f],l,c,h,d),R=wr().makeTensorFromDataId(_.dataId,_.shape,_.dtype);return g.map(function(F,O){return function g$(n,t,e){return q(function(){return Pe(G(Te(rr(n,Ze(e)),"int32"),ge(t,1)),1)})}(R,e,O)})}),[4,Promise.all(y.map(function(_){return _.data()}))]):[3,2];case 1:return m=I.sent(),y.forEach(function(_){return _.dispose()}),[3,6];case 2:return[4,n.data()];case 3:return b=I.sent(),[4,t.data()];case 4:return S=I.sent(),[4,e.data()];case 5:w=I.sent(),m=function f$(n,t,e,s,r,o,i,a,l,u,c){var h=a[0],d=a[1];void 0===c&&(c=5);for(var p=s.map(function(O){return new Int32Array(r*o).fill(-1)}),f=l.top,g=l.left,m=x2([r,o],[h,d],l),y=m[0],b=m[1],S=xb([h,d],i)[0],w=0;w<r;w+=1)for(var I=0;I<o;I+=1){var _=w*o+I;if(1===n[_]){var F=bb({x:I,y:w},t,s,c,[f,g],[y,b],S,[r,o],i,u);F>=0&&(p[F][_]=e[_])}}return p}(b,S,w,g,r,o,i,[p,f],l,c),I.label=6;case 6:return[2,m.map(function(_,R){return{pose:g[R],data:_,height:r,width:o}})]}})})}function v2(n){return Math.floor(n/2)}[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map(function(n){return[Kp[n[0]],Kp[n[1]]]});var x$=function(){function n(t,e){this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=e}return n.prototype.enqueue=function(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)},n.prototype.dequeue=function(){var t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t},n.prototype.empty=function(){return-1===this.numberOfElements},n.prototype.size=function(){return this.numberOfElements+1},n.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},n.prototype.max=function(){return this.priorityQueue[0]},n.prototype.swim=function(t){for(;t>0&&this.less(v2(t),t);)this.exchange(t,v2(t)),t=v2(t)},n.prototype.sink=function(t){for(;2*t<=this.numberOfElements;){var e=2*t;if(e<this.numberOfElements&&this.less(e,e+1)&&e++,!this.less(t,e))break;this.exchange(t,e),t=e}},n.prototype.getValueAt=function(t){return this.getElementValue(this.priorityQueue[t])},n.prototype.less=function(t,e){return this.getValueAt(t)<this.getValueAt(e)},n.prototype.exchange=function(t,e){var s=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[e],this.priorityQueue[e]=s},n}();function v$(n,t,e,s,r,o){for(var i=o.shape,a=i[0],l=i[1],u=!0,c=Math.max(e-r,0),h=Math.min(e+r+1,a),d=c;d<h;++d){for(var p=Math.max(s-r,0),f=Math.min(s+r+1,l),g=p;g<f;++g)if(o.get(d,g,n)>t){u=!1;break}if(!u)break}return u}var Sb=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map(function(n){return[Kp[n[0]],Kp[n[1]]]}),w2=Sb.map(function(n){return n[1]}),Ib=Sb.map(function(n){return n[0]});function S2(n,t,e,s){return{y:gb(Math.round(n.y/t),0,e-1),x:gb(Math.round(n.x/t),0,s-1)}}function Cb(n,t,e,s,r,o,i,a){void 0===a&&(a=2);for(var l=s.shape,u=l[0],c=l[1],d=function S$(n,t,e){var s=e.shape[2]/2;return{y:e.get(t.y,t.x,n),x:e.get(t.y,t.x,s+n)}}(n,S2(t.position,o,u,c),i),f=yb(t.position,d),g=0;g<a;g++){var m=S2(f,o,u,c),y=fb(m.y,m.x,e,r);f=yb({x:m.x*o,y:m.y*o},{x:y.x,y:y.y})}var b=S2(f,o,u,c),S=s.get(b.y,b.x,e);return{position:f,part:jp[e],score:S}}function I$(n,t,e,s,r,o){var a=w2.length,l=new Array(t.shape[2]),u=n.part,c=n.score,h=mb(u,s,e);l[u.id]={score:c,part:jp[u.id],position:h};for(var d=a-1;d>=0;--d){var f=Ib[d];l[p=w2[d]]&&!l[f]&&(l[f]=Cb(d,l[p],f,t,e,s,o))}for(d=0;d<a;++d){var p;f=w2[d],l[p=Ib[d]]&&!l[f]&&(l[f]=Cb(d,l[p],f,t,e,s,r))}return l}function Nb(n,t,e,s){var r=e.x,o=e.y;return n.some(function(i){var l=i.keypoints[s].position;return function u$(n,t,e,s){var r=e-n,o=s-t;return r*r+o*o}(o,r,l.y,l.x)<=t})}function C$(n,t,e){return e.reduce(function(r,o,i){var l=o.score;return Nb(n,t,o.position,i)||(r+=l),r},0)/e.length}function qp(n,t,e,s,r,o,i,a){void 0===i&&(i=.5),void 0===a&&(a=20);for(var l=[],u=function w$(n,t,e){for(var s=e.shape,r=s[0],o=s[1],i=s[2],a=new x$(r*o*i,function(d){return d.score}),l=0;l<r;++l)for(var u=0;u<o;++u)for(var c=0;c<i;++c){var h=e.get(l,u,c);h<n||v$(c,h,l,u,t,e)&&a.enqueue({score:h,part:{heatmapY:l,heatmapX:u,id:c}})}return a}(i,1,n),c=a*a;l.length<o&&!u.empty();){var h=u.dequeue();if(!Nb(l,c,mb(h.part,r,t),h.part.id)){var p=I$(h,n,t,r,e,s),f=C$(l,c,p);l.push({keypoints:p,score:f})}}return l}var pu,k$=[-123.15,-115.9,-103.06],T$=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return hb(t,n),t.prototype.preprocessInput=function(e){return ge(e,k$)},t.prototype.nameOutputResults=function(e){return{offsets:e[4],segmentation:e[6],partHeatmaps:e[5],longOffsets:e[3],heatmap:e[2],displacementFwd:e[1],displacementBwd:e[0],partOffsets:e[7]}},t}(pb),kb="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/",Tb="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/";function di(n){if(typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&n instanceof OffscreenCanvas||typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)return function A$(n){if("offsetHeight"in n&&0!==n.offsetHeight&&"offsetWidth"in n&&0!==n.offsetWidth)return[n.offsetHeight,n.offsetWidth];if(null!=n.height&&null!=n.width)return[n.height,n.width];throw new Error("HTMLImageElement must have height and width attributes set.")}(n);if(typeof ImageData<"u"&&n instanceof ImageData)return[n.height,n.width];if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)return function $$(n){return n.hasAttribute("height")&&n.hasAttribute("width")?[n.height,n.width]:[n.videoHeight,n.videoWidth]}(n);if(n instanceof Mt)return[n.shape[0],n.shape[1]];throw new Error("error: Unknown input type: ".concat(n,"."))}function _b(n,t){return function R$(n,t){return(n-1)%t==0}(n,t)?n:Math.floor(n/t)*t+1}var Sh={low:"low",medium:"medium",high:"high",full:"full"},D$=((pu={})[Sh.low]=.25,pu[Sh.medium]=.5,pu[Sh.high]=.75,pu[Sh.full]=1,pu);function Xp(n,t,e){var s=e[0],r=e[1],o=function F$(n){if("string"==typeof n){var t=D$[n];return E("number"==typeof t,function(){return"string value of inputResolution must be one of ".concat(Object.values(Sh).join(",")," but was ").concat(n,".")}),t}return E("number"==typeof n&&n<=2&&n>=.1,function(){return"inputResolution must be a string or number between ".concat(.1," and ").concat(2,", but ")+"was ".concat(n)}),n}(n);return[_b(s*o,t),_b(r*o,t)]}function fu(n,t,e,s,r){var o=t[0],i=t[1],a=e[0],l=e[1],u=s[0],c=u[0],h=u[1],d=s[1],p=d[0],f=d[1];return void 0===r&&(r=!1),q(function(){var g=ms.resizeBilinear(n,[a,l],!0);return r&&(g=sr(g)),function L$(n,t,e){var s=t[0],r=t[1],o=e[0],i=o[0],a=o[1],l=e[1],u=l[0],c=l[1];return q(function(){var h=_n(n);return on(ms.cropAndResize(h,[[i/(s+i+a-1),u/(r+u+c-1),(i+s-1)/(s+i+a-1),(u+r-1)/(r+u+c-1)]],[0],[s,r]),[0])})}(g,[o,i],[[c,h],[p,f]])})}function Zp(n,t){var e=t[0],s=t[1],r=di(n),o=r[0],i=r[1],a=s/e,u=[0,0,0,0],c=u[0],h=u[1],d=u[2],p=u[3];i/o<a?(c=0,h=0,d=Math.round(.5*(a*o-i)),p=Math.round(.5*(a*o-i))):(c=Math.round(.5*(1/a*i-o)),h=Math.round(.5*(1/a*i-o)),d=0,p=0);var f=q(function(){var g=function O$(n){return n instanceof Mt?n:Qd(n)}(n);return g=u1(g,[[c,h],[d,p],[0,0]]),ms.resizeBilinear(g,[e,s])});return{resized:f,padding:{top:c,left:d,right:p,bottom:h}}}function Yp(n){return $o(this,void 0,void 0,function(){return Ro(this,function(t){return[2,Promise.all(n.map(function(e){return e.buffer()}))]})})}function Jp(n,t,e,s,r){var i=t[1],h=function M$(n,t,e,s,r){return void 0===s&&(s=0),void 0===r&&(r=0),1===e&&1===t&&0===s&&0===r?n:n.map(function(o){return function P$(n,t,e,s,r){return void 0===s&&(s=0),void 0===r&&(r=0),{score:n.score,keypoints:n.keypoints.map(function(o){var l=o.position;return{score:o.score,part:o.part,position:{x:l.x*e+r,y:l.y*t+s}}})}}(o,t,e,s,r)})}(n,(t[0]+s.top+s.bottom)/e[0],(i+s.left+s.right)/e[1],-s.top,-s.left);return r?function B$(n,t){return t<=0?n:n.map(function(e){return function z$(n,t){return{score:n.score,keypoints:n.keypoints.map(function(e){var o=e.position;return{score:e.score,part:e.part,position:{x:t-1-o.x,y:o.y}}})}}(e,t)})}(h,i):h}var mu=!0,Qp=!1,$b={architecture:"MobileNetV1",outputStride:16,quantBytes:4,multiplier:.75},Rb=["MobileNetV1","ResNet50"],Db={MobileNetV1:[8,16,32],ResNet50:[32,16]},Fb={MobileNetV1:[.5,.75,1],ResNet50:[1]},Ob=[1,2,4],ef={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20},nf={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20,minKeypointScore:.3,refineSteps:10};function Lb(n){var t=n.segmentationThreshold,e=n.maxDetections,s=n.scoreThreshold,r=n.nmsRadius;if(t<0||t>1)throw new Error("segmentationThreshold ".concat(t,". ")+"Should be in range [0.0, 1.0]");if(e<=0)throw new Error("Invalid maxDetections ".concat(e,". ")+"Should be > 0");if(s<0||s>1)throw new Error("Invalid scoreThreshold ".concat(s,". ")+"Should be in range [0.0, 1.0]");if(r<=0)throw new Error("Invalid nmsRadius ".concat(r,"."))}function Pb(n){var t=n.segmentationThreshold,e=n.maxDetections,s=n.scoreThreshold,r=n.nmsRadius,o=n.minKeypointScore,i=n.refineSteps;if(t<0||t>1)throw new Error("segmentationThreshold ".concat(t,". ")+"Should be in range [0.0, 1.0]");if(e<=0)throw new Error("Invalid maxDetections ".concat(e,". ")+"Should be > 0");if(s<0||s>1)throw new Error("Invalid scoreThreshold ".concat(s,". ")+"Should be in range [0.0, 1.0]");if(r<=0)throw new Error("Invalid nmsRadius ".concat(r,"."));if(o<0||o>1)throw new Error("Invalid minKeypointScore ".concat(o,".")+"Should be in range [0.0, 1.0]");if(i<=0||i>20)throw new Error("Invalid refineSteps ".concat(i,".")+"Should be in range [1, 20]")}var Mb=function(){function n(t){this.baseModel=t}return n.prototype.predictForPersonSegmentation=function(t){var e=this.baseModel.predict(t);return{segmentLogits:e.segmentation,heatmapScores:e.heatmapScores,offsets:e.offsets,displacementFwd:e.displacementFwd,displacementBwd:e.displacementBwd}},n.prototype.predictForPersonSegmentationAndPart=function(t){var e=this.baseModel.predict(t);return{segmentLogits:e.segmentation,partHeatmapLogits:e.partHeatmaps,heatmapScores:e.heatmapScores,offsets:e.offsets,displacementFwd:e.displacementFwd,displacementBwd:e.displacementBwd}},n.prototype.predictForMultiPersonInstanceSegmentationAndPart=function(t){var e=this.baseModel.predict(t);return{segmentLogits:e.segmentation,longOffsets:e.longOffsets,heatmapScores:e.heatmapScores,offsets:e.offsets,displacementFwd:e.displacementFwd,displacementBwd:e.displacementBwd,partHeatmaps:e.partHeatmaps}},n.prototype.segmentPersonActivation=function(t,e,s){var r=this;void 0===s&&(s=.5);var o=di(t),i=o[0],a=o[1],l=Xp(e,this.baseModel.outputStride,[i,a]),u=Zp(t,l),c=u.resized,h=u.padding,d=q(function(){var b=r.predictForPersonSegmentation(c),w=b.heatmapScores,I=b.offsets,_=b.displacementFwd,R=b.displacementBwd,F=c.shape,j=fu(b.segmentLogits,[i,a],[F[0],F[1]],[[h.top,h.bottom],[h.left,h.right]],mu);return{segmentation:Hp(on(j),s),heatmapScores:w,offsets:I,displacementFwd:_,displacementBwd:R}}),p=d.segmentation,f=d.heatmapScores,g=d.offsets,m=d.displacementFwd,y=d.displacementBwd;return c.dispose(),{segmentation:p,heatmapScores:f,offsets:g,displacementFwd:m,displacementBwd:y,padding:h,internalResolutionHeightAndWidth:l}},n.prototype.segmentPerson=function(t,e){return void 0===e&&(e=ef),$o(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,h,d,p,f,g,w;return Ro(this,function(I){switch(I.label){case 0:return Lb(e=Ao(Ao({},ef),e)),s=this.segmentPersonActivation(t,e.internalResolution,e.segmentationThreshold),o=s.heatmapScores,i=s.offsets,a=s.displacementFwd,l=s.displacementBwd,u=s.padding,c=s.internalResolutionHeightAndWidth,d=(h=(r=s.segmentation).shape)[0],p=h[1],[4,r.data()];case 1:return f=I.sent(),r.dispose(),[4,Yp([o,i,a,l])];case 2:return g=I.sent(),w=Jp(w=qp(g[0],g[1],g[2],g[3],this.baseModel.outputStride,e.maxDetections,e.scoreThreshold,e.nmsRadius),[d,p],c,u,Qp),o.dispose(),i.dispose(),a.dispose(),l.dispose(),[2,{height:d,width:p,data:f,allPoses:w}]}})})},n.prototype.segmentMultiPerson=function(t,e){return void 0===e&&(e=nf),$o(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,h,d,p,f,g,m,y,_,R,F=this;return Ro(this,function(O){switch(O.label){case 0:return Pb(e=Ao(Ao({},nf),e)),s=di(t),i=Xp(e.internalResolution,this.baseModel.outputStride,[r=s[0],o=s[1]]),a=Zp(t,i),l=a.resized,u=a.padding,c=q(function(){var re,L=F.predictForMultiPersonInstanceSegmentationAndPart(l),Q=L.longOffsets,te=L.heatmapScores,se=L.offsets,oe=L.displacementFwd,ae=L.displacementBwd,ue=fu(L.segmentLogits,[r,o],i,[[u.top,u.bottom],[u.left,u.right]],mu);return re=Q,{segmentation:Hp(on(ue),e.segmentationThreshold),longOffsets:re,heatmapScoresRaw:te,offsetsRaw:se,displacementFwdRaw:oe,displacementBwdRaw:ae}}),h=c.segmentation,d=c.longOffsets,[4,Yp([p=c.heatmapScoresRaw,f=c.offsetsRaw,g=c.displacementFwdRaw,m=c.displacementBwdRaw])];case 1:return y=O.sent(),_=Jp(_=qp(y[0],y[1],y[2],y[3],this.baseModel.outputStride,e.maxDetections,e.scoreThreshold,e.nmsRadius),[r,o],i,u,Qp),[4,y$(h,d,_,r,o,this.baseModel.outputStride,i,u,e.scoreThreshold,e.refineSteps,e.minKeypointScore,e.maxDetections)];case 2:return R=O.sent(),l.dispose(),h.dispose(),d.dispose(),p.dispose(),f.dispose(),g.dispose(),m.dispose(),[2,R]}})})},n.prototype.segmentPersonPartsActivation=function(t,e,s){var r=this;void 0===s&&(s=.5);var o=di(t),i=o[0],a=o[1],l=Xp(e,this.baseModel.outputStride,[i,a]),u=Zp(t,l),c=u.resized,h=u.padding,d=q(function(){var b=r.predictForPersonSegmentationAndPart(c),w=b.partHeatmapLogits,I=b.heatmapScores,_=b.offsets,R=b.displacementFwd,F=b.displacementBwd,O=c.shape,L=O[0],j=O[1],Q=fu(b.segmentLogits,[i,a],[L,j],[[h.top,h.bottom],[h.left,h.right]],mu),te=fu(w,[i,a],[L,j],[[h.top,h.bottom],[h.left,h.right]],mu);return{partSegmentation:r$(Hp(on(Q),s),te),heatmapScores:I,offsets:_,displacementFwd:R,displacementBwd:F}}),p=d.partSegmentation,f=d.heatmapScores,g=d.offsets,m=d.displacementFwd,y=d.displacementBwd;return c.dispose(),{partSegmentation:p,heatmapScores:f,offsets:g,displacementFwd:m,displacementBwd:y,padding:h,internalResolutionHeightAndWidth:l}},n.prototype.segmentPersonParts=function(t,e){return void 0===e&&(e=ef),$o(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,h,d,p,f,g,w;return Ro(this,function(I){switch(I.label){case 0:return Lb(e=Ao(Ao({},ef),e)),s=this.segmentPersonPartsActivation(t,e.internalResolution,e.segmentationThreshold),o=s.heatmapScores,i=s.offsets,a=s.displacementFwd,l=s.displacementBwd,u=s.padding,c=s.internalResolutionHeightAndWidth,d=(h=(r=s.partSegmentation).shape)[0],p=h[1],[4,r.data()];case 1:return f=I.sent(),r.dispose(),[4,Yp([o,i,a,l])];case 2:return g=I.sent(),w=Jp(w=qp(g[0],g[1],g[2],g[3],this.baseModel.outputStride,e.maxDetections,e.scoreThreshold,e.nmsRadius),[d,p],c,u,Qp),o.dispose(),i.dispose(),a.dispose(),l.dispose(),[2,{height:d,width:p,data:f,allPoses:w}]}})})},n.prototype.segmentMultiPersonParts=function(t,e){return void 0===e&&(e=nf),$o(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,h,d,p,f,g,m,y,b,R,F,O=this;return Ro(this,function(L){switch(L.label){case 0:return Pb(e=Ao(Ao({},nf),e)),s=di(t),i=Xp(e.internalResolution,this.baseModel.outputStride,[r=s[0],o=s[1]]),a=Zp(t,i),l=a.resized,u=a.padding,c=q(function(){var j=O.predictForMultiPersonInstanceSegmentationAndPart(l),te=j.longOffsets,se=j.heatmapScores,oe=j.offsets,ae=j.displacementFwd,ue=j.displacementBwd,re=j.partHeatmaps,de=fu(j.segmentLogits,[r,o],i,[[u.top,u.bottom],[u.left,u.right]],mu),ve=fu(re,[r,o],i,[[u.top,u.bottom],[u.left,u.right]],mu),Ie=te,Ee=Hp(on(de),e.segmentationThreshold),Ce=function o$(n){var t=n.shape,e=t[0],s=t[1],r=t[2];return q(function(){var o=db(n),i=_n(oi(0,r,1,"int32"),1),a=Te(Tt(o,i),"int32");return H(a,[e,s])})}(ve);return{segmentation:Ee,longOffsets:Ie,heatmapScoresRaw:se,offsetsRaw:oe,displacementFwdRaw:ae,displacementBwdRaw:ue,partSegmentation:Ce}}),h=c.segmentation,d=c.longOffsets,y=c.partSegmentation,[4,Yp([p=c.heatmapScoresRaw,f=c.offsetsRaw,g=c.displacementFwdRaw,m=c.displacementBwdRaw])];case 1:return b=L.sent(),R=Jp(R=qp(b[0],b[1],b[2],b[3],this.baseModel.outputStride,e.maxDetections,e.scoreThreshold,e.nmsRadius),[r,o],i,u,Qp),[4,b$(h,d,y,R,r,o,this.baseModel.outputStride,i,u,e.scoreThreshold,e.refineSteps,e.minKeypointScore,e.maxDetections)];case 2:return F=L.sent(),l.dispose(),h.dispose(),d.dispose(),p.dispose(),f.dispose(),g.dispose(),m.dispose(),y.dispose(),[2,F]}})})},n.prototype.dispose=function(){this.baseModel.dispose()},n}();function W$(n){return $o(this,void 0,void 0,function(){var t,e,s,r,o,i;return Ro(this,function(a){switch(a.label){case 0:if(t=n.outputStride,e=n.quantBytes,s=n.multiplier,null==$t)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return r=function E$(n,t,e){var s={1:"100",.75:"075",.5:"050"},r="model-stride".concat(n,".json");return 4===e?Tb+"float/".concat(s[t],"/")+r:Tb+"quant".concat(e,"/").concat(s[t],"/")+r}(t,s,e),[4,Gp(n.modelUrl||r)];case 1:return o=a.sent(),i=new i$(o,t),[2,new Mb(i)]}})})}function U$(n){return $o(this,void 0,void 0,function(){var t,e,s,r,o;return Ro(this,function(i){switch(i.label){case 0:if(t=n.outputStride,e=n.quantBytes,null==$t)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return s=function _$(n,t){var e="model-stride".concat(n,".json");return 4===t?kb+"float/"+e:kb+"quant".concat(t,"/")+e}(t,e),[4,Gp(n.modelUrl||s)];case 1:return r=i.sent(),o=new T$(r,t),[2,new Mb(o)]}})})}var I2={};function C2(n){return I2[n]||(I2[n]=function K$(){if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(0,0);throw new Error("Cannot create a canvas in this context")}()),I2[n]}function gu(n,t,e){var s=C2(e);return 0===t?function X$(n,t){var e=n.width,s=n.height;t.width=e,t.height=s,t.getContext("2d").drawImage(n,0,0,e,s)}(n,s):function q$(n,t,e){var s=n.height,r=n.width,o=e.getContext("2d");e.width=r,e.height=s,o.clearRect(0,0,r,s),o.save(),function j$(){return/^((?!chrome|android).)*safari/i.test(navigator.userAgent)}()?function H$(n,t,e){for(var s=n.getContext("2d"),r=0,i=1/(2*Math.PI*5*5),a=e<3?1:2,l=-e;l<=e;l+=a)for(var u=-e;u<=e;u+=a)r+=i*Math.exp(-(u*u+l*l)/50);for(l=-e;l<=e;l+=a)for(u=-e;u<=e;u+=a)s.globalAlpha=i*Math.exp(-(u*u+l*l)/50)/r*e,s.drawImage(t,u,l);s.globalAlpha=1}(e,n,t):(o.filter="blur(".concat(t,"px)"),o.drawImage(n,0,0,r,s)),o.restore()}(n,t,s),s}var Y$=[[110,64,170],[143,61,178],[178,60,178],[210,62,167],[238,67,149],[255,78,125],[255,94,99],[255,115,75],[255,140,56],[239,167,47],[217,194,49],[194,219,64],[175,240,91],[135,245,87],[96,247,96],[64,243,115],[40,234,141],[28,219,169],[26,199,194],[33,176,213],[47,150,224],[65,125,224],[84,101,214],[99,81,195]],so_blurredMask="blurred-mask",so_mask="mask";const Vb={kernelName:ma,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(n,Pa(Te(e,"float32"),-1))}}},nR={kernelName:Ni,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=dn(Te(e,"float32")),r=xs(Pe(Ze(1),s));return vn(Me(n,r))}}}},sR={kernelName:ki,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=xs(Pe(dn(Te(e,"float32")),1));return Me(n,s)}}}},rR={kernelName:jo,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=yt(e.shape,s.shape);return{a:()=>{let a=n;const l=Jn(e.shape,r);return l.length>0&&(a=He(a,l)),H(a,e.shape)},b:()=>{let a=n;const l=Jn(s.shape,r);return l.length>0&&(a=He(a,l)),H(a,s.shape)}}}},oR={kernelName:Ti,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,r)=>{e[r]=()=>n.clone()}),e}},iR={kernelName:Ko,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>jt(e)}}},aR={kernelName:ga,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>jt(e)}}},lR={kernelName:_i,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Me(n,xs(Pe(Ze(1),dn(Te(e,"float32")))))}}},uR={kernelName:Ei,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=xs(ge(Ze(1),dn(Te(e,"float32"))));return Me(n,s)}}}},cR={kernelName:$i,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=yt(e.shape,s.shape);return{a:()=>{const a=ge(dn(e),dn(s));let l=G(n,Me(s,a));const u=Jn(e.shape,r);return u.length>0&&(l=He(l,u)),H(l,e.shape)},b:()=>{const a=ge(dn(e),dn(s));let l=vn(G(n,Me(e,a)));const u=Jn(s.shape,r);return u.length>0&&(l=He(l,u)),H(l,s.shape)}}}},hR={kernelName:Ai,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Me(n,ge(dn(Te(e,"float32")),1))}}},dR={kernelName:vo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Me(n,Pe(Ze(1),dn(Te(e,"float32"))))}}},fR=V({avgPool3dGrad_:function pR(n,t,e,s,r,o){const i=$(n,"dy","avgPool3dGrad"),a=$(t,"input","avgPool3dGrad");let l=i,u=a,c=!1;4===a.rank&&(c=!0,l=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=H(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),E(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Os("avgPool3dGrad",r,o);const p=z.runKernel(dl,{dy:l,input:u},{filterSize:e,strides:s,pad:r,dimRoundingMode:o});return c?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),mR={kernelName:ba,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:o,pad:i,dimRoundingMode:a}=e;return{x:()=>fR(n,s,r,o,i,a)}}},yR=V({avgPoolGrad_:function gR(n,t,e,s,r){const o=$(n,"dy","avgPoolGrad"),i=$(t,"input","avgPoolGrad");E(i.rank===o.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${o.rank})`);let a=i,l=o,u=!1;3===i.rank&&(u=!0,a=H(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),E(4===a.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const d=z.runKernel(hl,{dy:l,input:a},{filterSize:e,strides:s,pad:r});return u?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),bR={kernelName:ya,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:o,pad:i}=e;return{x:()=>yR(n,s,r,o,i)}}},xR={kernelName:Ri,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,r]=t,{transposeA:o,transposeB:i}=e;return o||i?!o&&i?{a:()=>Tt(n,r,!1,!1),b:()=>Tt(n,s,!0,!1)}:o&&!i?{a:()=>Tt(r,n,!1,!0),b:()=>Tt(s,n,!1,!1)}:{a:()=>Tt(r,n,!0,!0),b:()=>Tt(n,s,!0,!0)}:{a:()=>Tt(n,r,!1,!0),b:()=>Tt(s,n,!0,!1)}}},vR={kernelName:Di,gradFunc:(n,t,e)=>{const{blockShape:s,crops:r}=e;return{x:()=>hh(n,s,r)}}},wR={kernelName:Yu,gradFunc:(n,t,e)=>{const r=e.inputShape,o=e.shape,i=Array.from(o);for(let l=r.length-1;l>=0;l--)if(r[l]===o[l])i[l]=1;else if(1!==r[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const a=[];for(let l=0;l<i.length;l++)i[l]>1&&a.push(l);return{x:()=>He(n,a,!0)}}},SR={kernelName:Oi,gradFunc:n=>({x:()=>n.clone()})},IR={kernelName:qo,gradFunc:n=>({x:()=>jt(n)})},CR={kernelName:v,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:r,clipValueMax:o}=e;return{x:()=>ws(Qr(si(s,r),Hi(s,o)),n,jt(n))}}},NR={kernelName:k,inputsToSave:["x"],gradFunc:Vb.gradFunc},kR={kernelName:P,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(l=>l.shape),{axis:r}=e,o=St(r,t[0].shape)[0],i=s.map(l=>l[o]);return Hs(n,i,o).map(l=>()=>l)}},TR={kernelName:Z,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{dilations:o,strides:i,pad:a,dataFormat:l}=e;return E(Ui(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>Ug(s.shape,n,r,i,a,l),filter:()=>_1(s,n,r.shape,i,a,l)}}},_R={kernelName:ne,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{strides:o,pad:i,dataFormat:a,dimRoundingMode:l}=e;return{dy:()=>ni(n,r,o,i,a,1,l),filter:()=>_1(n,s,r.shape,o,i,a,l)}}},AR=V({conv3DBackpropFilter_:function ER(n,t,e,s,r){let o=n;4===n.rank&&(o=H(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=t;return 4===i.rank&&(i=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),E(5===o.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),E(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),E(5===e.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),E(o.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${e[3]}.`),E(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`),z.runKernel(_e,{x:o,dy:i},{strides:s,pad:r,filterShape:e})}}),$R={kernelName:fe,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:o}=e;E(Ui(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,a]=t;return{x:()=>_y(i.shape,n,a,r,o),filter:()=>AR(i,n,a.shape,r,o)}}},RR={kernelName:it,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(vn(wp(Te(e,"float32"))),n)}}},DR={kernelName:Ht,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(Sp(Te(e,"float32")),n)}}},FR={kernelName:mt,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r,exclusive:o,reverse:i}=e;return{x:()=>{const a=On([r],s.rank);let l=ap(n,r,o,!i);return null!=a&&(l=Gt(l,a)),l}}}},OR={kernelName:Dt,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:i}=e,a=null==s?[1,1]:s;E(Ui(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,u]=t;return E(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),E(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),E(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),E(vs(r,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${a}'.`),Os("depthwiseConv2d",o,i),{x:()=>f4(l.shape,n,u,r,o,a,i),filter:()=>p4(l,n,u.shape,r,o,a,i)}}},LR={kernelName:bn,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,o={x:s,filter:r,dy:n},i={x:s,filter:r,dy:n};return{x:()=>z.runKernel(gt,o,e),filter:()=>z.runKernel(Vt,i,e)}}},PR={kernelName:Pt,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>z.runKernel(Zr,s)}}},MR={kernelName:pl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=G(_s(vn(dn(e))),2/Math.sqrt(Math.PI));return{x:()=>G(n,s)}}},zR={kernelName:fl,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(n,e)}}},BR={kernelName:Qu,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>H(n,e.shape)}}},VR={kernelName:ml,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(n,_s(e))}}},WR={kernelName:gl,gradFunc:n=>({x:()=>jt(n)})},UR={kernelName:yl,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=yt(e.shape,s.shape);return{a:()=>{const a=Me(n,Te(s,"float32")),l=Jn(e.shape,r);return l.length>0?H(He(a,l),e.shape):a},b:()=>{let a=G(n,Te(e,"float32"));const l=Jn(s.shape,r);l.length>0&&(a=H(He(a,l),s.shape));const u=dn(s);return vn(Me(a,Te(u,"float32")))}}}},GR={kernelName:ec,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[r,o,i,a]=t,l=null==a?Ze(1):a,u=Jn(o.shape,r.shape),c=[];if(1===o.rank){for(let w=0;w<r.shape.length-1;++w)c.push(r.shape[w]);c.push(1)}const h=Pe(r,o),d=G(n,l),p=bp(ge(i,Ze(s))),f=G(G(G(p,p),p),Ze(-.5));return{x:()=>H(G(G(n,1===o.rank?Cr(H(p,[1,1,1,o.shape[0]]),c):p),l),r.shape),mean:()=>{let w=G(G(p,Ze(-1)),d);return 1===o.rank&&(w=He(w,u)),H(w,o.shape)},variance:()=>{let w=G(G(f,h),d);return 1===o.rank&&(w=He(w,u)),H(w,o.shape)},scale:()=>{const w=G(h,p);let I=G(n,w);return 1===o.rank&&(I=He(I,u)),H(I,o.shape)},offset:()=>{let w=n;return 1===o.rank&&(w=He(w,u)),H(w,o.shape)}}}},HR={kernelName:tc,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,r]=t,{axis:o,batchDims:i}=e,a=St(o,s.shape)[0],l=(u,c,h)=>()=>{const d=u.shape,p=c.size,f=d.slice(0,a),g=f.length,m=d.slice(o,d.length).slice(1),y=m.length,b=Wb(0,g),S=Wb(g+1,g+1+y),w=Ub([f,[p],m]),I=H(h,w),_=H(c,[p]),R=Ub([[g],b,S]),F=Gt(I,R);let O=Tp(F,_,u.shape[a]);const L=Gi(R);return O=Gt(O,L),O};if(1===i){const c=s.split(s.shape[0],0);return{x:()=>js(c.map((p,f)=>l(p,r.slice(f,1),n.slice(f,1))())).reshape(s.shape),indices:()=>r}}return{x:l(s,r,n),indices:()=>r}}};function Wb(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function Ub(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}const jR={kernelName:bl,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>jt(e),b:()=>jt(s)}}},KR={kernelName:xl,gradFunc:n=>({x:()=>Te(n,"float32")})},qR={kernelName:vl,gradFunc:n=>({x:()=>jt(n)})},XR={kernelName:wl,gradFunc:n=>({x:()=>jt(n)})},ZR={kernelName:Sl,gradFunc:n=>({x:()=>jt(n)})},YR={kernelName:sc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:r}=e,o=Ps(s,0);return{x:()=>ws(o,n,G(n,r))}}},JR={kernelName:Cl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Me(n,ge(e,1))}}},QR={kernelName:Il,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Me(n,Te(e,"float32"))}}},eD={kernelName:h3,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;return{logits:()=>{const i=_s(s);return Pe(n,G(He(n,r,!0),i))}}}},nD=V({localResponseNormalizationBackprop_:function tD(n,t,e,s=5,r=1,o=1,i=.5){return z.runKernel(ld,{x:n,y:t,dy:e},{depthRadius:s,bias:r,alpha:o,beta:i})}}),sD={kernelName:uc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{depthRadius:o,bias:i,alpha:a,beta:l}=e;return{x:()=>nD(s,r,n,o,i,a,l)}}};function Gb(n,t,e,s){return t.rank<e.rank&&(t=H(t,Gn(t.shape,s))),n.rank<e.rank&&(n=H(n,Gn(n.shape,s))),{x:()=>G(n,Te(rr(e,t),n.dtype))}}const Hb={kernelName:cc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:r}=s,o=t[0],l=Gb(n,t[1],o,St(r,o.shape));return{x:()=>l.x()}}},rD={kernelName:Nl,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>G(n,Te(si(e,s),"float32")),b:()=>G(n,Te(uu(e,s),"float32"))}}},iD=V({maxPool3dGrad_:function oD(n,t,e,s,r,o,i){const a=$(n,"dy","maxPool3dGrad"),l=$(t,"input","maxPool3dGrad"),u=$(e,"output","maxPool3dGrad");let c=a,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=H(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=H(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=H(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),E(5===c.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),E(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),E(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Os("maxPool3dGrad",o,i);const m=z.runKernel(cd,{dy:c,input:h,output:d},{filterSize:s,strides:r,pad:o,dimRoundingMode:i});return p?H(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),aD={kernelName:dc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=e;return{x:()=>iD(n,s,r,o,i,a,l)}}},uD=V({maxPoolGrad_:function lD(n,t,e,s,r,o,i){const a=$(n,"dy","maxPoolGrad"),l=$(t,"input","maxPoolGrad"),u=$(e,"output","maxPoolGrad");return E(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),E(4===a.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),E(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Os("maxPoolGrad",o,i),z.runKernel(ud,{dy:a,input:l,output:u},{filterSize:s,strides:r,pad:o,dimRoundingMode:i})}}),jb={kernelName:wc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,o=r.map(i=>i[0]);return{x:()=>at(n,o,s.shape)}}};const Kb={kernelName:$c,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:r}=e;return{x:()=>nh(n,s,r)}}},qb={kernelName:Rc,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>Fn(n,s)}}},o7=[Vb,nR,sR,rR,oR,iR,aR,lR,uR,cR,hR,dR,mR,bR,xR,vR,wR,SR,IR,CR,NR,kR,_R,TR,$R,RR,DR,FR,OR,LR,{kernelName:vt,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=yt(e.shape,s.shape);return{a:()=>{const a=Me(n,Te(s,"float32")),l=Jn(e.shape,r);return l.length>0?H(He(a,l),e.shape):a},b:()=>{let a=G(n,Te(e,"float32"));const l=Jn(s.shape,r);l.length>0&&(a=H(He(a,l),s.shape));const u=dn(s);return vn(Me(a,Te(u,"float32")))}}}},PR,MR,zR,BR,VR,UR,WR,GR,HR,jR,KR,qR,XR,ZR,YR,JR,QR,eD,sD,Hb,Hb,rD,aD,{kernelName:hc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:o,strides:i,pad:a}=e;return{x:()=>uD(n,s,r,o,i,a)}}},{kernelName:pc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e,o=St(r,s.shape),l=ie(fs(s.shape,o)[1]);return{x:()=>{const c=s.shape.slice();o.forEach(p=>{c[p]=1});const h=H(n,c);return Me(G(h,Gs(s.shape,"float32")),l)}}}},{kernelName:fc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:r}=s,[o,i]=t,l=Gb(n,i,o,St(r,o.shape));return{x:()=>l.x()}}},{kernelName:kl,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>G(n,Te(Hi(e,s),"float32")),b:()=>G(n,Te(Ps(e,s),"float32"))}}},{kernelName:mc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,o=r.map(i=>i[0]);return{x:()=>at(n,o,s.shape)}}},{kernelName:Tl,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=yt(e.shape,s.shape);return{a:()=>{const a=Jn(e.shape,r);return a.length>0?H(He(n,a),e.shape):n},b:()=>{const a=G(n,vn(au(Me(e,s)))),l=Jn(s.shape,r);return l.length>0?H(He(a,l),s.shape):a}}}},{kernelName:_l,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=yt(e.shape,s.shape);return{a:()=>{const a=G(n,Te(s,"float32")),l=Jn(e.shape,r);return l.length>0?H(He(a,l),e.shape):a},b:()=>{const a=G(n,Te(e,"float32")),l=Jn(s.shape,r);return l.length>0?H(He(a,l),s.shape):a}}}},{kernelName:gc,gradFunc:n=>({x:()=>vn(n)})},{kernelName:xc,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>Qn(e.shape,"float32")}}},{kernelName:bc,gradFunc:n=>({x:()=>jt(n)})},{kernelName:vc,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return kr(n,s).map(o=>()=>o)}},jb,jb,{kernelName:El,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,r]=t,o=e,i=s,a=yt(o.shape,i.shape);return{a:()=>{const c=Te(i,"float32");let h=G(n,G(c,Qo(o,Pe(c,Ze(1)))));const d=Jn(o.shape,a);return d.length>0&&(h=He(h,d)),H(h,o.shape)},b:()=>{const c=Ps(o,0),h=ws(c,or(o),jt(o));let d=G(n,G(r,h));const p=Jn(i.shape,a);return p.length>0&&(d=He(d,p)),H(d,i.shape)}}}},{kernelName:Sc,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,r=Ps(e,0);return{x:()=>ws(r,n,G(n,s)),alpha:()=>{let o=ws(r,jt(n),G(n,e));const i=Jn(s.shape,n.shape);return i.length>0&&(o=He(o,i)),H(o,s.shape)}}}},{kernelName:Ic,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;let o=[];return o=null==r?s.shape.map((i,a)=>a):"number"==typeof r?[r]:r,{x:()=>function CD(n,t,e){const s=n.shape.length,r=s-e.length,o=On(e,s);let i=n;null!=o&&(i=Gt(n,o));const a=i.shape.slice(),u=a.splice(s-e.length,e.length).reduce((d,p)=>d*p,1);a.push(u);let h=function ID(n,t,e){const s=n.shape.slice();s[e]=1;const r=H(t,s),o=rh(n,e,!0,!1),i=rh(n,e,!0,!0),a=G(o,i);return G(r,a)}(i.reshape(a),t,r);if(h=h.reshape(i.shape),null!=o){const d=Gi(o);h=Gt(h,d)}return h}(s,n,o)}}},{kernelName:Al,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Me(n,vn(dn(e)))}}},{kernelName:Rl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=G(Hi(e,6),Pa(e));return{x:()=>G(n,Te(s,"float32"))}}},{kernelName:$l,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(n,Te(Pa(e),"float32"))}}},{kernelName:Cc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,e.shape)}}},{kernelName:kc,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>z.runKernel(Sd,r,e)}}},{kernelName:Nc,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>z.runKernel(wd,r,e)}}},{kernelName:Tc,gradFunc:(n,t,e)=>{const{dims:s}=e,r=St(s,n.shape);return{x:()=>Nr(n,r)}}},{kernelName:Dl,gradFunc:n=>({x:()=>jt(n)})},{kernelName:Fl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>vn(Me(n,G(Qo(e,1.5),2)))}}},{kernelName:_c,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>Te(jt(e),"float32"),t:()=>G(n,Te(e,n.dtype)),e:()=>G(n,Te(lh(e),n.dtype))}}},{kernelName:Ol,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Ps(e,Ze(0)),r=Ze(Mp),o=Ze(zp),i=G(n,o),a=G(G(n,r),_s(Te(e,"float32")));return ws(s,i,a)}}}},{kernelName:zl,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(n,G(e,Pe(Ze(1),e)))}}},{kernelName:Ml,gradFunc:n=>({x:()=>jt(n)})},{kernelName:Ll,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(sh(Te(e,"float32")),n)}}},{kernelName:Pl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(ip(Te(e,"float32")),n)}}},{kernelName:Ec,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:r,size:o}=e,i=s.shape,[a,l]=np(s,r,o),u=[];for(let c=0;c<n.rank;c++)u.push([a[c],i[c]-a[c]-l[c]]);return{x:()=>ri(n,u)}}},{kernelName:Dc,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:r}=e,i=G(n,s);return{logits:()=>Pe(i,G(He(i,[r],!0),s))}}},{kernelName:Bl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(n,sr(e))}}},Kb,Kb,qb,qb,{kernelName:Vl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Me(n,G(xs(Te(e,"float32")),2))}}},{kernelName:Wl,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ze(2);return{a:()=>G(n,G(r,Pe(e,s))),b:()=>G(n,G(r,Pe(s,e)))}}},{kernelName:$d,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(n,G(Te(e,"float32"),2))}}},{kernelName:Kl,gradFunc:n=>({x:()=>jt(n)})},{kernelName:Ul,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=yt(e.shape,s.shape);return{a:()=>{let a=n;const l=Jn(e.shape,r);return l.length>0&&(a=He(a,l)),H(a,e.shape)},b:()=>{let a=n;const l=Jn(s.shape,r);return l.length>0&&(a=He(a,l)),H(vn(a),s.shape)}}}},{kernelName:Ac,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,r=s.shape.slice(),{axis:o}=e;St(o,s.shape).forEach(u=>{r[u]=1});const a=H(n,r),l=G(a,Gs(s.shape,"float32"));return{x:()=>l}}},{kernelName:Gl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Me(n,dn(sh(e)))}}},{kernelName:Hl,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>G(Pe(Ze(1),dn(e)),n)}}},{kernelName:jl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:r}=e;return{x:()=>{let i=jt(s);if(1===s.rank)for(let a=0;a<r[0];++a)i=ge(i,at(n,[a*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)i=ge(i,at(n,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)i=ge(i,at(n,[a*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)i=ge(i,at(n,[a*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return i}}}},{kernelName:wa,gradFunc:(n,t,e)=>{const s=e,{perm:r}=s,o=Gi(r);return{x:()=>Gt(n,o)}}},{kernelName:Oc,gradFunc:(n,t,e)=>{const s=e,{axis:r}=s;return{value:()=>js(n,r)}}},{kernelName:Lc,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>function s7(n,t){const e=To(t,jt(t)),s=lu(n,e);let r=si(t,Ze(0,"int32"));const o=s.rank-r.rank;for(let a=0;a<o;++a)r=_n(r,a+1);r=Qr(r,Gs(s.shape,"bool"));const i=jt(s);return ws(r,s,i)}(n,e)}}},{kernelName:Pc,gradFunc:n=>({x:()=>jt(n)})}];for(const n of o7)d3(n);le().prototype.abs=function(){return this.throwIfDisposed(),Yn(this)},le().prototype.acos=function(){return this.throwIfDisposed(),Ig(this)},le().prototype.acosh=function(){return this.throwIfDisposed(),Cg(this)},le().prototype.add=function(n){return this.throwIfDisposed(),ge(this,n)},le().prototype.all=function(n,t){return this.throwIfDisposed(),sp(this,n,t)},le().prototype.any=function(n,t){return this.throwIfDisposed(),Yc(this,n,t)},le().prototype.argMax=function(n){return this.throwIfDisposed(),Vi(this,n)},le().prototype.argMin=function(n){return this.throwIfDisposed(),Ng(this,n)},le().prototype.asScalar=function(){return this.throwIfDisposed(),E(1===this.size,()=>"The array must have only 1 element."),H(this,[])},le().prototype.asType=function(n){return this.throwIfDisposed(),Te(this,n)},le().prototype.as1D=function(){return this.throwIfDisposed(),H(this,[this.size])},le().prototype.as2D=function(n,t){return this.throwIfDisposed(),H(this,[n,t])},le().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),H(this,[n,t,e])},le().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),H(this,[n,t,e,s])},le().prototype.as5D=function(n,t,e,s,r){return this.throwIfDisposed(),H(this,[n,t,e,s,r])},le().prototype.asin=function(){return this.throwIfDisposed(),kg(this)},le().prototype.asinh=function(){return this.throwIfDisposed(),Tg(this)},le().prototype.atan=function(){return this.throwIfDisposed(),_g(this)},le().prototype.atan2=function(n){return this.throwIfDisposed(),Eg(this,n)},le().prototype.atanh=function(){return this.throwIfDisposed(),Ag(this)},le().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),th(this,n,t,e,s)},le().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),nh(this,n,t)},le().prototype.batchNorm=function(n,t,e,s,r){return this.throwIfDisposed(),nu(this,n,t,e,s,r)},le().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Da(this,n)},le().prototype.cast=function(n){return this.throwIfDisposed(),Te(this,n)},le().prototype.ceil=function(){return this.throwIfDisposed(),Mg(this)},le().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),Ls(this,n,t)},le().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof Mt&&(n=[n]),Fn([this,...n],t)},le().prototype.conv1d=function(n,t,e,s,r,o){return this.throwIfDisposed(),rp(this,n,t,e,s,r,o)},le().prototype.conv2dTranspose=function(n,t,e,s,r){return this.throwIfDisposed(),op(this,n,t,e,s,r)},le().prototype.conv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),ni(this,n,t,e,s,r,o)},le().prototype.cos=function(){return this.throwIfDisposed(),sh(this)},le().prototype.cosh=function(){return this.throwIfDisposed(),ip(this)},le().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),rh(this,n,t,e)},le().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),ap(this,n,t,e)},le().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),jg(this,n,t)},le().prototype.depthwiseConv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),su(this,n,t,e,s,r,o)},le().prototype.dilation2d=function(n,t,e,s,r){return this.throwIfDisposed(),Kg(this,n,t,e,s,r)},le().prototype.divNoNan=function(n){return this.throwIfDisposed(),qg(this,n)},le().prototype.div=function(n){return this.throwIfDisposed(),Me(this,n)},le().prototype.dot=function(n){return this.throwIfDisposed(),Xg(this,n)},le().prototype.elu=function(){return this.throwIfDisposed(),ru(this)},le().prototype.equal=function(n){return this.throwIfDisposed(),rr(this,n)},le().prototype.erf=function(){return this.throwIfDisposed(),Zg(this)},le().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),Jg(this,n,t)},le().prototype.exp=function(){return this.throwIfDisposed(),_s(this)},le().prototype.expandDims=function(n){return this.throwIfDisposed(),_n(this,n)},le().prototype.expm1=function(){return this.throwIfDisposed(),Qg(this)},le().prototype.fft=function(){return this.throwIfDisposed(),gh(this)},le().prototype.flatten=function(){return this.throwIfDisposed(),H(this,[this.size])},le().prototype.floor=function(){return this.throwIfDisposed(),au(this)},le().prototype.floorDiv=function(n){return this.throwIfDisposed(),Zd(this,n)},le().prototype.gather=function(n,t,e){return this.throwIfDisposed(),lu(this,n,t,e)},le().prototype.greaterEqual=function(n){return this.throwIfDisposed(),si(this,n)},le().prototype.greater=function(n){return this.throwIfDisposed(),Ps(this,n)},le().prototype.ifft=function(){return this.throwIfDisposed(),hu(this)},le().prototype.irfft=function(){return this.throwIfDisposed(),Cp(this)},le().prototype.isFinite=function(){return this.throwIfDisposed(),e1(this)},le().prototype.isInf=function(){return this.throwIfDisposed(),t1(this)},le().prototype.isNaN=function(){return this.throwIfDisposed(),n1(this)},le().prototype.leakyRelu=function(n){return this.throwIfDisposed(),oh(this,n)},le().prototype.lessEqual=function(n){return this.throwIfDisposed(),Hi(this,n)},le().prototype.less=function(n){return this.throwIfDisposed(),uu(this,n)},le().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),s1(this,n,t,e,s)},le().prototype.logSigmoid=function(){return this.throwIfDisposed(),r1(this)},le().prototype.logSoftmax=function(n){return this.throwIfDisposed(),cp(this,n)},le().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),ah(this,n,t)},le().prototype.log=function(){return this.throwIfDisposed(),or(this)},le().prototype.log1p=function(){return this.throwIfDisposed(),ih(this)},le().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Qr(this,n)},le().prototype.logicalNot=function(){return this.throwIfDisposed(),lh(this)},le().prototype.logicalOr=function(n){return this.throwIfDisposed(),hp(this,n)},le().prototype.logicalXor=function(n){return this.throwIfDisposed(),o1(this,n)},le().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),Tt(this,n,t,e)},le().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),uh(this,n,t,e,s)},le().prototype.max=function(n,t){return this.throwIfDisposed(),Ir(this,n,t)},le().prototype.maximum=function(n){return this.throwIfDisposed(),To(this,n)},le().prototype.mean=function(n,t){return this.throwIfDisposed(),Ln(this,n,t)},le().prototype.min=function(n,t){return this.throwIfDisposed(),ou(this,n,t)},le().prototype.minimum=function(n){return this.throwIfDisposed(),ji(this,n)},le().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),a1(this,n,t)},le().prototype.mod=function(n){return this.throwIfDisposed(),l1(this,n)},le().prototype.mul=function(n){return this.throwIfDisposed(),G(this,n)},le().prototype.neg=function(){return this.throwIfDisposed(),vn(this)},le().prototype.norm=function(n,t,e){return this.throwIfDisposed(),iu(this,n,t,e)},le().prototype.notEqual=function(n){return this.throwIfDisposed(),La(this,n)},le().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),Ea(this,n,t,e)},le().prototype.onesLike=function(){return this.throwIfDisposed(),ir(this)},le().prototype.pad=function(n,t){return this.throwIfDisposed(),ri(this,n,t)},le().prototype.pool=function(n,t,e,s,r,o){return this.throwIfDisposed(),c1(this,n,t,e,s,r,o)},le().prototype.pow=function(n){return this.throwIfDisposed(),Qo(this,n)},le().prototype.prelu=function(n){return this.throwIfDisposed(),dh(this,n)},le().prototype.prod=function(n,t){return this.throwIfDisposed(),h1(this,n,t)},le().prototype.reciprocal=function(){return this.throwIfDisposed(),f1(this)},le().prototype.relu=function(){return this.throwIfDisposed(),eo(this)},le().prototype.relu6=function(){return this.throwIfDisposed(),gp(this)},le().prototype.reshapeAs=function(n){return this.throwIfDisposed(),H(this,n.shape)},le().prototype.reshape=function(n){return this.throwIfDisposed(),H(this,n)},le().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),b4(this,n,t,e)},le().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),x4(this,n,t,e)},le().prototype.reverse=function(n){return this.throwIfDisposed(),Nr(this,n)},le().prototype.rfft=function(){return this.throwIfDisposed(),yh(this)},le().prototype.round=function(){return this.throwIfDisposed(),yp(this)},le().prototype.rsqrt=function(){return this.throwIfDisposed(),bp(this)},le().prototype.selu=function(){return this.throwIfDisposed(),xp(this)},le().prototype.separableConv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),vp(this,n,t,e,s,r,o)},le().prototype.sigmoid=function(){return this.throwIfDisposed(),sr(this)},le().prototype.sign=function(){return this.throwIfDisposed(),g1(this)},le().prototype.sin=function(){return this.throwIfDisposed(),wp(this)},le().prototype.sinh=function(){return this.throwIfDisposed(),Sp(this)},le().prototype.slice=function(n,t){return this.throwIfDisposed(),at(this,n,t)},le().prototype.softmax=function(n){return this.throwIfDisposed(),mh(this,n)},le().prototype.softplus=function(){return this.throwIfDisposed(),Oa(this)},le().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),hh(this,n,t)},le().prototype.split=function(n,t){return this.throwIfDisposed(),Hs(this,n,t)},le().prototype.sqrt=function(){return this.throwIfDisposed(),xs(this)},le().prototype.square=function(){return this.throwIfDisposed(),dn(this)},le().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Np(this,n)},le().prototype.squeeze=function(n){return this.throwIfDisposed(),on(this,n)},le().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof Mt?[this,n]:[this,...n];return js(e,t)},le().prototype.step=function(n){return this.throwIfDisposed(),Pa(this,n)},le().prototype.stridedSlice=function(n,t,e,s,r,o,i,a){return this.throwIfDisposed(),y1(this,n,t,e,s,r,o,i,a)},le().prototype.sub=function(n){return this.throwIfDisposed(),Pe(this,n)},le().prototype.sum=function(n,t){return this.throwIfDisposed(),He(this,n,t)},le().prototype.tan=function(){return this.throwIfDisposed(),b1(this)},le().prototype.tanh=function(){return this.throwIfDisposed(),Ra(this)},le().prototype.tile=function(n){return this.throwIfDisposed(),Cr(this,n)},le().prototype.toBool=function(){return this.throwIfDisposed(),Te(this,"bool")},le().prototype.toFloat=function(){return this.throwIfDisposed(),Te(this,"float32")},le().prototype.toInt=function(){return this.throwIfDisposed(),Te(this,"int32")},le().prototype.topk=function(n,t){return this.throwIfDisposed(),x1(this,n,t)},le().prototype.transpose=function(n){return this.throwIfDisposed(),Gt(this,n)},le().prototype.unique=function(n){return this.throwIfDisposed(),v1(this,n)},le().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),Tp(this,n,t)},le().prototype.unstack=function(n){return this.throwIfDisposed(),kr(this,n)},le().prototype.where=function(n,t){return this.throwIfDisposed(),ws(n,this,t)},le().prototype.zerosLike=function(){return this.throwIfDisposed(),jt(this)};class Do extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Do.prototype)}}class Mr extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Mr.prototype)}}class K extends Error{constructor(t){super(t),Object.setPrototypeOf(this,K.prototype)}}class Ct extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ct.prototype)}}class N2 extends Error{constructor(t){super(t),Object.setPrototypeOf(this,N2.prototype)}}class Zb{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}function Va(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}{const e=new Array(t);return e.fill(n),e}}function Tr(n,t){if(!n)throw new N2(t)}function Yb(n,t){let e=0;for(const s of n)s===t&&e++;return e}function qs(n){return 1===n.length?n[0]:n}function pn(n){return Array.isArray(n)?n:[n]}function pi(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Wa(n){return n.length<=1||-1===n.indexOf("_")?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let zr={};function k2(n){if(null==n)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function T2(n){if(null!=n&&"object"==typeof n)if(Array.isArray(n))n.forEach(t=>T2(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];null!=s&&"object"==typeof s&&(Array.isArray(s)||"ndarray"!==s.type||"number"!=typeof s.value?T2(s):n[e]=s.value)}}}function Ih(n,t={},e={},s="object",r=!1){if("string"==typeof n){let i;if(n in e)i=e[n];else if(n in zr)i=zr[n];else if(i=t[n],null==i)throw new K(`Unknown ${s}: ${n}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const o=n;if(null==o.className||null==o.config)throw new K(`${s}: Improper config format: ${JSON.stringify(o)}.\n'className' and 'config' must set.`);const i=o.className;let a,l;if(i in e?[a,l]=e[i]:i in zr?[a,l]=zr.className:i in t&&([a,l]=t[i]),null==a)throw new K(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const u={};for(const p of Object.keys(zr))u[p]=zr[p];for(const p of Object.keys(e))u[p]=e[p];o.config.customObjects=u;const h=Object.assign({},zr);for(const p of Object.keys(e))zr[p]=e[p];T2(o.config);const d=l(a,o.config,e,r);return zr=Object.assign({},h),d}{const u=Object.assign({},zr);for(const h of Object.keys(e))zr[h]=e[h];const c=new a(o.config);return zr=Object.assign({},u),c}}}function af(n,t){return-1*function i7(n,t){return n<t?-1:n>t?1:0}(n,t)}function qi(n){if(null==n)return n;const t=[];for(const e of n)-1===t.indexOf(e)&&t.push(e);return t}function a7(n){if(null==n)throw new K(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function Ua(n,t,e){if(null!=e&&n.indexOf(e)<0)throw new K(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function _2(n,t,e=0,s=1/0){return Tr(e>=0),Tr(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(r=>typeof r===t)}function gs(n,t){Array.isArray(n)?(E(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>gs(e,`element ${s+1} of ${t}`))):E(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${Jb(n)}.`)}function Jb(n){return null===n?"null":Array.isArray(n)?"["+n.map(t=>Jb(t)).join(",")+"]":"string"==typeof n?`"${n}"`:`${n}`}function Qb(n){return"relu"===n?"relu":"linear"===n?"linear":"elu"===n?"elu":null}let u7=0;function ex(){return u7++}const lf={};function uf(n=""){return n in lf||(lf[n]=0),lf[n]+=1,n+lf[n].toString()}const c7=["channelsFirst","channelsLast"],h7=["nearest","bilinear"],d7=["valid","same","causal"],p7=["max","avg"],f7=["sum","mul","concat","ave"],yu=new Map;function Kn(n){Ua(c7,"DataFormat",n)}function _r(n){Ua(d7,"PaddingMode",n)}function tx(n){Ua(p7,"PoolMode",n)}const Ch=[];function Ga(n,t){Ch.push(n);try{const e=t();return Ch.pop(),e}catch(e){throw Ch.pop(),e}}function sx(n){if(!ox(n))throw new Error("Not a valid tensor name: '"+n+"'");return function g7(){return 0===Ch.length?"":Ch.join("/")+"/"}()+n}function rx(n){if(!ox(n))throw new Error("Not a valid tensor name: '"+n+"'");yu.has(n)||yu.set(n,0);const t=yu.get(n);if(yu.set(n,yu.get(n)+1),t>0){const e=`${n}_${t}`;return yu.set(e,1),e}return n}const y7=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ox(n){return!!n.match(y7)}function b7(n){return n===parseInt(n.toString(),10)}function Xi(n,t,e){null==t&&(t=0),null==e&&(e=n.length);let s=1;for(let r=t;r<e;++r)s*=n[r];return s}function bu(n){if(0===n.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s<t&&(t=s)}return t}function Zi(n){if(0===n.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s>t&&(t=s)}return t}function ro(n,t){if(t<n)throw new K(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}let cf;function ss(){return null==cf&&(cf=qm().epsilon()),cf}function Fo(n,t){return Te(n,t)}function Nh(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),H(n,e)}function Ha(n,t,e){return q(()=>{switch(n.rank){case 1:return ph(n,t,e);case 2:return Ip(n,[t,0],[e,n.shape[1]]);case 3:return fh(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return cu(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return at(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return at(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new K(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function E2(n,t,e){return q(()=>{switch(n.rank){case 1:return ph(n,t,e);case 2:return Ip(n,[0,t],[n.shape[0],e]);case 3:return fh(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return cu(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new K(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function hf(n,t,e,s){return q(()=>{switch(n.rank){case 1:return ph(n,t,e);case 2:switch(s){case 1:return Ha(n,t,e);case 2:return E2(n,t,e);default:throw new K(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Ha(n,t,e);case 2:return fh(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return E2(n,t,e);default:throw new K(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Ha(n,t,e);case 2:return cu(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return cu(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return E2(n,t,e);default:throw new K(`The axis is not within the rank of the tensor ${s}`)}default:throw new K(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function A2(n,t=-1){let e;return t<0&&(e=n[0].rank,t=0!==e?e:0),t===n[0].rank&&(t=-1),Fn(n,t)}function ax(n,t){switch(n.rank){case 1:return zg([n,t]);case 2:return Bg([n,t],0);case 3:return Vg([n,t],0);case 4:return Wg([n,t],0);default:throw new K(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function $2(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new K(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return Cr(n,t)}function df(n,t=0,e=1,s,r){return mp(n,t,e,s,r)}function Oo(n,t,e,s){if(n.rank<2||t.rank<2)throw new Ct(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3&&n.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Ct(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`);if(2===n.rank&&2===t.rank)return E1({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?R2(n.rank,s,"channelsLast"):null,activation:e});{const r=n.shape.slice(),o=r.pop();n=H(n,[-1,o]);const i=t.shape.slice(),a=i.pop(),l=i.pop(),u=[...i,a],c=Array.from({length:t.rank},(f,g)=>0===g?t.rank-2:g<=t.rank-2?g-1:g);t=H(Gt(t,c),[l,-1]);const h=[...r,...u];return H(E1({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?R2(n.rank,s,"channelsLast"):null,activation:e}),h)}}function lx(n,t,e){return q(()=>(t=Array.isArray(t)?jn(t,"int32"):Te(t,"int32"),lu(n,t,e)))}function kh(n){return G(n,n)}function R2(n,t,e){const s=t.shape;if(1!==t.rank&&t.rank!==n)throw new K(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(5===n){if("channelsFirst"===e)return H(t,1===s.length?[1,s[0],1,1,1]:[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===e)return H(t,1===s.length?[1,1,1,1,s[0]]:[1].concat(s))}else if(4===n){if("channelsFirst"===e)return H(t,1===s.length?[1,s[0],1,1]:[1,s[2],s[0],s[1]]);if("channelsLast"===e)return H(t,1===s.length?[1,1,1,s[0]]:[1].concat(s))}else if(3===n){if("channelsFirst"===e)return H(t,1===s.length?[1,s[0],1]:[1,s[1],s[0]]);if("channelsLast"===e)return H(t,1===s.length?[1,1,s[0]]:[1].concat(s))}else if(n<3)return t;throw new K(`Unsupported input rank by biasAdd: ${t.rank}`)}function ao(n,t,e){return q(()=>(null==e&&(e="channelsLast"),Kn(e),ge(n,R2(n.rank,t,e))))}function ux(n,t,e,s){return q(()=>N1(n,t,e,s))}function Th(n,t,e=!1){return e?n():t()}const T7=["fanIn","fanOut","fanAvg"],_7=["normal","uniform","truncatedNormal"];class Br extends ka{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}Se((()=>{class n extends Br{apply(e,s){return Qn(e,s)}}return n.className="Zeros",n})());let cx=(()=>{class n extends Br{apply(e,s){return Gs(e,s)}}return n.className="Ones",n})();Se(cx),Se((()=>{class n extends Br{constructor(e){if(super(),"object"!=typeof e)throw new K(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new K(`config must have value set but got ${e}`);this.value=e.value}apply(e,s){return q(()=>G(Ze(this.value),Gs(e,s)))}getConfig(){return{value:this.value}}}return n.className="Constant",n})()),Se((()=>{class n extends Br{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,s){return Ki(e,this.minval,this.maxval,s,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}return n.className="RandomUniform",n})()),Se((()=>{class n extends Br{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,s){if("float32"!==(s=s||"float32")&&"int32"!==s)throw new Ct(`randomNormal does not support dType ${s}.`);return df(e,this.mean,this.stddev,s,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return n.className="RandomNormal",n})()),Se((()=>{class n extends Br{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,s){if("float32"!==(s=s||"float32")&&"int32"!==s)throw new Ct(`truncatedNormal does not support dType ${s}.`);return kp(e,this.mean,this.stddev,s,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return n.className="TruncatedNormal",n})()),Se((()=>{class n extends Br{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,s){return q(()=>{if(2!==e.length||e[0]!==e[1])throw new K("Identity matrix initializer can only be used for 2D square matrices.");return G(this.gain,up(e[0]))})}getConfig(){return{gain:this.gain}}}return n.className="Identity",n})());let Er=(()=>{class n extends Br{constructor(e){if(super(),e.scale<0)throw new K(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function E7(n){Ua(T7,"FanMode",n)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function A7(n){Ua(_7,"Distribution",n)}(this.distribution),this.seed=e.seed}apply(e,s){const r=function $7(n,t="channelsLast"){let e,s;if(Kn(t),2===n.length)e=n[0],s=n[1];else if(-1!==[3,4,5].indexOf(n.length)){if("channelsFirst"===t){const r=Xi(n,2);e=n[1]*r,s=n[0]*r}else if("channelsLast"===t){const r=Xi(n,0,n.length-2);e=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=Xi(n);e=Math.sqrt(r),s=Math.sqrt(r)}return[e,s]}(e),o=r[0],i=r[1];let a=this.scale;if(a/="fanIn"===this.mode?Math.max(1,o):"fanOut"===this.mode?Math.max(1,i):Math.max(1,(o+i)/2),"normal"===this.distribution){const l=Math.sqrt(a);if("float32"!==(s=s||"float32")&&"int32"!==s)throw new Ct(`${this.getClassName()} does not support dType ${s}.`);return kp(e,0,l,s,this.seed)}{const l=Math.sqrt(3*a);return Ki(e,-l,l,s,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}return n.className="VarianceScaling",n})();Se(Er);let hx=(()=>{class n extends Er{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Er.className}}return n.className="GlorotUniform",n})();Se(hx);let dx=(()=>{class n extends Er{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Er.className}}return n.className="GlorotNormal",n})();Se(dx);let px=(()=>{class n extends Er{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Er.className}}return n.className="HeNormal",n})();Se(px);let fx=(()=>{class n extends Er{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Er.className}}return n.className="HeUniform",n})();Se(fx);let mx=(()=>{class n extends Er{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Er.className}}return n.className="LeCunNormal",n})();Se(mx);let gx=(()=>{class n extends Er{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Er.className}}return n.className="LeCunUniform",n})();Se(gx),Se((()=>{class n extends Br{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,s){return q(()=>{if(e.length<2)throw new Ct("Shape must be at least 2D.");if("int32"!==s&&"float32"!==s&&void 0!==s)throw new TypeError(`Unsupported data type ${s}.`);const r=ie(e.slice(0,-1)),o=e[e.length-1],i=r*o;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);const l=df([Math.max(o,r),Math.min(o,r)],0,1,s,this.seed),u=F1.qr(l,!1);let c=u[0];const d=u[1].flatten().stridedSlice([0],[Math.min(o,r)*Math.min(o,r)],[Math.min(o,r)+1]);return c=G(c,d.sign()),r<o&&(c=c.transpose()),G(Ze(this.gain),c.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}return n.className="Orthogonal",n})());const yx={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function bx(n,t={}){return Ih(n,Sr.getMap().classNameMap,t,"initializer")}function Pn(n){return k2(n)}function En(n){if("string"==typeof n){const t=n in yx?yx[n]:n;if("GlorotNormal"===t)return new dx;if("GlorotUniform"===t)return new hx;if("HeNormal"===t)return new px;if("HeUniform"===t)return new fx;if("LeCunNormal"===t)return new mx;if("LeCunUniform"===t)return new gx;{const e={};return e.className=t,e.config={},bx(e)}}return n instanceof Br?n:bx(n)}function D2(n){return Array.isArray(n)&&Array.isArray(n[0])}function pf(n){return 0===n.length?[]:Array.isArray(n[0])?n:[n]}function dt(n){let t;if(Array.isArray(n)){if(1!==n.length)throw new K(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function en(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(1===n.length)return n[0];throw new K(`Expected exactly 1 Shape; got ${n.length}`)}return n}function ff(n){let t=0;for(const e of n)t+=0===e.shape.length?1:e.shape.reduce((s,r)=>s*r);return t}const xx="Variable";class Lo{constructor(t,e="float32",s=xx,r=!0,o=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=ex(),this.originalName=sx(s=null==s?xx:s),this.name=rx(this.originalName),this.trainable_=r,this.constraint=o,this.val=w1(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function R7(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function F2(n){return n.map(t=>t.read())}function O2(n){n.forEach(t=>{t[0].write(t[1])})}class rs{constructor(t){this.dtype=t.dtype,this.shape=t.shape,this.ndim=null!=t.shape?t.shape.length:t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Po{constructor(t,e,s,r,o,i,a){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=a,this.id=ex(),null!=i&&(this.originalName=sx(i),this.name=rx(this.originalName)),this.rank=e.length}}let D7=0;class mf{constructor(t,e){this.callArgs=e,this.id=D7++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)null!=s&&s.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)t.push(null!=e?e.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let F7=0;class zt extends ka{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=F7++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=pi(s)+"_"+uf(s)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let s;if(null!=t.batchInputShape)s=t.batchInputShape;else if(null!=t.inputShape){let o=null;null!=t.batchSize&&(o=t.batchSize),s=[o].concat(t.inputShape)}this.batchInputShape=s;let r=t.dtype;null==r&&(r=t.inputDType),null==r&&(r="float32"),this.dtype=r}this.initialWeights=null!=t.weights?t.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Mr(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new K(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return qs(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return qs(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Do(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Do(`Layer ${this.name} is not connected, no input to return.`);return qs(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Do(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Do(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return qs(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=pn(t);if(null==this.inputSpec||0===this.inputSpec.length)return;const s=pn(this.inputSpec);if(e.length!==s.length)throw new K(`Layer ${this.name} expects ${s.length} inputs, but it received ${e.length} input tensors. Input received: ${t}`);for(let r=0;r<e.length;r++){const o=e[r],i=s[r];if(null==i)continue;const a=o.rank;if(null!=i.ndim&&a!==i.ndim)throw new K(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${a}`);if(null!=i.maxNDim&&a>i.maxNDim)throw new K(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${a}`);if(null!=i.minNDim&&a<i.minNDim)throw new K(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${a}.`);if(null!=i.dtype&&o.dtype!==i.dtype)throw new K(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${o.dtype}.`);if(i.axes){const l=o.shape;for(const u in i.axes){const c=Number(u),h=i.axes[u];if(null!=h&&-1===[h,null].indexOf(c>=0?l[c]:l[l.length+c]))throw new K(`Input ${r} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${h} but got shape ${l}.`)}}if(null!=i.shape)for(let l=0;l<i.shape.length;++l){const u=i.shape[l],c=o.shape[l];if(null!=u&&null!=c&&u!==c)throw new K(`Input ${r} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${o.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=pn(t),r=function P7(n){let t=!0;for(const e of pn(n))if(!(e instanceof Po)){t=!1;break}return t}(t),o=function M7(n){let t=!0;for(const e of pn(n))if(e instanceof Po){t=!1;break}return t}(t);if(r===o)throw new K("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ga(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const i=[];for(const a of pn(t))i.push(a.shape);this.build(qs(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&o&&(this._refCount=1)}if(this.assertInputCompatibility(t),o){let i=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,i);const a=pn(i),l=[];for(let u of a)-1!==s.indexOf(u)&&(u=u.clone()),l.push(u);if(i=qs(l),null!=this.activityRegularizer)throw new Ct("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}{const i=function O7(n){n=pn(n);const t=[];for(const e of n)t.push(e.shape);return qs(t)}(t),a=this.computeOutputShape(i);let l;const u="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),l=null!=a&&a.length>0&&Array.isArray(a[0])?a.map((c,h)=>new Po(u,c,this,pn(t),e,this.name,h)):new Po(u,a,this,pn(t),e,this.name),this.addInboundNode(t,l,null,null,i,a,e),this._refCount++,null!=this.activityRegularizer)throw new Ct("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,r)=>{null!=s&&null!=t[r]&&t[r]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Do(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);-1===t.indexOf(s)&&t.push(s)}if(1===t.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Do(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Mr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ff(this.weights)}build(t){this.built=!0}getWeights(t=!1){return F2(t?this.trainableWeights:this.weights)}setWeights(t){q(()=>{const e=this.weights;if(e.length!==t.length)throw new K(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const s=[],r=F2(e);for(let o=0;o<r.length;++o){const i=r[o],a=e[o],l=t[o];if(!At(i.shape,l.shape))throw new K(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}O2(s)})}addWeight(t,e,s,r,o,i,a,l){if(-1!==this._addedWeightNames.indexOf(t))throw new K(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==s&&(s="float32"),this.fastWeightInitDuringBuild&&(r=null!=l?l():En("zeros"));const u=r.apply(e,s),c=new Lo(u,s,t,i,a);return u.dispose(),null!=o&&this.addLoss(()=>o.apply(c.read())),null==i&&(i=!0),i?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=pn(t),null!=this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(s=>{if(null!=s)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}setMaskMetadata(t,e,s){if(!this.supportsMasking)return;const r=this.computeMask(t,s);if(e instanceof Array&&r instanceof Array){if(e.length!==r.length)throw new Error(`${this.name} outputs ${e.length} tensors but ${r.length} masks for those tensors`);for(let o=0;o<e.length;o++)e[o].kerasMask=r[o]}else{if(r instanceof Array)throw new Error(`{this.name} outputs a single tensor but ${r.length} masks`);if(e instanceof Array)throw new Error(`{this.name} outputs ${e.length} tensors but only one mask`);e.kerasMask=r}}addInboundNode(t,e,s,r,o,i,a=null){const l=pn(t);e=pn(e),s=pn(s),r=pn(r),o=pf(o),i=pf(i);const u=[],c=[],h=[];for(const d of l)u.push(d.sourceLayer),c.push(d.nodeIndex),h.push(d.tensorIndex);new mf({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:h,inputTensors:l,outputTensors:e,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:i},a);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function vx(n,t,e){if((null==t||null!=e&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),0===t.inboundNodes.length)return[n];{const s=t.inboundNodes[e];if(0===s.inboundLayers.length)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const u=vx(s.inputTensors[o],s.inboundLayers[o],s.nodeIndices[o]);for(const c of u)-1===r.indexOf(c)&&r.push(c)}return r}}}let gf=(()=>{class n extends zt{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:uf("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new K("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let s=e.batchInputShape;if(null==s){if(null==e.inputShape)throw new K("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");s=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new K("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const r=e.dtype||"float32";this.batchInputShape=s,this.dtype=r,this.inputSpec=[{shape:s}];const o=new Po(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new mf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[s],outputShapes:[s]})}apply(e,s){throw new K(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}return n.className="InputLayer",n})();Se(gf);class Yi{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Yi)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(null!=this.id2Value[t.id])throw new K(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function B7(n,t){if(null==n.dtype||n.dtype===t.dtype)return t;try{return Te(t,n.dtype)}catch{throw new K(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=s&&(this.id2Mask[t.id]=s),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Po){if(null==this.id2Value[t.id])throw new K(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new K(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Po){if(null==this.id2Value[t.id])throw new K(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new K(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&ht(this.id2Mask)}}const yf=new Zb,bf=new Zb;function _h(n,t,e,s){const r=null!=e&&e.training,o=Array.isArray(n),i=o?n:[n],a=i.map(f=>f.name),l=[],u=t.names();for(const f of a)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=a.join(",")+"|"+t.names().sort().join(",");let d,h=yf.get(c);if(null==h){const f=function W7(n,t){E(null!=n&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(1===n.length){const r=wx(n[0],t);e=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:i,recipientMap:a}=wx(o,t);for(const l of i)r.has(l.name)||(e.push(l),r.add(l.name));for(const l in a)null==s[l]&&(s[l]=new Set),a[l].forEach(u=>s[l].add(u))}}return{sorted:e,recipientCounts:U7(s)}}(i,t);h=f.sorted,d=f.recipientCounts,yf.put(c,h),bf.put(c,d)}d={},r||Object.assign(d,bf.get(c));const p=new Yi(t);for(let f=0;f<h.length;++f){if(null!=s){const O=Xd().numTensors;O>s.maxNumTensors&&(s.maxNumTensors=O),O<s.minNumTensors&&(s.minNumTensors=O)}const g=h[f],m=g.sourceLayer;if(m instanceof gf)continue;const y=[],b=[],S=[];let w=!1;for(const O of g.inputs){const L=p.getValue(O),j=p.getMask(O);y.push(L),b.push(j),null!=j&&(w=!0),r||(d[O.name]--,0===d[O.name]&&!t.hasKey(O)&&-1===a.indexOf(O.name)&&!L.isDisposed&&!0!==O.sourceLayer.stateful&&S.push(L))}w&&((e=e||{}).mask=b[0]);const I=pn(m.apply(y,e));let _=null;m.supportsMasking&&(_=m.computeMask(y,b));const R=G7(g),F=Array.isArray(R)?R:[R];for(let O=0;O<F.length;++O){p.hasKey(F[O])||p.add(F[O],I[O],Array.isArray(_)?_[0]:_);const L=a.indexOf(F[O].name);-1!==L&&(l[L]=I[O])}r||ht(S)}return p.disposeMasks(),o?l:l[0]}function U7(n){const t={};for(const e in n)t[e]=n[e].size;return t}function wx(n,t){const e=new Set,s=[],r={};for(const a of t.names())e.add(a);const o=[],i=[];for(o.push(n);o.length>0;){const a=o[o.length-1];if(e.has(a.name)){o.pop();continue}const l=i[i.length-1]===o.length-1;if(0===a.inputs.length||l)o.pop(),s.push(a),e.add(a.name),l&&i.pop();else{i.push(o.length-1);for(const u of a.inputs)null==r[u.name]&&(r[u.name]=new Set),r[u.name].add(a.name),!e.has(u.name)&&o.push(u)}}return{sorted:s,recipientMap:r}}function G7(n){let t;if(1===n.sourceLayer.inboundNodes.length)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}function L2(n,t){return q(()=>xs(He(G(n,n),t,!0)))}J().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function V7(n){null!=yf&&yf.setMaxEntries(n),null!=bf&&bf.setMaxEntries(n)});class Eh extends ka{getConfig(){return{}}}Se((()=>{class n extends Eh{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return q(()=>{const s=L2(e,this.axis),r=Ls(s,0,this.maxValue);return G(e,Me(r,ge(ss(),s)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}return n.className="MaxNorm",n})()),Se((()=>{class n extends Eh{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return q(()=>Me(e,ge(ss(),L2(e,this.axis))))}getConfig(){return{axis:this.axis}}}return n.className="UnitNorm",n})()),Se((()=>{class n extends Eh{apply(e){return eo(e)}}return n.className="NonNeg",n})()),Se((()=>{class n extends Eh{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return q(()=>{const s=L2(e,this.axis),r=ge(G(this.rate,Ls(s,this.minValue,this.maxValue)),G(1-this.rate,s));return G(e,Me(r,ge(ss(),s)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}return n.className="MinMaxNorm",n})());const Sx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function os(n){return k2(n)}function Ix(n,t={}){return Ih(n,Sr.getMap().classNameMap,t,"constraint")}function is(n){return null==n?null:"string"==typeof n?Ix({className:n in Sx?Sx[n]:n,config:{}}):n instanceof Eh?n:Ix(n)}function Ji(n){return P2.apply(this,arguments)}function P2(){return(P2=(0,ce.Z)(function*(n){if(null==n)return;const t=[],e=[],s=[];for(const r in n){const o=n[r];if("number"!=typeof o){const i=o;t.push(i.data()),e.push(r),s.push(i)}}if(t.length>0){const r=yield Promise.all(t);for(let o=0;o<r.length;++o)n[e[o]]=r[o][0];ht(s)}})).apply(this,arguments)}function Cx(n){if(null!=n)for(const t in n){const e=n[t];"number"!=typeof e&&e.dispose()}}class xu{constructor(){this.validationData=null}setParams(t){this.params=t}onEpochBegin(t,e){return(0,ce.Z)(function*(){})()}onEpochEnd(t,e){return(0,ce.Z)(function*(){})()}onBatchBegin(t,e){return(0,ce.Z)(function*(){})()}onBatchEnd(t,e){return(0,ce.Z)(function*(){})()}onTrainBegin(t){return(0,ce.Z)(function*(){})()}onTrainEnd(t){return(0,ce.Z)(function*(){})()}setModel(t){}}class K7{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}onEpochBegin(t,e){var s=this;return(0,ce.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onEpochBegin(t,e)})()}onEpochEnd(t,e){var s=this;return(0,ce.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onEpochEnd(t,e)})()}onBatchBegin(t,e){var s=this;return(0,ce.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onBatchBegin(t,e)})()}onBatchEnd(t,e){var s=this;return(0,ce.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onBatchEnd(t,e)})()}onTrainBegin(t){var e=this;return(0,ce.Z)(function*(){null==t&&(t={});for(const s of e.callbacks)yield s.onTrainBegin(t)})()}onTrainEnd(t){var e=this;return(0,ce.Z)(function*(){null==t&&(t={});for(const s of e.callbacks)yield s.onTrainEnd(t)})()}}class q7 extends xu{constructor(){super()}onEpochBegin(t){var e=this;return(0,ce.Z)(function*(){e.seen=0,e.totals={}})()}onBatchEnd(t,e){var s=this;return(0,ce.Z)(function*(){null==e&&(e={});const r=null==e.size?0:e.size;s.seen+=r;for(const o in e){const i=e[o];if("number"==typeof i)s.totals.hasOwnProperty(o)||(s.totals[o]=0),s.totals[o]=s.totals[o]+i*r;else{let a;o in s.totals?a=s.totals[o]:s.totals[o]=0;const l=q(()=>ge(s.totals[o],G(i,r)));s.totals[o]=l,null!=a&&a.dispose()}}})()}onEpochEnd(t,e){var s=this;return(0,ce.Z)(function*(){if(null!=e)for(const r of s.params.metrics)null!=s.totals[r]&&("number"==typeof s.totals[r]?e[r]=s.totals[r]/s.seen:q(()=>{const o=G(Me(1,s.seen),s.totals[r]);e[r]=o,s.totals[r].dispose(),ns(e[r])}))})()}}class X7 extends xu{onTrainBegin(t){var e=this;return(0,ce.Z)(function*(){e.epoch=[],e.history={}})()}onEpochEnd(t,e){var s=this;return(0,ce.Z)(function*(){null==e&&(e={}),s.epoch.push(t);for(const r in e)null==s.history[r]&&(s.history[r]=[]),s.history[r].push(e[r])})()}syncData(){var t=this;return(0,ce.Z)(function*(){const e=[],s=[],r=[];for(const i in t.history){const a=t.history[i];for(let l=0;l<a.length;++l)"number"!=typeof a[l]&&(e.push(a[l].data()),s.push(i),r.push(l))}const o=yield Promise.all(e);for(let i=0;i<o.length;++i)t.history[s[i]][r[i]].dispose(),t.history[s[i]][r[i]]=o[i][0]})()}}class Z7 extends xu{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||O1,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Fr(this.yieldEvery)&&(this.maybeWait=function l7(n,t,e){let r,s=null!=e?e():Ds();return(...i)=>{const a=null!=e?e():Ds();return a-s<t||(s=a,r=n(...i)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}maybeWait(t,e,s){var r=this;return(0,ce.Z)(function*(){const o=[];null!=r.yield&&(yield Ji(s),o.push(r.yield(t,e,s))),o.push(r.nextFrameFunc()),yield Promise.all(o)})()}onEpochBegin(t,e){var s=this;return(0,ce.Z)(function*(){s.currentEpoch=t,null!=s.epochBegin&&(yield Ji(e),yield s.epochBegin(t,e))})()}onEpochEnd(t,e){var s=this;return(0,ce.Z)(function*(){const r=[];null!=s.epochEnd&&(yield Ji(e),r.push(s.epochEnd(t,e))),"epoch"===s.yieldEvery&&r.push(s.nextFrameFunc()),yield Promise.all(r)})()}onBatchBegin(t,e){var s=this;return(0,ce.Z)(function*(){null!=s.batchBegin&&(yield Ji(e),yield s.batchBegin(t,e))})()}onBatchEnd(t,e){var s=this;return(0,ce.Z)(function*(){const r=[];null!=s.batchEnd&&(yield Ji(e),r.push(s.batchEnd(t,e))),"batch"===s.yieldEvery?r.push(s.nextFrameFunc()):Fr(s.yieldEvery)&&r.push(s.maybeWait(s.currentEpoch,t,e)),yield Promise.all(r)})()}onTrainBegin(t){var e=this;return(0,ce.Z)(function*(){null!=e.trainBegin&&(yield Ji(t),yield e.trainBegin(t))})()}onTrainEnd(t){var e=this;return(0,ce.Z)(function*(){null!=e.trainEnd&&(yield Ji(t),yield e.trainEnd(t))})()}}function Nx(n,t){return null==n&&(n={}),n instanceof xu?[n]:Array.isArray(n)&&n[0]instanceof xu?n:pn(n).map(s=>new Z7(s,t))}let Y7=(()=>{class n{constructor(){}static registerCallbackConstructor(e,s){E(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),n.checkForDuplicate(s),null==n.constructors[e]&&(n.constructors[e]=[]),n.constructors[e].push(s)}static checkForDuplicate(e){for(const s in n.constructors)n.constructors[+s].forEach(o=>{if(o===e)throw new K("Duplicate callback constructor.")})}static clear(){n.constructors={}}static createCallbacks(e){const s=[];for(const r in n.constructors){const o=+r;e>=o&&s.push(...n.constructors[o])}return s.map(r=>new r)}}return n.constructors={},n})();function kx(n,t,e,s,r,o,i,a,l){const u=new X7,c=[new q7,...Y7.createCallbacks(t)];null!=n&&c.push(...n),c.push(u);const h=new K7(c);return h.setParams({epochs:e,initialEpoch:s,samples:r,steps:o,batchSize:i,verbose:t,doValidation:a,metrics:l}),{callbackList:h,history:u}}function fi(n,t={},e=!1){return Ih(n,Sr.getMap().classNameMap,t,"layer",e)}function xf(n,t){return q(()=>{"float32"!==n.dtype&&(n=Te(n,"float32"));const e=He(kh(n),t,!0),s=Ta(e.shape,ss()),r=xs(To(e,s));return Me(n,r)})}function vf(n,t){return q(()=>Ln(kh(Pe(t,n)),-1))}function M2(n,t){return q(()=>Ln(Yn(Pe(t,n)),-1))}function z2(n,t){return q(()=>{const e=Pe(n,t),s=Ls(Yn(n),ss(),Number.MAX_VALUE),r=Yn(Me(e,s));return G(100,Ln(r,-1))})}function Ah(n,t,e=!1){return q(()=>{if(e)t=mh(t);else{const s=He(t,t.shape.length-1,!0);t=Me(t,s)}return t=Ls(t,ss(),1-ss()),vn(He(G(Te(n,"float32"),or(t)),t.shape.length-1))})}function wf(n,t,e=!1){return q(()=>{const s=Te(au(function S7(n){const t=[Xi(n.shape)];return H(n,t)}(n)),"int32"),r=(t=Ls(t,ss(),1-ss())).shape;return Ah(H(Ea(s,r[r.length-1]),r),t,e)})}function Sf(n,t){return q(()=>{let e;return e=Ls(t,ss(),1-ss()),e=or(Me(e,Pe(1,e))),Ln(function s8(n,t){if(!At(n.shape,t.shape))throw new K(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return q(()=>{const e=eo(t),s=vn(Yn(t));return ge(Pe(e,G(t,n)),ih(_s(s)))})}(n,e),-1)})}function Tx(n,t){return q(()=>{const e=xf(n,-1),s=xf(t,-1),r=G(e,s);return vn(He(r,-1))})}const If={meanSquaredError:vf,meanAbsoluteError:M2,meanAbsolutePercentageError:z2,meanSquaredLogarithmicError:function J7(n,t){return q(()=>{const e=Ls(t,ss(),Number.MAX_VALUE),s=or(ge(1,e)),r=Ls(n,ss(),Number.MAX_VALUE),o=or(ge(1,r));return Ln(kh(Pe(s,o)),-1)})},squaredHinge:function Q7(n,t){return q(()=>{const e=To(0,Pe(1,G(n,t)));return Ln(kh(e),-1)})},hinge:function e8(n,t){return q(()=>{const e=To(0,Pe(1,G(n,t)));return Ln(e,-1)})},categoricalHinge:function t8(n,t){return q(()=>{const e=He(G(n,t),-1),s=Ir(G(Pe(1,n),t),-1);return To(0,ge(1,Pe(s,e)))})},logcosh:function n8(n,t){return q(()=>{const e=Math.log(2),s=Pe(t,n),r=Pe(ge(s,Oa(G(-2,s))),e);return Ln(r,-1)})},categoricalCrossentropy:Ah,sparseCategoricalCrossentropy:wf,binaryCrossentropy:Sf,kullbackLeiblerDivergence:function r8(n,t){return q(()=>{const e=Ls(n,ss(),1),s=Ls(t,ss(),1);return He(G(n,or(Me(e,s))),-1)})},poisson:function o8(n,t){return q(()=>{const e=or(ge(ss(),t));return Ln(Pe(t,G(n,e)),-1)})},cosineProximity:Tx};function B2(n){if("string"==typeof n){if(n in If)return If[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new K(t)}return n}function _x(n,t){return q(()=>{const e=G(.5,ir(t)),s=Fo(Ps(t,e),n.dtype);return Ln(rr(n,s),-1)})}function Ex(n,t){return q(()=>Fo(rr(Vi(n,-1),Vi(t,-1)),"float32"))}function u8(n,t){return Sf(n,t)}function c8(n,t){return n.rank===t.rank&&(n=on(n,[n.rank-1])),(t=Vi(t,-1)).dtype!==n.dtype&&(t=Te(t,n.dtype)),Te(rr(n,t),"float32")}const $x=Ah,Rx=wf,Cf={binaryAccuracy:_x,categoricalAccuracy:Ex,precision:function l8(n,t){return q(()=>{const e=function Ax(n,t){return q(()=>Te(He(Qr(rr(n,1),rr(t,1))),"float32"))}(n,t),s=function a8(n,t){return q(()=>Te(He(Qr(rr(n,0),rr(t,1))),"float32"))}(n,t),r=ge(e,s);return Te(ws(Ps(r,0),Me(e,r),0),"float32")})},categoricalCrossentropy:$x,sparseCategoricalCrossentropy:Rx,mse:vf,MSE:vf,mae:M2,MAE:M2,mape:z2,MAPE:z2,cosine:Tx};function b8(n){if("string"==typeof n&&n in Cf)return Cf[n];if("string"!=typeof n&&null!=n)return n;throw new K(`Unknown metric ${n}`)}function Nf(n){if(Tr(null!==n,`Unknown LossOrMetricFn ${n}`),"string"==typeof n)return n;{let t;for(const e of Object.keys(If))if(If[e]===n){t=e;break}if(void 0!==t)return t;for(const e of Object.keys(Cf))if(Cf[e]===n){t=e;break}return void 0!==t?t:n.name}}function Fx(n,t,e=!1){if(null==n||"object"!=typeof n||Object.getPrototypeOf(n)!==Object.prototype||!V2(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function V2(n){if(null===n)return!0;if("object"==typeof n){if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if("string"!=typeof e||!V2(n[e]))return!1;return!0}if(Array.isArray(n)){for(const t of n)if(!V2(t))return!1;return!0}return!1}{const t=typeof n;return"string"===t||"number"===t||"boolean"===t}}function kf(n,t,e=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);e(s)}function I8(n,t,e){let s,r;try{r=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}kf([`${n.name} (${n.getClassName()})`,r,s,n.countParams().toString()],t,e)}function C8(n,t,e,s){let r,o;try{o=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{o="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const i=[];for(const h of n.inboundNodes)if(!(null!=e&&e.length>0&&-1===e.indexOf(h)))for(let d=0;d<h.inboundLayers.length;++d)i.push(`${h.inboundLayers[d].name}[${h.nodeIndices[d]}][${h.tensorIndices[d]}]`);const a=n.name,l=n.getClassName(),u=0===i.length?"":i[0];kf([`${a} (${l})`,o,r,n.countParams().toString(),u],t,s);for(let h=1;h<i.length;++h)kf(["","","","",i[h]],t,s)}function Ox(n,t,e){return("inboundNodes"===n||"outputLayers"===n||"inputLayers"===n)&&0===t&&"string"==typeof e}function W2(n,t){if(null===n)return null;if("string"==typeof n)return Wa(n);if("number"==typeof n||"boolean"==typeof n)return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];Ox(t,r,o)?e.push(o):e.push(W2(o,t))}return e}{const e={};for(const s of Object.keys(n)){const r=n[s];if("name"===s&&"string"==typeof r)e[s]=r;else{const o=Wa(s);e[o]=W2(r,o)}}return e}}function U2(n,t){if(null==n)return null;if("string"==typeof n)return pi(n);if("number"==typeof n||"boolean"==typeof n)return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];Ox(t,r,o)?e.push(o):e.push(U2(o,t))}return e}{const e={};for(const s of Object.keys(n)){const r=n[s];e[pi(s)]="name"!==s&&"className"!==s||"string"!=typeof r?U2(r,s):r}return e}}class lo extends zt{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const b=this.getClassName().toLowerCase();this.name=uf(b)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(t.inputs)?t.inputs.slice():[t.inputs],this.outputs=Array.isArray(t.outputs)?t.outputs.slice():[t.outputs],qi(this.inputs).length!==this.inputs.length)throw new K(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);qi(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const w=b.nodeIndex,I=b.tensorIndex;this.outputLayers.push(b.sourceLayer),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(I)}for(const b of this.inputs){const S=b.sourceLayer,w=b.nodeIndex,I=b.tensorIndex;Tr(0===w,"input layer has >1 nodes"),Tr(0===I,"input layer has >1 tensors"),this.inputLayers.push(S),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const S=this.inputLayers[b];if(!(S instanceof gf))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${S.getClassName()}.`);this.inputNames.push(S.name),this.feedInputShapes.push(S.batchInputShape),this.feedInputNames.push(S.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const e={},s={},r={},o={},i={},a=[],l=(b,S,w,I,_,R)=>{(null==I||null==_||null==R)&&(I=b.sourceLayer,_=b.nodeIndex,R=b.tensorIndex);const F=I.inboundNodes[_];if(-1!==w.indexOf(F))throw new Mr(`The tensor ${b.name} at layer "${I.name}" is part of a cycle.`);if(-1!==S.indexOf(F))return;this.containerNodes.add(lo.nodeKey(I,_)),I.id in i||(i[I.id]=Object.keys(i).length),-1===w.indexOf(F)&&w.push(F);const O=F.inboundLayers.length;for(let L=0;L<O;L++)l(F.inputTensors[L],S,w,F.inboundLayers[L],F.nodeIndices[L],F.tensorIndices[L]);for(S.push(F);w.indexOf(F)>=0;)w.splice(w.indexOf(F),1);a.push(F)},u=[],c=[];for(const b of this.outputs)l(b,u,c);const h=a.slice().reverse();for(const b of h){s[b.id]=b,b.id in e||(e[b.id]=0);let S=e[b.id];S=Math.max(S,null==r[b.outboundLayer.id]?0:r[b.outboundLayer.id]),r[b.outboundLayer.id]=S,o[b.outboundLayer.id]=b.outboundLayer,e[b.id]=S;for(let I=0;I<b.inboundLayers.length;I++){const F=b.inboundLayers[I].inboundNodes[b.nodeIndices[I]];e[F.id]=Math.max(S+1,null==e[F.id]?0:e[F.id]),s[F.id]=F}}const d={};for(const b in e){const S=e[b];S in d||(d[S]=[]),d[S].push(s[b])}const p={};for(const b in r){const S=r[b];S in p||(p[S]=[]),p[S].push(o[b])}let f=Object.keys(p).map(b=>parseInt(b,10)).sort(af);this.layers=[];for(const b of f){const S=p[b];S.sort((w,I)=>{const _=i[w.id],R=i[I.id];return _<R?-1:_>R?1:0});for(const w of S)w instanceof lo&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=p,f=Object.keys(d).map(b=>parseInt(b,10)).sort(af);const g=this.inputs.slice(),m=[];for(const b of f)for(const S of d[b]){const w=S.outboundLayer;if(null!=w){for(const I of S.inputTensors)if(-1===g.indexOf(I))throw new Mr(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${w.name}". The following previous layers were accessed without issue: ${m}`);for(const I of S.outputTensors)g.push(I);m.push(w.name)}}this.nodesByDepth=d;const y=this.layers.map(b=>b.name);for(const b of y){const S=y.filter(w=>w===b).length;if(1!==S)throw new Mr(`The name "${b}" is used ${S} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new mf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new K("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let r=0;const o=(n=>{const t=Object.keys(n);if(0===t.length)return!1;const e=t[0].split("/");return!isNaN(parseInt(e[e.length-1],10))})(t);o&&this.parseWeights(t);for(const a of this.layers)for(const[l,u]of a.weights.entries()){const c=o?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(null!=s[c])throw new K(`Duplicate weight name: ${c}`);s[c]=u,r++}const i=[];for(const a in t){let l=a;if(null==s[a]){const u=a.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(null!=s[l])i.push([s[l],t[a]]);else if(e)throw new K(`Provided weight data has no target variable: ${a}`);delete s[l]}if(e){const a=[];for(const l in s)a.push(l);if(a.length>0)throw new K(`${a.length} of ${r} weights are not set: ${a}`)}O2(i)}parseWeights(t){for(const e in Object.keys(t)){const s=e.split("/"),r=["vars","layer_checkpoint_dependencies"],o=s.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!r.includes(i)).join("/");o!==e&&(t[o]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 4.11.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=U2(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return q(()=>{t=pn(t);const s=new Yi;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],t[r]);return _h(this.outputs,s,e)})}computeMask(t,e){return q(()=>{let s;return t=pn(t),s=null==e?Va(null,t.length):pn(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=pf(t);if(e.length!==this.inputLayers.length)throw new K(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<e.length;a++)s[this.inputLayers[a].name+"_0_0"]=e[a];const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(af);if(r.length>1)for(const a of r){const l=this.nodesByDepth[a];for(const u of l){const c=u.outboundLayer;if(-1!==this.inputLayers.map(g=>g.id).indexOf(c.id))continue;const h=[];for(let g=0;g<u.inboundLayers.length;g++)h.push(s[`${u.inboundLayers[g].name}_${u.nodeIndices[g]}_${u.tensorIndices[g]}`]);const p=pf(c.computeOutputShape(qs(h))),f=c.inboundNodes.indexOf(u);for(let g=0;g<p.length;g++)s[`${c.name}_${f}_${g}`]=p[g]}}const o=[],i=[];for(let a=0;a<this.outputLayers.length;a++)i.push(`${this.outputLayers[a].name}_${this.outputLayersNodeIndices[a]}_${this.outputLayersTensorIndices[a]}`);for(let a=0;a<i.length;a++){const l=i[a];Tr(l in s),o.push(s[l])}return qs(o)}runInternalGraph(t,e){null==e&&(e=Va(null,t.length));const s={};for(let l=0;l<this.inputs.length;++l)s[this.inputs[l].id]=[t[l],e[l]];const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(af);for(const l of r){const u=this.nodesByDepth[l];for(const c of u){const h=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,f=new Array;for(const g of d)g.id in s&&f.push(s[g.id]);if(f.length===d.length){let m,y,b,S,g={};if(null!=c.callArgs&&(g=c.callArgs),1===f.length){const[w,I]=f[0];null==g.mask&&(g.mask=I),b=pn(h.call(w,g)),S=pn(h.computeMask(w,I)),m=[w],y=[I]}else m=f.map(w=>w[0]),y=f.map(w=>w[1]),null==g.mask&&(g.mask=y),b=pn(h.call(m,g)),S=pn(h.computeMask(m,y));if(h.activityRegularizer)throw new Ct("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<p.length;++w)s[p[w].id]=[b[w],S[w]]}}}const o=[],i=[],a=[];for(const l of this.outputs){Tr(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=s[l.id];a.push(u.shape),o.push(u),i.push(c)}return[o,i,a]}buildNodeConversionMap(t){const e={};let s;for(const r of this.layers){s=r instanceof lo?1:0;for(let o=0;o<r.inboundNodes.length;o++){const i=lo.nodeKey(r,o);this.containerNodes.has(i)&&(e[i]=s,s+=1)}}return e}getLayer(t,e){if(null!=e)return this.findLayer(e);if(null==t)throw new K("Provide either a layer name or layer index");if("number"==typeof t)return this.findLayer(t);for(const s of this.layers)if(s.name===t)return s;throw new K(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new K(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return q(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const r=lo.nodeKey(e,s);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const a=i.getClassName(),l=i.getConfig(),u=[];for(let h=0;h<i.inboundNodes.length;h++){const d=i.inboundNodes[h],p=lo.nodeKey(i,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const g=[];for(let m=0;m<d.inboundLayers.length;m++){const y=d.inboundLayers[m],S=d.tensorIndices[m];let I=e[lo.nodeKey(y,d.nodeIndices[m])];null==I&&(I=0),g.push([y.name,I,S,f])}u.push(g)}}}const c={};c.name=i.name,c.className=a,c.config=l,c.inboundNodes=u,s.push(c)}t.layers=s;const r=[];for(let i=0;i<this.inputLayers.length;i++){const a=this.inputLayers[i],u=lo.nodeKey(a,this.inputLayersNodeIndices[i]);if(!this.containerNodes.has(u))continue;let c=e[u];null==c&&(c=0),r.push([a.name,c,this.inputLayersTensorIndices[i]])}t.inputLayers=r;const o=[];for(let i=0;i<this.outputLayers.length;i++){const a=this.outputLayers[i],u=lo.nodeKey(a,this.outputLayersNodeIndices[i]);if(!this.containerNodes.has(u))continue;let c=e[u];null==c&&(c=0),o.push([a.name,c,this.outputLayersTensorIndices[i]])}return t.outputLayers=o,t}static fromConfig(t,e,s={},r=!1){const o={},i={};function a(m,y){m.name in i?i[m.name].push(y):i[m.name]=[y]}function l(m,y){const b=[];let S;for(const w of y){const I=w[0],_=w[1],R=w[2];if(S=null==w[3]?{}:w[3],!(I in o))return void a(m,y);const F=o[I];if(F.inboundNodes.length<=_)return void a(m,y);b.push(F.inboundNodes[_].outputTensors[R])}b.length>0&&m.apply(qs(b),S)}function u(m){const y=m.name,b=fi(m,null!=e.customObjects?e.customObjects:{});b.setFastWeightInitDuringBuild(r),o[y]=b,m.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new K(`Corrupted configuration, expected array for nodeData: ${w}`);a(b,w)})}const c=e.name,h=e.layers;for(const m of h)u(m);for(;!a7(i);)for(const m of h){const y=o[m.name];if(y.name in i){const b=i[y.name];delete i[y.name];for(const S of b)l(y,S)}}const d=[],p=[],f=e.inputLayers;for(const m of f){const y=m[0],b=m[1],S=m[2];Tr(y in o),d.push(o[y].inboundNodes[b].outputTensors[S])}const g=e.outputLayers;for(const m of g){const y=m[0],b=m[1],S=m[2];Tr(y in o),p.push(o[y].inboundNodes[b].outputTensors[S])}return new t({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new K("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){q(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function Px(n,t){return function Lx(n,t,e){const s=t.length;if(null==n||Array.isArray(n)&&0===n.length)return t.map(r=>null);if(1===s)return Array.isArray(n)&&1===n.length?n:"object"==typeof n&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}if("object"==typeof n&&Object.keys(n).length>0&&"object"==typeof n[Object.keys(n)[0]]){const r=[];return t.forEach(o=>{r.push(o in n?n[o]:null)}),r}throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}(n,t,"classWeight")}function Mx(n,t,e,s){return H2.apply(this,arguments)}function H2(){return(H2=(0,ce.Z)(function*(n,t,e,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=e){const r=q(()=>{if(1===n.shape.length)return No(n);if(2===n.shape.length){if(n.shape[1]>1)return Vi(n,1);if(1===n.shape[1])return H(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(yield r.data());ht(r);const i=[];return o.forEach(a=>{if(null==e[a])throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(e[a])}),jn(i,"float32")}return null})).apply(this,arguments)}function k8(n,t){return G(n,t)}function zx(n,t){let e,s;e=t.xs,s=t.ys,E(null!=e&&null!=s,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const o=Bx("input",n.inputNames,e),i=Bx("output",n.outputNames,s),a=o[0].shape[0];E(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),E(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<o.length;l++)E(o[l].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let l=0;l<i.length;l++)E(i[l].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:o,ys:i}}function Bx(n,t,e){if(e instanceof Mt)return[e];if(Array.isArray(e))return E(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const r of t){if(null==e[r])throw new K(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(e[r])}return s}}function j2(){return(j2=(0,ce.Z)(function*(n,t,e){const s=null!=e.batchesPerEpoch;if(E(null!=n.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),E(null!=e,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),E(null!=e.epochs&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),E(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),E(null==e.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=null!=e.validationData;let o,i;if(r)if(Vx(e.validationData))E(null==e.validationBatches||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const m=function _8(n){if(3===n.length)throw new Ct("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}(e.validationData);o=m.xs,i=m.ys}const a=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map(m=>"val_"+m)):l.slice();const c=Nx(e.callbacks,e.yieldEvery),h=null==e.verbose?1:e.verbose,{callbackList:d,history:p}=kx(c,h,e.epochs,null,null,function A8(n,t){let e=null;return null!=t.batchesPerEpoch?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}(t,e),null,r,u);d.setModel(n),n.history=p,yield d.onTrainBegin(),n.stopTraining_=!1;let f=null==e.initialEpoch?0:e.initialEpoch,g=yield t.iterator();for(;f<e.epochs;){const m={};yield d.onEpochBegin(f);let y=0,b=0;for(s||(g=yield t.iterator());!s||y<e.batchesPerEpoch;){const S=yield g.next();if(s&&S.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=S.value){const{xs:w,ys:I}=zx(n,S.value),_={};_.batch=b,_.size=w[0].shape[0],yield d.onBatchBegin(b,_);const R=[];if(null!=e.classWeight){const L=Px(e.classWeight,n.outputNames);for(let j=0;j<L.length;++j)R.push(yield Mx(I[j],null,L[j]))}const F=w.concat(I).concat(R),O=a(F);ht(F);for(let L=0;L<l.length;++L){const Q=O[L];_[l[L]]=Q,ns(Q)}yield d.onBatchEnd(b,_),Cx(_),b++,y++}if(s?y>=e.batchesPerEpoch:S.done){if(r){let w;w=Vx(e.validationData)?pn(yield n.evaluateDataset(e.validationData,{batches:e.validationBatches})):pn(n.evaluate(o,i,{batchSize:null==e.validationBatchSize?32:e.validationBatchSize,verbose:0}));for(let I=0;I<n.metricsNames.length;++I)m[`val_${n.metricsNames[I]}`]=w[I]}break}if(n.stopTraining_)break}if(yield d.onEpochEnd(f,m),f++,n.stopTraining_)break}return yield d.onTrainEnd(),yield n.history.syncData(),n.history}finally{n.isTraining=!1}})).apply(this,arguments)}function Vx(n){return"function"==typeof n.iterator}function K2(){return(K2=(0,ce.Z)(function*(n,t,e){const s=null!=(e=e||{}).batches,r=n.testFunction;let o=[];if(e.verbose>0)throw new Ct("Verbose mode is not implemented yet.");E(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const i=function $8(n){return"function"==typeof n.next}(t)?t:yield t.iterator();let a=0,l=0;for(;!s||l<e.batches;){const u=yield i.next();if(o=q(()=>{if(u.value){const{xs:c,ys:h}=zx(n,u.value),d=c.concat(h),p=q(()=>r(d));if(ht(d),0===l)for(let g=0;g<p.length;++g)o.push(Ze(0));const f=d[0].shape[0];for(let g=0;g<p.length;++g){const m=p[g],y=o[g];o[g]=q(()=>ge(o[g],G(f,m))),l>0&&ht(y)}ht(p),a+=f,++l}return o}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<o.length;++u){const c=o[u];o[u]=Me(o[u],a),ht(c)}return qs(o)})).apply(this,arguments)}function q2(n){E(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function $h(n,t,e){return null==n?[null]:Array.isArray(n)?n.map(s=>Ha(s,t,e-t)):Ha(n,t,e-t)}function X2(n,t){return q(()=>null==n?null:Array.isArray(n)?n.map(e=>X2(e,t)):lx(n,"int32"===t.dtype?t:Te(t,"int32")))}function Z2(n,t){const e=[];let s=0,r=null;for(;s<n;)r=s+t,r>=n&&(r=n),e.push([s,r]),s=r;return e}function Wx(n){const t=[];n instanceof Mt&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(1===s.rank)t.push(Nh(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function uo(n,t){if(null==n)return;const e=[];if(t instanceof Mt)e.push(t.id);else if(Array.isArray(t))t.forEach(r=>e.push(r.id));else if(null!=t)for(const r in t)e.push(t[r].id);const s=[];if(n instanceof Mt)-1===e.indexOf(n.id)&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{-1===e.indexOf(r.id)&&s.push(r)});else if(null!=n)for(const r in n){const o=n[r];-1===e.indexOf(o.id)&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}function Y2(n){return Array.isArray(n)}function Ux(n){return!function D8(n){return n instanceof Mt}(n)&&!Y2(n)}function Gx(n,t,e,s=!0,r=""){if(null==t||0===t.length){if(null!=n){let i=!1;if(Y2(n)&&n.length>0)i=!0;else if(Ux(n)){for(const a in n)if(n.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new K(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(null==n)return t.map(i=>null);let o;if(Ux(n)){o=[];for(const i of t){if(null==n[i])throw new K(`No data provided for "${i}". Need data for each key in: ${t}`);o.push(n[i])}}else if(Y2(n)){if(n.length!==t.length)throw new K(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(t.length>1)throw new K(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=Wx(o),null!=e)for(let i=0;i<t.length;++i){if(null==e[i])continue;const a=o[i];if(a.shape.length!==e[i].length)throw new K(`Error when checking ${r}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<e[i].length;++l){if(0===l&&!s)continue;const c=e[i][l];if(null!=c&&c>=0&&a.shape[l]!==c)throw new K(`${r} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return o}function Hx(n,t,e,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==t.length)throw new K(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(t.length>1)throw new K(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(null!=e)for(let i=0;i<t.length;++i){if(null==e[i])continue;const a=o[i];if(a.shape.length!==e[i].length)throw new K(`Error when checking ${r}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<e[i].length;++l){if(0===l&&!s)continue;const c=e[i][l];if(null!=c&&c!==a.shape[l])throw new K(`Error when checking ${r}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}let vu=(()=>{class n extends lo{constructor(e){super(e),this.isTraining=!1}summary(e,s,r=console.log){if(!this.built)throw new K("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function v8(n,t,e,s=console.log){const r=function S8(n){let t=!0;const e=[],s=[];for(const r in n.nodesByDepth)e.push(n.nodesByDepth[r]);for(const r of e){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of n.layers){let o=!1;for(const i of r.inboundNodes)if(-1!==s.indexOf(i)){if(o){t=!1;break}o=!0}if(!t)break}return t}(n),o=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(r?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(c=>Math.floor(t*c))),!r){o.push("Receives inputs"),i=[];for(const c in n.nodesByDepth)i.push(...n.nodesByDepth[c])}s("_".repeat(t)),kf(o,e,s),s("=".repeat(t));const a=n.layers;for(let c=0;c<a.length;++c)r?I8(a[c],e,s):C8(a[c],e,i,s),s((c===a.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const l=function w8(n){let t;return t=ff(null!=n.collectedTrainableWeights?n.collectedTrainableWeights:n.trainableWeights),t}(n),u=ff(n.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}(this,e,s,r)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function x8(n){const t={Adagrad:()=>Ma.adagrad(.01),Adadelta:()=>Ma.adadelta(1,.95,ss()),Adam:()=>Ma.adam(.001,.9,.999,ss()),Adamax:()=>Ma.adamax(.002,.9,.999,ss(),0),RMSProp:()=>Ma.rmsprop(.001,.9,0,ss()),SGD:()=>Ma.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new K(`Unknown Optimizer ${n}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Jo))throw new K("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let s=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new K(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);s=e.loss.map(l=>B2(l))}else{const a=B2(e.loss);this.outputs.forEach(l=>{s.push(a)})}else{e.loss=e.loss;for(const a in e.loss)if(-1===this.outputNames.indexOf(a))throw new K(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)null==e.loss[a]&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),s.push(B2(e.loss[a]))}this.lossFunctions=s,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const l=this.internalOutputShapes[a];this.feedOutputNames.push(this.outputNames[a]),this.feedOutputShapes.push(l),this.feedLossFns.push(this.lossFunctions[a])}const r=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ga("loss",()=>{for(let a=0;a<this.outputs.length;++a)-1===r.indexOf(a)&&this.outputs.length>1&&(this.metricsTensors.push([this.lossFunctions[a],a]),this.metricsNames.push(this.outputNames[a]+"_loss"))});const o=function L8(n,t){if(null==n||Array.isArray(n)&&0===n.length)return t.map(s=>[]);let e;if("string"==typeof n||"function"==typeof n)e=[n];else{if(!Array.isArray(n)&&"object"!=typeof n)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);e=n}if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const r of t){let o=e.hasOwnProperty(r)?e[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}(e.metrics,this.outputNames),i=(a,l,u)=>{this.outputNames.length>1&&(l=this.outputNames[a]+"_"+l),this.metricsNames.push(l),this.metricsTensors.push([u,a])};Ga("metric",()=>{for(let a=0;a<this.outputs.length;++a)-1===r.indexOf(a)&&(c=>{let d,p,f;for(const g of c){if("string"==typeof g&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(g)){const y=this.internalOutputShapes[a];let b;1===y[y.length-1]||this.lossFunctions[a]===Sf?-1!==["accuracy","acc"].indexOf(g)?p=_x:-1!==["crossentropy","ce"].indexOf(g)&&(p=u8):this.lossFunctions[a]===wf?-1!==["accuracy","acc"].indexOf(g)?p=c8:-1!==["crossentropy","ce"].indexOf(g)&&(p=Rx):-1!==["accuracy","acc"].indexOf(g)?p=Ex:-1!==["crossentropy","ce"].indexOf(g)&&(p=$x),-1!==["accuracy","acc"].indexOf(g)?b="acc":-1!==["crossentropy","ce"].indexOf(g)&&(b="ce"),f=p,d=""+b}else f=b8(g),d=""+Nf(g);let m;Ga(d,()=>{m=f}),i(a,d,m)}})(o[a])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,s,r={}){const o=null==r.batchSize?32:r.batchSize;q2(o);const a=this.standardizeUserDataXY(e,s,!0,o);try{const l=a[0].concat(a[1]);return this.makeTestFunction(),qs(this.testLoop(this.testFunction,l,o,r.verbose,r.steps))}finally{uo(a[0],e),uo(a[1],s)}}evaluateDataset(e,s){var r=this;return(0,ce.Z)(function*(){return r.makeTestFunction(),function R8(n,t,e){return K2.apply(this,arguments)}(r,e,s)})()}checkNumSamples(e,s,r,o="steps"){let i;if(null!=r){if(i=null,null!=s)throw new K(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${s}`)}else{if(null==e)throw new K(`Either the input data should have a defined shape, or ${o} shoud be specified.`);i=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return i}execute(e,s){if(Array.isArray(s)&&0===s.length)throw new K("`outputs` is an empty Array, which is not allowed.");const r=Array.isArray(s),i=this.retrieveSymbolicTensors(r?s:[s]),a=new Yi;if(e instanceof Mt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new K(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)a.add(this.inputs[u],e[u])}else for(const u of this.inputs){const c=e[u.name];if(null==c)throw new K(`No value is provided for the model's input ${u.name}`);a.add(u,c)}const l=_h(i,a);return r?l:l[0]}retrieveSymbolicTensors(e){const s=Va(null,e.length);let r=e.length;for(const o of this.layers){const i=Array.isArray(o.output)?o.output:[o.output],a=i.map(l=>l.name);for(let l=0;l<e.length;++l){const u=a.indexOf(e[l]);if(-1!==u&&(s[l]=i[u],r--),0===r)break}if(0===r)break}if(r>0){const o=[];throw s.forEach((i,a)=>{null==i&&o.push(e[a])}),new K(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return s}predictLoop(e,s=32,r=!1){return q(()=>{const o=this.checkNumSamples(e);if(r)throw new Ct("Verbose predictLoop() is not implemented yet.");const i=Z2(o,s),a=this.outputs.map(l=>[]);for(let l=0;l<i.length;++l)q(()=>{const d=$h(e,i[l][0],i[l][1]),p=[];if(Array.isArray(d))for(let g=0;g<d.length;++g)p.push({key:this.inputs[g],value:d[g]});else p.push({key:this.inputs[0],value:d});const f=new Yi(p);return _h(this.outputs,f)}).forEach((c,h)=>a[h].push(c));return qs(a.map(l=>Fn(l,0)))})}predict(e,s={}){const r=Wx(e);Hx(r,this.inputNames,this.feedInputShapes,!1);try{const o=null==s.batchSize?32:s.batchSize;return q2(o),this.predictLoop(r,o)}finally{uo(r,e)}}predictOnBatch(e){Hx(e,this.inputNames,this.feedInputShapes,!0);const s=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,s)}standardizeUserDataXY(e,s,r=!0,o){if(null==this.optimizer_)throw new Mr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let a=0;a<this.feedOutputShapes.length;++a){const l=this.feedOutputShapes[a];i.push(this.feedLossFns[a]===wf?l.slice(0,l.length-1).concat([1]):l)}if(function F8(n,t,e){const s=qi(n.map(o=>o.shape[0]));s.sort();const r=qi(t.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new K(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new K(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!At(s,r))throw new K(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Gx(e,this.feedInputNames,this.feedInputShapes,!1,"input"),s=Gx(s,this.feedOutputNames,i,!1,"target")),function O8(n,t,e){const s=[vf,Sf,Ah];for(let r=0;r<n.length;++r){const o=n[r],i=t[r],a=e[r];if(null!=i){if(i===Ah&&1===o.shape[o.shape.length-1])throw new K(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const l=o.shape.slice(1),u=a.slice(1);for(let c=0;c<l.length;++c){const d=u[c];if(null!=d&&l[c]!==d)throw new K(`A target Tensor with shape ${o.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(s,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=o&&o>0&&e[0].shape[0]%o!=0)throw new K(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,s]}standardizeUserData(e,s,r,o,i=!0,a){var l=this;return(0,ce.Z)(function*(){const[u,c]=l.standardizeUserDataXY(e,s,i,a);if(null!=r)throw new Error("sample weight is not supported yet.");let h=null;if(null!=o){const d=Px(o,l.outputNames);h=[];for(let p=0;p<d.length;++p)h.push(yield Mx(c[p],null,d[p]))}return[u,c,h]})()}testLoop(e,s,r,o=0,i){return q(()=>{const a=this.checkNumSamples(s,r,i,"steps"),l=[];if(o>0)throw new Ct("Verbose mode is not implemented yet.");if(null!=i)throw new Ct("steps mode in testLoop() is not implemented yet");{const u=Z2(a,r),c=jn(ro(0,a));for(let h=0;h<u.length;++h){const d=u[h][0],p=u[h][1],f=Ha(c,d,p-d),g=X2(s,f),m=e(g);if(0===h)for(let y=0;y<m.length;++y)l.push(Ze(0));for(let y=0;y<m.length;++y)l[y]=ge(l[y],G(p-d,m[y]))}for(let h=0;h<l.length;++h)l[h]=Me(l[h],a)}return l})}getDedupedMetricsNames(){const e=this.metricsNames,s=[];for(let r=0;r<e.length;++r){const o=e[r];let i=o;Yb(e,o)>1&&(i+=`_${Yb(e.slice(0,r),o)}`),s.push(i)}return s}makeTrainFunction(){return e=>{const s=[],r=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],u=this.collectedTrainableWeights.map(d=>d.read());return[this.optimizer_.minimize(()=>{const d=[];for(let m=0;m<this.inputs.length;++m)d.push({key:this.inputs[m],value:r[m]});const p=new Yi(d),f=_h(this.outputs,p,{training:!0});let g;for(let m=0;m<this.lossFunctions.length;++m){let b=(0,this.lossFunctions[m])(o[m],f[m]);null!=i[m]&&(b=k8(b,i[m]));const S=Ln(b);s.push(S),g=0===m?b:ge(g,b)}for(let m=0;m<this.metricsTensors.length;++m){let y;if(this.outputs.length>1&&m<this.outputs.length)y=s[m];else{const S=this.metricsTensors[m][1];y=Ln((0,this.metricsTensors[m][0])(o[S],f[S]))}ns(y),a.push(y)}return g=Ln(g),this.calculateLosses().forEach(m=>{g=ge(g,m)}),g},!0,u)].concat(a)}}makeTestFunction(){this.testFunction=e=>q(()=>{const s=[];let r;const o=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let c=0;c<this.inputs.length;++c)a.push({key:this.inputs[c],value:o[c]});const l=new Yi(a),u=_h(this.outputs,l);for(let c=0;c<this.lossFunctions.length;++c){const d=Ln((0,this.lossFunctions[c])(i[c],u[c]));r=0===c?d:ge(r,d),s.push(r)}for(let c=0;c<this.metricsTensors.length;++c){const d=this.metricsTensors[c][1],p=Ln((0,this.metricsTensors[c][0])(i[d],u[d]));s.push(p)}return s})}fit(e,s,r={}){var o=this;return(0,ce.Z)(function*(){if(o.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let i,a,l,u,c,h,d,p,f;o.isTraining=!0;try{const g=null==r.batchSize?32:r.batchSize;q2(g);const m=!1,y=yield o.standardizeUserData(e,s,r.sampleWeight,r.classWeight,m,g);i=y[0],a=y[1],f=y[2];let S,b=!1;if(null!=r.validationData&&r.validationData.length>0){if(b=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Ct("validationData including sample weights is not supported yet."):new K(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);c=r.validationData[0],h=r.validationData[1];const j=!0,Q=yield o.standardizeUserData(c,h,null,null,j,g);d=Q[0],p=Q[1],S=d.concat(p)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){b=!0;const j=Math.floor(i[0].shape[0]*(1-r.validationSplit)),Q=i[0].shape[0];d=$h(i,j,Q),l=i,i=$h(i,0,j),p=$h(a,j,Q),u=a,a=$h(a,0,j),S=d.concat(p)}else null!=r.validationSteps&&(b=!0);const w=i.concat(a).concat(f);o.checkTrainableWeightsConsistency();const I=o.makeTrainFunction(),_=o.getDedupedMetricsNames();let R,F;b?(o.makeTestFunction(),R=o.testFunction,F=_.slice().concat(_.map(j=>"val_"+j))):(R=null,S=[],F=_.slice());const O=Nx(r.callbacks,r.yieldEvery);return yield o.fitLoop(I,w,_,g,r.epochs,r.verbose,O,R,S,r.shuffle,F,r.initialEpoch,null,null)}finally{o.isTraining=!1,uo(i,e),uo(a,s),uo(l,e),uo(u,s),uo(d,c),uo(p,h),null!=f&&ht(f)}})()}fitLoop(e,s,r,o,i,a,l,u,c,h,d,p,f,g){var m=this;return(0,ce.Z)(function*(){null==o&&(o=32),null==i&&(i=1),null==h&&(h=!0),null==p&&(p=0);let y=!1;if(null!=u&&null!=c&&(y=!0),null!=g&&(y=!0,null==f))throw new K("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const b=m.checkNumSamples(s,o,f,"steps_per_epoch");let S;null!=b&&(S=ro(0,b)),null==a&&(a=1);const{callbackList:w,history:I}=kx(l,a,i,p,b,f,o,y,d);w.setModel(m),m.history=I,yield w.onTrainBegin(),m.stopTraining_=!1;for(let _=p;_<i;++_){yield w.onEpochBegin(_);const R={};if(null!=f)throw new Ct("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new Ct("batch shuffling is not implemneted yet");h&&Dr(S);const F=jn(S),O=Z2(b,o);for(let L=0;L<O.length;++L){const j={};if(yield w.onBatchBegin(L,j),q(()=>{const Q=O[L][0],te=O[L][1],se=Ha(F,Q,te-Q);j.batch=L,j.size=te-Q;const oe=X2(s,se),ae=e(oe);for(let ue=0;ue<r.length;++ue){const de=ae[ue];j[r[ue]]=de,ns(de)}if(L===O.length-1&&y){const ue=m.testLoop(u,c,o);for(let re=0;re<r.length;++re){const de=r[re],ve=ue[re];ns(ve),R["val_"+de]=ve}}}),yield w.onBatchEnd(L,j),Cx(j),m.stopTraining_)break}F.dispose()}if(yield w.onEpochEnd(_,R),m.stopTraining_)break}return yield w.onTrainEnd(),yield m.history.syncData(),m.history})()}fitDataset(e,s){var r=this;return(0,ce.Z)(function*(){return function E8(n,t,e){return j2.apply(this,arguments)}(r,e,s)})()}trainOnBatch(e,s){var r=this;return(0,ce.Z)(function*(){const o=yield r.standardizeUserData(e,s),i=o[0],a=o[1],u=r.makeTrainFunction()(i.concat(a)),c=[];for(const h of u){const d=yield h.data();c.push(d[0])}return ht(u),uo(o[0],e),uo(o[1],s),qs(c)})()}getNamedWeights(e){const s=[],r=null!=e&&e.trainableOnly,o=r?this.trainableWeights:this.weights,i=this.getWeights(r);for(let a=0;a<o.length;++a)r&&!o[a].trainable||s.push({name:o[a].originalName,tensor:i[a]});return s}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const s=Xd().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=s-Xd().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=pi(this.loss);else if(Array.isArray(this.loss)){for(const s of this.loss)if("string"!=typeof s)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(s=>pi(s))}else{const s=Object.keys(this.loss);e={};const r=this.loss;for(const o of s){if("string"!=typeof r[o])throw new Error("Serialization of non-string loss is not supported.");e[o]=pi(r[o])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[pi(Nf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>pi(Nf(e)));{const e={};for(const s in this.metrics)e[s]=pi(Nf(this.metrics[s]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const r=fi(W2(e.optimizer_config));let o,i;if("string"==typeof e.loss)o=Wa(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(a=>Wa(a));else if(null!=e.loss){o={};for(const a in e.loss)o[a]=Wa(e.loss[a])}if(Array.isArray(e.metrics))i=e.metrics.map(a=>Wa(a));else if(null!=e.metrics){i={};for(const a in e.metrics)i[a]=Wa(e.metrics[a])}this.compile({loss:o,metrics:i,optimizer:r})}save(e,s){var r=this;return(0,ce.Z)(function*(){if("string"==typeof e){const h=W3(e);if(0===h.length)throw new K(`Cannot find any save handlers for URL '${e}'`);if(h.length>1)throw new K(`Found more than one (${h.length}) save handlers for URL '${e}'`);e=h[0]}if(null==e.save)throw new K("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const o=yield Rm(r.getNamedWeights(s)),u={modelTopology:r.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v4.11.0",convertedBy:null};if(null!=s&&s.includeOptimizer&&null!=r.optimizer){u.trainingConfig=r.getTrainingConfig();const h="optimizer",{data:d,specs:p}=yield Rm(yield r.optimizer.getWeights(),h);o.specs.push(...p),o.data=P3([o.data,d])}return null!=r.userDefinedMetadata&&(Fx(r.userDefinedMetadata,r.name,!0),u.userDefinedMetadata=r.userDefinedMetadata),u.weightData=o.data,u.weightSpecs=o.specs,e.save(u)})()}setUserDefinedMetadata(e){Fx(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}return n.className="Model",n})();Se(vu),Se((()=>{class n extends vu{}return n.className="Functional",n})()),Se((()=>{class n extends vu{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:uf("sequential_"),null!=e.layers)for(const s of e.layers)this.add(s)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(r=>r<0))throw new K(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const s=e instanceof n||e instanceof vu;let r;if(s){if(r=e,1!==r.outputs.length)throw new K("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==r.inputs.length)throw new K("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new K("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const o=function z7(n){if(null==n.batchShape&&null==n.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=n.batchShape&&null!=n.shape)throw new K("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;null!=n.shape&&null==t&&(t=[null].concat(n.shape));let e=n.dtype;return null==e&&(e="float32"),new gf({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(s)this.outputs=r.outputs,this.inputs=r.inputs;else{if(1!==e.inboundNodes.length)throw new K(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new K("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=vx(this.outputs[0])}this.inboundNodes=[],new mf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Va(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{const o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,s){return null==this.model&&this.build(),this.model.call(e,s)}build(e){if(en(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new vu({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,s,r=console.log){this.built||this.build(),super.summary(e,s,r)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,s,r={}){if(!this.built)throw new Mr("The model needs to be compiled before being used.");return this.model.evaluate(e,s,r)}evaluateDataset(e,s){var r=this;return(0,ce.Z)(function*(){if(!r.built)throw new Mr("The model needs to be compiled before being used.");return r.model.evaluateDataset(e,s)})()}predict(e,s={}){return null==this.model&&this.build(),this.model.predict(e,s)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}fit(e,s,r={}){var o=this;return(0,ce.Z)(function*(){if(!o.built)throw new Mr("The model needs to be compiled before being used.");return o.model.fit(e,s,r)})()}fitDataset(e,s){var r=this;return(0,ce.Z)(function*(){if(!r.built)throw new Mr("The model needs to be compiled before being used.");return r.model.fitDataset(e,s)})()}trainOnBatch(e,s){var r=this;return(0,ce.Z)(function*(){return r.model.trainOnBatch(e,s)})()}static fromConfig(e,s,r={},o=!1){let i,a={};if(s instanceof Array){if(null==s[0].className||"Merge"===s[0].className)throw new K("Legacy serialization format not supported yet.");i=s}else E(null!=s.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=s.layers,delete s.layers,a=s;const l=new e(a);if(!(l instanceof n))throw new Ct(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(const u of i){const h=fi(u,void 0,o);o&&h.setFastWeightInitDuringBuild(!0),l.add(h)}return l}set stopTraining(e){if(null==this.model)throw new K("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new K("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const s of this.layers){const r={};r.className=s.getClassName(),r.config=s.getConfig(),e.push(r)}return{name:this.name,layers:e}}}return n.className="Sequential",n})());class Xs extends ka{getConfig(){return{}}}Se((()=>{class n extends Xs{apply(e,s=1){return function C7(n,t=1){if(1!==t)throw new Ct(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return ru(n)}(e,s)}}return n.className="elu",n})()),Se((()=>{class n extends Xs{apply(e){return xp(e)}}return n.className="selu",n})()),Se((()=>{class n extends Xs{apply(e){return eo(e)}}return n.className="relu",n})()),Se((()=>{class n extends Xs{apply(e){return q(()=>ji(6,eo(e)))}}return n.className="relu6",n})()),Se((()=>{class n extends Xs{apply(e){return e}}return n.className="linear",n})()),Se((()=>{class n extends Xs{apply(e){return sr(e)}}return n.className="sigmoid",n})()),Se((()=>{class n extends Xs{apply(e){return function k7(n){return q(()=>{const t=ge(.5,G(.2,n));return Ls(t,0,1)})}(e)}}return n.className="hardSigmoid",n})()),Se((()=>{class n extends Xs{apply(e){return Oa(e)}}return n.className="softplus",n})()),Se((()=>{class n extends Xs{apply(e){return function N7(n){return q(()=>Me(n,ge(Yn(n),1)))}(e)}}return n.className="softsign",n})()),Se((()=>{class n extends Xs{apply(e){return Ra(e)}}return n.className="tanh",n})());let jx=(()=>{class n extends Xs{apply(e,s=-1){return mh(e,s)}}return n.className="softmax",n})();function Qi(n){return n.getClassName()}function t0(n,t={}){return Ih(n,Sr.getMap().classNameMap,t,"activation")}function ea(n){if(null==n){return t0({className:"linear",config:{}})}if("string"==typeof n){const t={};return t.className=n,t.config={},t0(t)}return n instanceof Xs?n:t0(n)}Se(jx),Se((()=>{class n extends Xs{apply(e,s=-1){return cp(e,s)}}return n.className="logSoftmax",n})()),Se((()=>{class n extends Xs{apply(e,s=1){return q(()=>G(sr(G(e,s)),e))}}return n.className="swish",n})()),Se((()=>{class n extends Xs{apply(e){return q(()=>G(e,Ra(Oa(e))))}}return n.className="mish",n})());class Kx extends ka{}Se((()=>{class n extends Kx{constructor(e){super(),function n0(n){if(null!=n&&"object"!=typeof n)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return q(()=>{let s=Qn([1]);return this.hasL1&&(s=ge(s,He(G(this.l1,Yn(e))))),this.hasL2&&(s=ge(s,He(G(this.l2,kh(e))))),H(s,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,s){return new e({l1:s.l1,l2:s.l2})}}return n.className="L1L2",n})());const qx={l1l2:"L1L2"};function mn(n){return k2(n)}function Xx(n,t={}){return Ih(n,Sr.getMap().classNameMap,t,"regularizer")}function An(n){return null==n?null:"string"==typeof n?Xx({className:n in qx?qx[n]:n,config:{}}):n instanceof Kx?n:Xx(n)}function wu(n,t,e){if("number"==typeof n)return Va(n,t);if(n.length!==t)throw new K(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const r=n[s];if(!b7(r))throw new K(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function co(n,t,e,s,r=1){if(null==n)return n;let i;return i="same"===e?n:n-(t+(t-1)*(r-1))+1,Math.floor((i+s-1)/s)}function Mo(n,t,e,s){if(null==n)return null;if("valid"===s)n=n*t+Zi([e-t,0]);else{if("same"!==s)throw new K(`Unsupport padding mode: ${s}.`);n*=t}return n}function r0(n,t){return q(()=>(Kn(t),"channelsFirst"===t?Gt(n,[0,2,3,1]):n))}function Zx(n,t){return q(()=>(Kn(t),"channelsFirst"===t?Gt(n,[0,2,3,4,1]):n))}function o0(n,t,e,s=[1,1],r="valid",o,i,a=null){return q(()=>{if(null==o&&(o="channelsLast"),Kn(o),3!==n.rank&&4!==n.rank)throw new K(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(3!==t.rank&&4!==t.rank)throw new K(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=r0(n,o);if("causal"===r)throw new Ct("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=d4({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:a}),"channelsFirst"===o&&(l=Gt(l,[0,3,1,2])),l})}Se((()=>{class n extends zt{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,s){e=dt(e);let r=eo(e);return null!=this.maxValue&&(r=Ls(r,0,this.maxValue)),r}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ReLU",n})()),Se((()=>{class n extends zt{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,s){const r=dt(e);return oh(r,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},s=super.getConfig();return Object.assign(e,s),e}}return n.className="LeakyReLU",n})()),Se((()=>{class n extends zt{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=En(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=An(e.alphaRegularizer),this.alphaConstraint=is(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new K(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const s=(e=en(e)).slice(1);if(null!=this.sharedAxes)for(const o of this.sharedAxes)s[o-1]=1;this.alpha=this.addWeight("alpha",s,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const r={};if(null!=this.sharedAxes)for(let o=1;o<e.length;++o)r[o]=e[o];this.inputSpec=[new rs({ndim:e.length,axes:r})],this.built=!0}call(e,s){return e=dt(e),dh(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Pn(this.alphaInitializer),alphaRegularizer:mn(this.alphaRegularizer),alphaConstraint:os(this.alphaConstraint),sharedAxes:this.sharedAxes},s=super.getConfig();return Object.assign(e,s),e}}return n.className="PReLU",n})()),Se((()=>{class n extends zt{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Ct(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,s){const r=dt(e);return ru(r)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ELU",n})()),Se((()=>{class n extends zt{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,s){const r=dt(e);return G(r,Te(Ps(r,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ThresholdedReLU",n})()),Se((()=>{class n extends zt{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new jx).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,s){return q(()=>{let r=dt(e);const o=s.mask;if(null!=o){const i=G(Pe(Gs(r.shape),Te(o,r.dtype)),Ze(-1e9));r=ge(r,i)}return this.axis instanceof Array?this.axis.length>1?_s(Pe(r,ah(r,this.axis,!0))):this.softmax(r,this.axis[0]):this.softmax(r,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Softmax",n})());class Tf extends zt{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Tf.verifyArgs(e),this.rank=t,gs(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Ct(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=wu(e.kernelSize,t,"kernelSize"),this.strides=wu(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,_r(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Kn(this.dataFormat),this.activation=ea(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=En(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=is(e.biasConstraint),this.biasRegularizer=An(e.biasRegularizer),this.activityRegularizer=An(e.activityRegularizer),this.dilationRate=wu(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new K(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new K(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new K(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(Tr("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!_2(t.kernelSize,"number",1,3))throw new K(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Qi(this.activation),useBias:this.useBias,biasInitializer:Pn(this.biasInitializer),biasRegularizer:mn(this.biasRegularizer),activityRegularizer:mn(this.activityRegularizer),biasConstraint:os(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Su extends Tf{constructor(t,e){super(t,e),this.kernel=null,Su.verifyArgs(e),this.filters=e.filters,gs(this.filters,"filters"),this.kernelInitializer=En(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=is(e.kernelConstraint),this.kernelRegularizer=An(e.kernelRegularizer)}build(t){t=en(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new K(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return q(()=>{let s;t=dt(t);const r=null==this.bias?null:this.bias.read(),o=Qb(this.activation.getClassName());if(null!=o&&2===this.rank)s=o0(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(1===this.rank)s=function Yx(n,t,e,s=1,r="valid",o,i=1){return q(()=>{if(null==o&&(o="channelsLast"),Kn(o),3!==n.shape.length)throw new K(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(3!==t.shape.length)throw new K(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=e&&1!==e.shape.length)throw new K(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===o&&(n=Gt(n,[0,2,1])),"causal"===r)throw new Ct("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=rp(n,t,s,"same"===r?"same":"valid","NWC",i);return null!=e&&(a=ao(a,e)),a})}(t,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)s=o0(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Ct("convolutions greater than 3D are not implemented yet.");s=function Jx(n,t,e,s=[1,1,1],r="valid",o,i){return q(()=>{if(null==o&&(o="channelsLast"),Kn(o),4!==n.rank&&5!==n.rank)throw new K(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(4!==t.rank&&5!==t.rank)throw new K(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=Zx(n,o);if("causal"===r)throw new Ct("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=Gg(a,t,s,"same"===r?"same":"valid","NDHWC",i),null!=e&&(a=ao(a,e)),"channelsFirst"===o&&(a=Gt(a,[0,4,1,2,3])),a})}(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=en(t);const e=[],s="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let o=0;o<s.length;++o){const i=co(s[o],this.kernelSize[o],this.padding,this.strides[o],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[o]);e.push(i)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Pn(this.kernelInitializer),kernelRegularizer:mn(this.kernelRegularizer),kernelConstraint:os(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new K(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}let Qx=(()=>{class n extends Su{constructor(e){super(2,e),n.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!_2(e.kernelSize,"number",1,2))throw new K(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}return n.className="Conv2D",n})();Se(Qx);let ev=(()=>{class n extends Su{constructor(e){super(3,e),n.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new K(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}return n.className="Conv3D",n})();Se(ev),Se((()=>{class n extends Qx{constructor(e){if(super(e),this.inputSpec=[new rs({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new K(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=en(e)).length)throw new K("Input should have rank 4; Received input shape: "+JSON.stringify(e));const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s])throw new K("The channel dimension of the inputs should be defined. Found `None`.");const r=e[s],o=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new rs({ndim:4,axes:{[s]:r}})],this.built=!0}call(e,s){return q(()=>{let r=dt(e);if(4!==r.shape.length)throw new K(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const o=r.shape;let a,l;"channelsFirst"===this.dataFormat?(a=2,l=3):(a=1,l=2);const c=o[l],d=this.kernelSize[1],f=this.strides[1],y=[o[0],Mo(o[a],this.strides[0],this.kernelSize[0],this.padding),Mo(c,f,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=Gt(r,[0,2,3,1]));let b=op(r,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=Gt(b,[0,3,1,2])),null!=this.bias&&(b=ao(b,this.bias.read(),this.dataFormat)),null!=this.activation&&(b=this.activation.apply(b)),b})}computeOutputShape(e){const s=(e=en(e)).slice();let r,o,i;"channelsFirst"===this.dataFormat?(r=1,o=2,i=3):(r=3,o=1,i=2);const a=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],c=this.strides[1];return s[r]=this.filters,s[o]=Mo(s[o],u,a,this.padding),s[i]=Mo(s[i],c,l,this.padding),s}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}return n.className="Conv2DTranspose",n})()),Se((()=>{class n extends ev{constructor(e){if(super(e),this.inputSpec=[new rs({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new K(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=en(e)).length)throw new K("Input should have rank 5; Received input shape: "+JSON.stringify(e));const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s])throw new K("The channel dimension of the inputs should be defined. Found `None`.");const r=e[s],o=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new rs({ndim:5,axes:{[s]:r}})],this.built=!0}call(e,s){return q(()=>{let r=dt(e);if(5!==r.shape.length)throw new K(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const o=r.shape;let a,l,u;"channelsFirst"===this.dataFormat?(u=2,a=3,l=4):(u=1,a=2,l=3);const h=o[a],d=o[l],f=this.kernelSize[1],g=this.kernelSize[2],y=this.strides[1],b=this.strides[2],_=[o[0],Mo(o[u],this.strides[0],this.kernelSize[0],this.padding),Mo(h,y,f,this.padding),Mo(d,b,g,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=Gt(r,[0,2,3,4,1]));let R=Hg(r,this.kernel.read(),_,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(R=Gt(R,[0,4,1,2,3])),null!==this.bias&&(R=ao(R,this.bias.read(),this.dataFormat)),null!==this.activation&&(R=this.activation.apply(R)),R})}computeOutputShape(e){const s=(e=en(e)).slice();let r,o,i,a;"channelsFirst"===this.dataFormat?(r=1,o=2,i=3,a=4):(r=4,o=1,i=2,a=3);const l=this.kernelSize[0],u=this.kernelSize[1],c=this.kernelSize[2],h=this.strides[0],d=this.strides[1],p=this.strides[2];return s[r]=this.filters,s[o]=Mo(s[o],h,l,this.padding),s[i]=Mo(s[i],d,u,this.padding),s[a]=Mo(s[a],p,c,this.padding),s}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}return n.className="Conv3DTranspose",n})());let B8=(()=>{class n extends Su{constructor(e,s){if(super(e,s),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==s.filters)throw new K("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=s.kernelInitializer||null!=s.kernelRegularizer||null!=s.kernelConstraint)throw new K("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=s.padding&&"same"!==s.padding&&"valid"!==s.padding)throw new K(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(s.padding)}`);this.depthMultiplier=null==s.depthMultiplier?1:s.depthMultiplier,this.depthwiseInitializer=En(s.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=An(s.depthwiseRegularizer),this.depthwiseConstraint=is(s.depthwiseConstraint),this.pointwiseInitializer=En(s.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=An(s.pointwiseRegularizer),this.pointwiseConstraint=is(s.pointwiseConstraint)}build(e){if((e=en(e)).length<this.rank+2)throw new K(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s]||e[s]<0)throw new K(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[s])}`);const r=e[s],o=this.kernelSize.concat([r,this.depthMultiplier]),i=[];for(let l=0;l<this.rank;++l)i.push(1);i.push(r*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):null,this.inputSpec=[new rs({ndim:this.rank+2,axes:{[s]:r}})],this.built=!0}call(e,s){return q(()=>{let r;if(e=dt(e),1===this.rank)throw new Ct("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Gt(e,[0,2,3,1])),r=vp(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=ao(r,this.bias.read(),this.dataFormat)),null!=this.activation&&(r=this.activation.apply(r)),"channelsFirst"===this.dataFormat&&(r=Gt(r,[0,3,1,2])),r})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Pn(this.depthwiseInitializer),e.pointwiseInitializer=Pn(this.pointwiseInitializer),e.depthwiseRegularizer=mn(this.depthwiseRegularizer),e.pointwiseRegularizer=mn(this.pointwiseRegularizer),e.depthwiseConstraint=os(this.depthwiseConstraint),e.pointwiseConstraint=os(this.pointwiseConstraint),e}}return n.className="SeparableConv",n})();function tv(n,t,e,s){if(Array.isArray(n)){if(null!=t||null!=e)throw new K("When inputs is an array, neither initialState or constants should be provided");null!=s&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function r(o){return null==o||Array.isArray(o)?o:[o]}return{inputs:n,initialState:t=r(t),constants:e=r(e)}}function nv(n,t,e,s=!1,r,o,i=!1,a=!1){return q(()=>{const l=t.shape.length;if(l<3)throw new K(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(ro(2,l));if(t=Gt(t,u),null!=o)throw new Ct("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=Te(Te(r,"bool"),"float32")).rank===l-1&&(r=_n(r,-1)),r=Gt(r,u)),s&&(t=Nr(t,0),null!=r&&(r=Nr(r,0)));const c=[];let h,d=e;const p=t.shape[0],f=kr(t);let g,m;null!=r&&(g=kr(r));for(let y=0;y<p;++y){const b=f[y],S=q(()=>n(b,d));if(null==r)h=S[0],d=S[1];else{const w=q(()=>{const I=g[y],_=Pe(ir(I),I);return{output:ge(G(S[0],I),G(d[0],_)),newStates:d.map((O,L)=>ge(G(S[1][L],I),G(O,_)))}});h=w.output,d=w.newStates}a&&c.push(h)}return a&&(m=js(c,1)),[h,m,d]})}Se((()=>{class n extends B8{constructor(e){super(2,e)}}return n.className="SeparableConv2D",n})()),Se((()=>{class n extends Su{constructor(e){super(1,e),n.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!_2(e.kernelSize,"number",1,1))throw new K(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}return n.className="Conv1D",n})()),Se((()=>{class n extends zt{constructor(e){super(e),this.cropping="number"==typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,s){return q(()=>{if(e=dt(e),"channelsLast"===this.dataFormat){const r=hf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return hf(r,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const r=hf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return hf(r,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Cropping2D",n})()),Se((()=>{class n extends zt{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Kn(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function m7(n){Ua(h7,"InterpolationFormat",n)}(this.interpolation)}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]:[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,s){return q(()=>{let r=dt(e);const o=r.shape;if("channelsFirst"===this.dataFormat){r=Gt(r,[0,2,3,1]);const i=this.size[0]*o[2],a=this.size[1]*o[3],l="nearest"===this.interpolation?ms.resizeNearestNeighbor(r,[i,a]):ms.resizeBilinear(r,[i,a]);return Gt(l,[0,3,1,2])}{const i=this.size[0]*o[1],a=this.size[1]*o[2];return"nearest"===this.interpolation?ms.resizeNearestNeighbor(r,[i,a]):ms.resizeBilinear(r,[i,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},s=super.getConfig();return Object.assign(e,s),e}}return n.className="UpSampling2D",n})()),Se((()=>{class n extends Tf{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=En(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=is(e.depthwiseConstraint),this.depthwiseRegularizer=An(e.depthwiseRegularizer)}build(e){if((e=en(e)).length<4)throw new K(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const s="channelsFirst"===this.dataFormat?1:3;if(null==e[s]||e[s]<0)throw new K(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[s]}).`);const r=e[s];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,s){return q(()=>{let r=function V8(n,t,e=[1,1],s="valid",r,o){return q(()=>{null==r&&(r="channelsLast"),Kn(r);let i=r0(n,r);if(4!==n.rank)throw new K(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(4!==t.rank)throw new K(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=su(i,t,e,"same"===s?"same":"valid","NHWC",o),"channelsFirst"===r&&(i=Gt(i,[0,3,1,2])),i})}(e=dt(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=ao(r,this.bias.read(),this.dataFormat)),null!=this.activation&&(r=this.activation.apply(r)),r})}computeOutputShape(e){e=en(e);const r="channelsFirst"===this.dataFormat?e[3]:e[2],o="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,i=co("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),a=co(r,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],o,i,a]:[e[0],i,a,o]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Pn(this.depthwiseInitializer),e.depthwiseRegularizer=mn(this.depthwiseRegularizer),e.depthwiseConstraint=os(this.depthwiseRegularizer),e}}return n.className="DepthwiseConv2D",n})());let Rh=(()=>{class n extends zt{constructor(e){let s;if(super(e),null==e.cell)throw new K("cell property is missing for the constructor of RNN.");if(s=Array.isArray(e.cell)?new ov({cells:e.cell}):e.cell,null==s.stateSize)throw new K("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=s,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new rs({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?ro(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(s=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){D2(e)&&(e=e[0]);let s=this.cell.stateSize;Array.isArray(s)||(s=[s]);const r=s[0];let o;if(o=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){const i=[];for(const a of s)i.push([e[0],a]);return[o].concat(i)}return o}computeMask(e,s){return q(()=>{Array.isArray(s)&&(s=s[0]);const r=this.returnSequences?s:null;if(this.returnState){const o=this.states.map(i=>null);return[r].concat(o)}return r})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,s=[];for(let r=0;r<e;++r)s.push(null);return s}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Ct("Constants support is not implemented in RNN yet.");D2(e)&&(e=e[0]);const r=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new rs({shape:[r,null,...o]});const i=[e[0]].concat(e.slice(2));let a;if(this.cell.build(i),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!At(this.stateSpec.map(l=>l.shape[l.shape.length-1]),a))throw new K(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(l=>new rs({shape:[null,l]}));this.stateful&&this.resetStates()}resetStates(e,s=!1){q(()=>{if(!this.stateful)throw new Do("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape[0];if(null==r)throw new K("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(o=>Qn([r,o])):[Qn([r,this.cell.stateSize])];else if(null==e)ht(this.states_),null!=this.keptStates&&(ht(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Qn([r,o])):this.states_[0]=Qn([r,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new K(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===s?this.keptStates.push(this.states_.slice()):ht(this.states_);for(let o=0;o<this.states_.length;++o){const i=e[o],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,l=[r,a];if(!At(i.shape,l))throw new K(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>ns(o.clone()))})}apply(e,s){let r=null==s?null:s.initialState,o=null==s?null:s.constants;null==s&&(s={});const i=tv(e,r,o,this.numConstants);e=i.inputs,r=i.initialState,o=i.constants;let a=[],l=[];if(null!=r){s.initialState=r,a=a.concat(r),this.stateSpec=[];for(const c of r)this.stateSpec.push(new rs({shape:c.shape}));l=l.concat(this.stateSpec)}if(null!=o&&(s.constants=o,a=a.concat(o),this.numConstants=o.length),a[0]instanceof Po){const c=[e].concat(a),h=this.inputSpec.concat(l),d=this.inputSpec;this.inputSpec=h;const p=super.apply(c,s);return this.inputSpec=d,p}return super.apply(e,s)}call(e,s){return q(()=>{const r=null==s?null:s.mask,o=null==s?null:s.training;let i=null==s?null:s.initialState;e=dt(e),null==i&&(i=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==a)throw new K(`RNN Layer has ${a} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const l={training:o},c=nv((g,m)=>{const y=this.cell.call([g].concat(m),l);return[y[0],y.slice(1)]},e,i,this.goBackwards,r,null,this.unroll,this.returnSequences),h=c[0],d=c[1],p=c[2];this.stateful&&this.resetStates(p,o);const f=this.returnSequences?d:h;return this.returnState?[f].concat(p):f})}getInitialState(e){return q(()=>{let s=Qn(e.shape);return s=He(s,[1,2]),s=Nh(s),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?$2(s,[1,r]):s):this.cell.stateSize>1?[$2(s,[1,this.cell.stateSize])]:[s]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),s={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(s.numConstants=this.numConstants);const r=this.cell.getConfig();return this.getClassName()===n.className&&(s.cell={className:this.cell.getClassName(),config:r}),Object.assign(Object.assign(Object.assign({},r),e),s)}static fromConfig(e,s,r={}){const i=fi(s.cell,r);return new e(Object.assign(s,{cell:i}))}}return n.className="RNN",n})();Se(Rh);class _f extends zt{}let sv=(()=>{class n extends _f{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gs(this.units,"units"),this.activation=ea(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=En(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=En(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=En(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=An(e.kernelRegularizer),this.recurrentRegularizer=An(e.recurrentRegularizer),this.biasRegularizer=An(e.biasRegularizer),this.kernelConstraint=is(e.kernelConstraint),this.recurrentConstraint=is(e.recurrentConstraint),this.biasConstraint=is(e.biasConstraint),this.dropout=bu([1,Zi([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=bu([1,Zi([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=en(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,s){return q(()=>{if(2!==e.length)throw new K(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let r=e[1];e=e[0];const o=null!=s.training&&s.training;let i;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ta({ones:()=>ir(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ta({ones:()=>ir(r),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,l=this.recurrentDropoutMask;i=Oo(null!=a?G(e,a):e,this.kernel.read()),null!=this.bias&&(i=ao(i,this.bias.read())),null!=l&&(r=G(r,l));let u=ge(i,Oo(r,this.recurrentKernel.read()));return null!=this.activation&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:Qi(this.activation),useBias:this.useBias,kernelInitializer:Pn(this.kernelInitializer),recurrentInitializer:Pn(this.recurrentInitializer),biasInitializer:Pn(this.biasInitializer),kernelRegularizer:mn(this.kernelRegularizer),recurrentRegularizer:mn(this.recurrentRegularizer),biasRegularizer:mn(this.biasRegularizer),activityRegularizer:mn(this.activityRegularizer),kernelConstraint:os(this.kernelConstraint),recurrentConstraint:os(this.recurrentConstraint),biasConstraint:os(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),s)}}return n.className="SimpleRNNCell",n})();Se(sv),Se((()=>{class n extends Rh{constructor(e){e.cell=new sv(e),super(e)}call(e,s){return q(()=>(null!=this.cell.dropoutMask&&(ht(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ht(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(e,s){return new e(s)}}return n.className="SimpleRNN",n})());let rv=(()=>{class n extends _f{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new K("GRUCell does not support reset_after parameter set to true.");this.units=e.units,gs(this.units,"units"),this.activation=ea(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ea(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=En(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=En(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=En(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=An(e.kernelRegularizer),this.recurrentRegularizer=An(e.recurrentRegularizer),this.biasRegularizer=An(e.biasRegularizer),this.kernelConstraint=is(e.kernelConstraint),this.recurrentConstraint=is(e.recurrentConstraint),this.biasConstraint=is(e.biasConstraint),this.dropout=bu([1,Zi([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=bu([1,Zi([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=en(e),this.kernel=this.addWeight("kernel",[e[e.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,s){return q(()=>{if(2!==e.length)throw new K(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const r=null!=s.training&&s.training;let o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ta({ones:()=>ir(e),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ta({ones:()=>ir(o),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));const a=this.recurrentDropoutMask;let l,u,c;0<this.dropout&&this.dropout<1&&(e=G(e,this.dropoutMask[0]));let h=Oo(e,this.kernel.read());this.useBias&&(h=ao(h,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=G(o,a[0]));const d=this.recurrentKernel.read(),[p,f]=Hs(d,[2*this.units,this.units],d.rank-1),g=Oo(o,p),[m,y,b]=Hs(h,3,h.rank-1),[S,w]=Hs(g,2,g.rank-1);l=this.recurrentActivation.apply(ge(m,S)),u=this.recurrentActivation.apply(ge(y,w));const I=Oo(G(u,o),f);c=this.activation.apply(ge(b,I));const _=ge(G(l,o),G(ge(1,vn(l)),c));return[_,_]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:Qi(this.activation),recurrentActivation:Qi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pn(this.kernelInitializer),recurrentInitializer:Pn(this.recurrentInitializer),biasInitializer:Pn(this.biasInitializer),kernelRegularizer:mn(this.kernelRegularizer),recurrentRegularizer:mn(this.recurrentRegularizer),biasRegularizer:mn(this.biasRegularizer),activityRegularizer:mn(this.activityRegularizer),kernelConstraint:os(this.kernelConstraint),recurrentConstraint:os(this.recurrentConstraint),biasConstraint:os(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),s)}}return n.className="GRUCell",n})();Se(rv),Se((()=>{class n extends Rh{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new rv(e),super(e)}call(e,s){return q(()=>(null!=this.cell.dropoutMask&&(ht(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ht(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(e,s){return 0===s.implmentation&&(s.implementation=1),new e(s)}}return n.className="GRU",n})());let i0=(()=>{class n extends _f{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gs(this.units,"units"),this.activation=ea(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ea(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=En(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=En(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=En(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=An(e.kernelRegularizer),this.recurrentRegularizer=An(e.recurrentRegularizer),this.biasRegularizer=An(e.biasRegularizer),this.kernelConstraint=is(e.kernelConstraint),this.recurrentConstraint=is(e.recurrentConstraint),this.biasConstraint=is(e.biasConstraint),this.dropout=bu([1,Zi([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=bu([1,Zi([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var s;let o;if(e=en(e),this.kernel=this.addWeight("kernel",[e[e.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,a=this.units;o=new((s=class extends Br{apply(u,c){const h=i.apply([a]),d=(new cx).apply([a]),p=i.apply([2*a]);return ax(ax(h,d),p)}}).className="CustomInit",s)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,s){return q(()=>{const r=null!=s.training&&s.training;if(3!==e.length)throw new K(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1];const i=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ta({ones:()=>ir(e),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ta({ones:()=>ir(o),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const l=this.recurrentDropoutMask;let u,c,h,d;0<this.dropout&&this.dropout<1&&(e=G(e,this.dropoutMask[0]));let p=Oo(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=G(o,l[0])),p=ge(p,Oo(o,this.recurrentKernel.read())),this.useBias&&(p=ao(p,this.bias.read()));const[f,g,m,y]=Hs(p,4,p.rank-1);u=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(g),h=ge(G(c,i),G(u,this.activation.apply(m))),d=this.recurrentActivation.apply(y);const b=G(d,this.activation.apply(h));return[b,b,h]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:Qi(this.activation),recurrentActivation:Qi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pn(this.kernelInitializer),recurrentInitializer:Pn(this.recurrentInitializer),biasInitializer:Pn(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:mn(this.kernelRegularizer),recurrentRegularizer:mn(this.recurrentRegularizer),biasRegularizer:mn(this.biasRegularizer),activityRegularizer:mn(this.activityRegularizer),kernelConstraint:os(this.kernelConstraint),recurrentConstraint:os(this.recurrentConstraint),biasConstraint:os(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),s)}}return n.className="LSTMCell",n})();Se(i0),Se((()=>{class n extends Rh{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new i0(e),super(e)}call(e,s){return q(()=>(null!=this.cell.dropoutMask&&(ht(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ht(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(e,s){return 0===s.implmentation&&(s.implementation=1),new e(s)}}return n.className="LSTM",n})());let ov=(()=>{class n extends _f{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const s of this.cells.slice().reverse())Array.isArray(s.stateSize)?e.push(...s.stateSize):e.push(s.stateSize);return e}call(e,s){return q(()=>{let r=e.slice(1);const o=[];for(const l of this.cells.slice().reverse())Array.isArray(l.stateSize)?o.push(r.splice(0,l.stateSize.length)):o.push(r.splice(0,1));o.reverse();const i=[];let a;for(let l=0;l<this.cells.length;++l){const u=this.cells[l];r=o[l],a=0===l?[e[0]].concat(r):[a[0]].concat(r),a=u.call(a,s),i.push(a.slice(1))}r=[];for(const l of i.slice().reverse())r.push(...l);return[a[0]].concat(r)})}build(e){let s;D2(e)&&(e=e[0]),this.cells.forEach((r,o)=>{Ga(`RNNCell_${o}`,()=>{r.build(e),s=Array.isArray(r.stateSize)?r.stateSize[0]:r.stateSize,e=[e[0],s]})}),this.built=!0}getConfig(){const e=super.getConfig(),o={cells:this.cells.map(i=>({className:i.getClassName(),config:i.getConfig()}))};return Object.assign(Object.assign({},e),o)}static fromConfig(e,s,r={}){const o=[];for(const i of s.cells)o.push(fi(i,r));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const s of this.cells)e.push(...s.nonTrainableWeights);if(!this.trainable){const s=[];for(const r of this.cells)s.push(...r.trainableWeights);return s.concat(e)}return e}getWeights(){const e=[];for(const s of this.cells)e.push(...s.weights);return F2(e)}setWeights(e){const s=[];for(const r of this.cells){const i=e.splice(r.weights.length);for(let a=0;a<r.weights.length;++a)s.push([r.weights[a],i[a]])}O2(s)}}return n.className="StackedRNNCells",n})();function ta(n){const{ones:t,rate:e,training:s=!1,count:r=1,dropoutFunc:o}=n,i=()=>null!=o?o(t(),e):ux(t(),e),a=()=>Th(i,t,s);return!r||r<=1?ns(a().clone()):Array(r).fill(void 0).map(a).map(u=>ns(u.clone()))}Se(ov);let U8=(()=>{class n extends Rh{constructor(e){if(e.unroll)throw new Ct("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ct("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new rs({ndim:5})]}call(e,s){return q(()=>{if(null!=this.cell.dropoutMask&&(ht(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ht(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),s&&s.constants)throw new K("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})})}computeOutputShape(e){let s=this.computeSingleOutputShape(e);return this.returnSequences||(s=[s[0],...s.slice(2)]),this.returnState&&(s=[s,...Array(2).fill([e[0],...s.slice(-3)])]),s}getInitialState(e){return q(()=>{const{stateSize:s}=this.cell,o=this.computeSingleOutputShape(e.shape),a=Qn([o[0],...o.slice(2)]);return Array.isArray(s)?Array(s.length).fill(a):[a]})}resetStates(e,s=!1){q(()=>{if(!this.stateful)throw new Do("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape,o=this.computeSingleOutputShape(r),i=[o[0],...o.slice(2)];if(null==r[0])throw new K("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>Qn(i)):[Qn(i)];else if(null==e)ht(this.states_),null!=this.keptStates&&(ht(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Qn(i)):this.states_[0]=Qn(i);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new K(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);s?this.keptStates.push(this.states_.slice()):ht(this.states_);for(let l=0;l<this.states_.length;++l){const u=e[l],c=i;if(!At(u.shape,c))throw new K(`State ${l} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${u.shape}`);this.states_[l]=u}}this.states_=this.states_.map(l=>ns(l.clone()))})}computeSingleOutputShape(e){const{dataFormat:s,filters:r,kernelSize:o,padding:i,strides:a,dilationRate:l}=this.cell,u="channelsFirst"===s,h=e[u?4:3],d=co(e[u?3:2],o[0],i,a[0],l[0]),p=co(h,o[1],i,a[1],l[1]);return[...e.slice(0,2),...u?[r,d,p]:[d,p,r]]}}return n.className="ConvRNN2D",n})(),iv=(()=>{class n extends i0{constructor(e){const{filters:s,kernelSize:r,strides:o,padding:i,dataFormat:a,dilationRate:l}=e;super(Object.assign(Object.assign({},e),{units:s})),this.filters=s,gs(this.filters,"filters"),this.kernelSize=wu(r,2,"kernelSize"),this.kernelSize.forEach(u=>gs(u,"kernelSize")),this.strides=wu(o||1,2,"strides"),this.strides.forEach(u=>gs(u,"strides")),this.padding=i||"valid",_r(this.padding),this.dataFormat=a||"channelsLast",Kn(this.dataFormat),this.dilationRate=wu(l||1,2,"dilationRate"),this.dilationRate.forEach(u=>gs(u,"dilationRate"))}build(e){var s;e=en(e);const r="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[r])throw new K(`The channel dimension of the input should be defined. Found ${e[r]}`);const a=this.kernelSize.concat([e[r],4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const c=this.biasInitializer,h=this.filters;u=new((s=class extends Br{apply(p,f){return A2([c.apply([h]),Gs([h]),c.apply([2*h])])}}).className="CustomInit",s)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,s){return q(()=>{if(3!==e.length)throw new K(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const r=s.training||!1,o=e[0],i=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ta({ones:()=>ir(o),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,c=(Ie,Ee,Ce)=>Ee&&Ee[Ce]?G(Ee[Ce],Ie):Ie;let h=c(o,u,0),d=c(o,u,1),p=c(o,u,2),f=c(o,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ta({ones:()=>ir(i),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const g=this.recurrentDropoutMask;let m=c(i,g,0),y=c(i,g,1),b=c(i,g,2),S=c(i,g,3);const[I,_,R,F]=Hs(this.kernel.read(),4,3),[O,L,j,Q]=this.useBias?Hs(this.bias.read(),4):[null,null,null,null];h=this.inputConv(h,I,O,this.padding),d=this.inputConv(d,_,L,this.padding),p=this.inputConv(p,R,j,this.padding),f=this.inputConv(f,F,Q,this.padding);const[te,se,oe,ae]=Hs(this.recurrentKernel.read(),4,3);m=this.recurrentConv(m,te),y=this.recurrentConv(y,se),b=this.recurrentConv(b,oe),S=this.recurrentConv(S,ae);const ue=this.recurrentActivation.apply(ge(h,m)),re=this.recurrentActivation.apply(ge(d,y)),de=ge(G(re,a),G(ue,this.activation.apply(ge(p,b)))),ve=G(this.recurrentActivation.apply(ge(f,S)),this.activation.apply(de));return[ve,ve,de]})}getConfig(){const r=function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(n);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(e[s[r]]=n[s[r]])}return e}(super.getConfig(),["units"]),o={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},r),o)}inputConv(e,s,r,o){const i=ni(e,s,this.strides,o||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return r?ao(i,r,this.dataFormat):i}recurrentConv(e,s){return ni(e,s,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}return n.className="ConvLSTM2DCell",n})();Se(iv),Se((()=>{class n extends U8{constructor(e){const s=new iv(e);super(Object.assign(Object.assign({},e),{cell:s}))}static fromConfig(e,s){return new e(s)}}return n.className="ConvLSTM2D",n})());let av=(()=>{class n extends zt{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const s=e.shape,r=[];for(let o=0;o<this.noiseShape.length;++o)r.push(null==this.noiseShape[o]?s[o]:this.noiseShape[o]);return r}call(e,s){return q(()=>{this.invokeCallHook(e,s);const r=dt(e);if(0<this.rate&&this.rate<1){const o=null!=s.training&&s.training,i=this.getNoiseShape(r);return Th(()=>ux(r,this.rate,i,this.seed),()=>r,o)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},s=super.getConfig();return Object.assign(e,s),e}dispose(){return super.dispose()}}return n.className="Dropout",n})();Se(av),Se((()=>{class n extends av{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const s=e.shape;return[s[0],1,s[2]]}}return n.className="SpatialDropout1D",n})()),Se((()=>{class n extends zt{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let s=null;null!=e.batchSize&&(s=e.batchSize),this.batchInputShape=[s,e.inputDim]}this.units=e.units,gs(this.units,"units"),this.activation=ea(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=En(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=En(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=is(e.kernelConstraint),this.biasConstraint=is(e.biasConstraint),this.kernelRegularizer=An(e.kernelRegularizer),this.biasRegularizer=An(e.biasRegularizer),this.activityRegularizer=An(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const s=(e=en(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[s,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:s}}],this.built=!0}computeOutputShape(e){const s=(e=en(e)).slice();return s[s.length-1]=this.units,s}call(e,s){return q(()=>{this.invokeCallHook(e,s);const r=dt(e),o=Qb(this.activation.getClassName());let i;return null!=o?i=Oo(r,this.kernel.read(),o,this.bias?this.bias.read():null):(i=Oo(r,this.kernel.read()),null!=this.bias&&(i=ao(i,this.bias.read())),null!=this.activation&&(i=this.activation.apply(i))),i})}getConfig(){const e={units:this.units,activation:Qi(this.activation),useBias:this.useBias,kernelInitializer:Pn(this.kernelInitializer),biasInitializer:Pn(this.biasInitializer),kernelRegularizer:mn(this.kernelRegularizer),biasRegularizer:mn(this.biasRegularizer),activityRegularizer:mn(this.activityRegularizer),kernelConstraint:os(this.kernelConstraint),biasConstraint:os(this.biasConstraint)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Dense",n})()),Se((()=>{class n extends zt{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=en(e);for(const s of e.slice(1))if(null==s)throw new K(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Xi(e,1)]}call(e,s){return q(()=>{this.invokeCallHook(e,s);let r=dt(e);if("channelsFirst"===this.dataFormat&&r.rank>1){const o=[0];for(let i=2;i<r.rank;++i)o.push(i);o.push(1),r=Gt(r,o)}return function I7(n){if(n.rank<=1)throw new K(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],Xi(n.shape,1)];return H(n,t)}(r)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const s=super.getConfig();return Object.assign(e,s),e}}return n.className="Flatten",n})()),Se((()=>{class n extends zt{constructor(e){super(e),this.supportsMasking=!0,this.activation=ea(e.activation)}call(e,s){return q(()=>{this.invokeCallHook(e,s);const r=dt(e);return this.activation.apply(r)})}getConfig(){const e={activation:Qi(this.activation)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Activation",n})()),Se((()=>{class n extends zt{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,s){return q(()=>function w7(n,t){return q(()=>{if(2!==n.shape.length)throw new K(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);return $2(Nh(n,1),[1,t,1])})}(e=dt(e),this.n))}getConfig(){const e={n:this.n},s=super.getConfig();return Object.assign(e,s),e}}return n.className="RepeatVector",n})()),Se((()=>{class n extends zt{constructor(e){super(e),this.targetShape=e.targetShape;for(let s=0;s<this.targetShape.length;++s)this.isUnknown(this.targetShape[s])&&(this.targetShape[s]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,s){const r="Total size of new array must be unchanged.",o=s.slice();let i=1,a=null;for(let u=0;u<o.length;++u){const c=o[u];if(this.isUnknown(c)){if(null!==a)throw new K("Can only specifiy one unknown dimension.");a=u}else i*=c}const l=Xi(e);if(null!==a){if(0===i||l%i!=0)throw new K(r);o[a]=l/i}else if(l!==i)throw new K(r);return o}computeOutputShape(e){let s=!1;for(let r=0;r<e.length;++r)if(this.isUnknown(e[r])){s=!0;break}return s?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,s){return q(()=>{this.invokeCallHook(e,s);const r=dt(e),o=r.shape,i=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return H(r,i)})}getConfig(){const e={targetShape:this.targetShape},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Reshape",n})()),Se((()=>{class n extends zt{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const s=ro(1,e.dims.length+1);if(!At(e.dims.slice().sort(),s))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new rs({ndim:this.dims.length+1})]}computeOutputShape(e){const s=(e=en(e)).slice();return this.dims.forEach((r,o)=>{s[o+1]=e[r]}),s}call(e,s){return Gt(dt(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Permute",n})()),Se((()=>{class n extends zt{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={maskValue:this.maskValue};return Object.assign(s,e),s}computeMask(e,s){const r=dt(e);return Yc(La(r,this.maskValue),-1)}call(e,s){return q(()=>{this.invokeCallHook(e,s);const r=dt(e),a=Yc(La(r,this.maskValue),-1,!0);return G(r,Te(a,r.dtype))})}}return n.className="Masking",n})()),Se((()=>{class n extends zt{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let s=null;null!=e.batchSize&&(s=e.batchSize),this.batchInputShape=null==e.inputLength?[s,null]:[s].concat(pn(e.inputLength))}this.inputDim=e.inputDim,gs(this.inputDim,"inputDim"),this.outputDim=e.outputDim,gs(this.outputDim,"outputDim"),this.embeddingsInitializer=En(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=An(e.embeddingsRegularizer),this.activityRegularizer=An(e.activityRegularizer),this.embeddingsConstraint=is(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,s){return q(()=>this.maskZero?(e=dt(e),La(e,jt(e))):null)}computeOutputShape(e){if(e=en(e),null==this.inputLength)return[...e,this.outputDim];const s=pn(this.inputLength);if(s.length!==e.length-1)throw new K(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let r=0;for(let o=0;o<s.length;++o){const i=s[o],a=e[o+1];if(null!=i&&null!=a&&i!==a)throw new K(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==i&&(s[r]=a),r++}}return[e[0],...s,this.outputDim]}call(e,s){return q(()=>{this.invokeCallHook(e,s);let r=dt(e);"int32"!==r.dtype&&(r=Fo(r,"int32"));const o=lx(this.embeddings.read(),H(r,[r.size]));return H(o,en(this.computeOutputShape(r.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Pn(this.embeddingsInitializer),embeddingsRegularizer:mn(this.embeddingsRegularizer),activityRegularizer:mn(this.activityRegularizer),embeddingsConstraint:os(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Embedding",n})());class ja extends zt{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Ct}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const s=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const o=t[t.length-e.length+r],i=e[r];if(null==o||null==i||o<0||i<0)s.push(null);else if(1===o)s.push(i);else if(1===i)s.push(o);else{if(o!==i)throw new K("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(o)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[en(t)]),t.length<2)throw new K(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const o of t)null!=o&&null!==o[0]&&e.push(o[0]);if(e=qi(e),e.length>1)throw new K(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=null==t[0]?null:t[0].slice(1);for(let o=1;o<t.length;++o){const i=null==t[o]?null:t[o].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const r=t.map(o=>o.length);this.reshapeRequired=-1!==t.indexOf(null)||1!==qi(r).length}call(t,e){return q(()=>{if(this.reshapeRequired){const s=[],r=t.map(o=>o.rank);if(-1===r.indexOf(null)){const o=Zi(r);for(let i of t){const a=i.rank;for(let l=0;l<o-a;++l)i=Nh(i,1);s.push(i)}return this.mergeFunction(s)}{let o=!1;for(const l of t){const u=l.rank;if(null==u){const c=l.shape,h=c[0],d=c.slice(1).concat([h]);let p=H(l,[h].concat(Xi(c.slice(1))));p=Gt(p,[1,0]),p=H(p,d),s.push(p),o=!0}else if(u>1){const c=ro(1,u).concat([0]);s.push(Gt(l,c)),o=!0}else s.push(l)}let i=this.mergeFunction(s);const a=i.rank;if(o)if(null==a){const l=i.shape,c=l[l.length-1],h=[c].concat(l.slice(0,l.length-1));i=H(Gt(H(i,[-1,c]),[1,0]),h)}else if(a>1){const l=[a-1].concat(ro(0,a-1));i=Gt(i,l)}return i}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const o=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,o)}let s=[];for(const r of t)null!=r&&null!==r[0]&&s.push(r[0]);return s=qi(s),e=1===s.length?s.concat(e):[null].concat(e),e}computeMask(t,e){return q(()=>{if(null==e)return null;if(!Array.isArray(e))throw new K("`mask` should be an Array");if(!Array.isArray(t))throw new K("`inputs` should be an Array");if(e.length!==t.length)throw new K(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(r=>null==r))return null;let s=(e=e.map(r=>null==r?r:_n(r,0)))[0];for(let r=1;r<e.length-1;++r)s=Qr(s,e[r]);return s})}}function Dh(n,t){for(;n<0;)n+=t;return n}function Fh(n,t,e,s,r,o=.001){let i;if(2===n.rank)i=Fg(n,t,e,s,r,o);else if(3===n.rank)i=Og(n,t,e,s,r,o);else{if(4!==n.rank)throw new Ct(`batchNormalization is not implemented for array of rank ${n.rank} yet`);i=Lg(n,t,e,s,r,o)}return i}function Ef(n,t,e,s,r,o){return q(()=>{let i;Kn(r),tx(o),_r(s),null==e&&(e=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),n=r0(n,r);const a="same"===s?"same":"valid";return i="max"===o?uh(n,t,e,a):th(n,t,e,a),"channelsFirst"===r&&(i=Gt(i,[0,3,1,2])),i})}function lv(n,t,e,s,r,o){return q(()=>{let i;Kn(r),tx(o),_r(s),null==e&&(e=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),n=Zx(n,r);const a="same"===s?"same":"valid";return i="max"===o?i1(n,t,e,a):Dg(n,t,e,a),"channelsFirst"===r&&(i=Gt(i,[0,4,1,2,3])),i})}Se((()=>{class n extends ja{constructor(e){super(e)}mergeFunction(e){return q(()=>{let s=e[0].clone();for(let r=1;r<e.length;++r)s=ge(s,e[r]);return s})}}return n.className="Add",n})()),Se((()=>{class n extends ja{constructor(e){super(e)}mergeFunction(e){return q(()=>{let s=e[0].clone();for(let r=1;r<e.length;++r)s=G(s,e[r]);return s})}}return n.className="Multiply",n})()),Se((()=>{class n extends ja{constructor(e){super(e)}mergeFunction(e){return q(()=>{let s=e[0].clone();for(let r=1;r<e.length;++r)s=ge(s,e[r]);return G(1/e.length,s)})}}return n.className="Average",n})()),Se((()=>{class n extends ja{constructor(e){super(e)}mergeFunction(e){return q(()=>{let s=e[0];for(let r=1;r<e.length;++r)s=To(s,e[r]);return s})}}return n.className="Maximum",n})()),Se((()=>{class n extends ja{constructor(e){super(e)}mergeFunction(e){return q(()=>{let s=e[0];for(let r=1;r<e.length;++r)s=ji(s,e[r]);return s})}}return n.className="Minimum",n})()),Se((()=>{class n extends ja{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new K("A `Concatenate` layer should be called on a list of at least 2 inputs");let s=!0;for(const o of e)if(null!=o){s=!1;break}if(s)return;const r=[];for(let o=0;o<e.length;++o){const i=e[o].slice();i.splice(this.axis,1);let a=!1;for(const l of r)if(At(l,i)){a=!0;break}a||r.push(i)}if(r.length>1)throw new K("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return q(()=>A2(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new K("A `Concatenate` layer should be called on a list of inputs.");const s=e,r=s[0].slice(),o=this.axis<0?r.length+this.axis:this.axis;for(const i of s.slice(1)){if(null==r[o]||null==i[o]){r[o]=null;break}r[o]+=i[o]}return r}computeMask(e,s){if(null==s)return null;if(!Array.isArray(s))throw new K("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new K("`inputs` should be an array for Concatenate");if(s.length!==e.length)throw new K(`Mismatch in the length of mask (${s.length}) and the legnth of inputs (${e.length})`);return q(()=>{let r=!0;if(s.forEach(a=>{null==a||(r=!1)}),r)return null;const o=[];for(let a=0;a<e.length;++a)o.push(null==s[a]?Te(ir(e[a]),"bool"):s[a].rank<e[a].rank?_n(s[a],-1):s[a]);const i=Fn(o,this.axis);return sp(i,-1,!1)})}getConfig(){const e={axis:this.axis},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Concatenate",n})()),Se((()=>{class n extends ja{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){E(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const s=e[0],r=e[1];if(s.length>3||r.length>3)throw new Ct("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(s,r);if(s[o[0]]!==r[o[1]])throw new K(`Dimension incompatibility: ${s[o[0]]} !== ${r[o[1]]}`)}mergeFunction(e){if(2!==e.length)throw new K(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let o,s=e[0],r=e[1];return o=Array.isArray(this.axes)?this.axes.map((i,a)=>Dh(i,e[a].shape.length)):[Dh(this.axes,s.shape.length),Dh(this.axes,r.shape.length)],this.normalize&&(s=xf(s,o[0]),r=xf(r,o[1])),function G8(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new Ct("batchDot is not implemented for tensors of 4D or higher rank yet");if(E(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),E(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof e&&(e=[e,e]),"complex64"===n.dtype||"complex64"===t.dtype)throw new Ct("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=t.shape.length;null==e&&(e=[s-1,r-2]);const o=e;return q(()=>{let i,a;if(s>r){i=s-r;const l=[];for(let u=0;u<i;++u)l.push(1);t=H(t,t.shape.concat(l))}else if(r>s){i=r-s;const l=[];for(let u=0;u<i;++u)l.push(1);n=H(n,n.shape.concat(l))}else i=0;if(a=2===n.shape.length&&2===t.shape.length?o[0]===o[1]?He(G(n,t),o[0]):He(G(Gt(n,[1,0]),t),o[1]):Tt(n,t,o[0]!==n.shape.length-1,o[1]===t.shape.length-1),i>0){let l;l=s>r?s+r-3:s-1;const u=[];for(let c=l;c<l+i;++c)u.push(c);a=on(a,u)}return 1===a.shape.length&&(a=_n(a,1)),a})}(s,r,o)}interpretAxes(e,s){let r;return r=Array.isArray(this.axes)?this.axes:[Dh(this.axes,e.length),Dh(this.axes,s.length)],r}computeOutputShape(e){E(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const s=e[0].slice(),r=e[1].slice();if(s.length>3||r.length>3)throw new Ct("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(s,r);s.splice(o[0],1),r.splice(o[1],1),r.splice(0,1);const i=s.concat(r);return 1===i.length&&i.push(1),i}computeMask(e,s){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Dot",n})()),Se((()=>{class n extends zt{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={stddev:this.stddev};return Object.assign(s,e),s}call(e,s){return q(()=>{this.invokeCallHook(e,s);const r=dt(e);return Th(()=>ge(df(r.shape,0,this.stddev),r),()=>r,s.training||!1)})}}return n.className="GaussianNoise",n})()),Se((()=>{class n extends zt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={rate:this.rate};return Object.assign(s,e),s}call(e,s){return q(()=>{this.invokeCallHook(e,s);const r=dt(e);return this.rate>0&&this.rate<1?Th(()=>{const i=Math.sqrt(this.rate/(1-this.rate));return G(r,df(r.shape,1,i))},()=>r,s.training||!1):r})}}return n.className="GaussianDropout",n})()),Se((()=>{class n extends zt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||dt(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={rate:this.rate};return Object.assign(s,e),s}call(e,s){return q(()=>{if(this.rate<1&&this.rate>0){const r=this._getNoiseShape(e);return Th(()=>{const i=dt(e),u=-1.7580993408473766;let c=si(Ki(r),this.rate);c=Fo(c,"float32");const h=((1-this.rate)*(1+this.rate*u**2))**-.5,d=-h*u*this.rate,p=ge(G(i,c),G(ge(c,-1),u));return ge(G(p,h),d)},()=>dt(e),s.training||!1)}return e})}}return n.className="AlphaDropout",n})()),Se((()=>{class n extends zt{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=En(e.betaInitializer||"zeros"),this.gammaInitializer=En(e.gammaInitializer||"ones"),this.movingMeanInitializer=En(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=En(e.movingVarianceInitializer||"ones"),this.betaConstraint=is(e.betaConstraint),this.gammaConstraint=is(e.gammaConstraint),this.betaRegularizer=An(e.betaRegularizer),this.gammaRegularizer=An(e.gammaRegularizer)}build(e){e=en(e);const s=this.axis>=0?this.axis:this.axis+e.length,r=e[s];if(null==r)throw new K(`Axis ${s} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new rs({ndim:e.length,axes:{[s]:r}})];const o=[r];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,s){return q(()=>{const r=null!=s.training&&s.training,o=dt(e),i=o.shape,a=i.length,l=ro(0,a),u=this.axis>=0?this.axis:this.axis+a;l.splice(u,1);const c=Va(1,a);c[u]=i[u];const h=l.slice();h.sort();const d=!At(h,ro(0,a).slice(0,a-1));if(!r)return(()=>{if(d){const S=H(this.movingMean.read(),c),w=H(this.movingVariance.read(),c),I=this.center?H(this.beta.read(),c):null,_=this.scale?H(this.gamma.read(),c):null;return Fh(o,S,w,I,_,this.epsilon)}return Fh(o,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[f,g,m]=function K8(n,t,e,s,r=.001){return At(s.slice().sort(),ro(0,n.rank-1))?function H8(n,t,e,s,r=.001){return q(()=>{const o=ch(n,s),i=o.mean,a=o.variance;return[Fh(n,i,a,e,t,r),i,a]})}(n,t,e,s,r):function j8(n,t,e,s,r=.001){return q(()=>{const o=ch(n,s),i=o.mean,a=o.variance,l=[];for(const f of ro(0,n.rank))-1!==s.indexOf(f)?l.push(1):l.push(n.shape[f]);const u=H(i,l),c=H(a,l),h=null==t?null:H(t,l),d=null==e?null:H(e,l);return[Fh(n,u,c,d,h,r),i,a]})}(n,t,e,s,r)}(o,this.gamma.read(),this.beta.read(),l,this.epsilon),y=(S,w,I)=>{q(()=>{const _=1-I,R=S.read(),F=G(Pe(R,w),_);S.write(Pe(R,F))})};return(()=>{y(this.movingMean,g,this.momentum),y(this.movingVariance,m,this.momentum)})(),f})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pn(this.betaInitializer),gammaInitializer:Pn(this.gammaInitializer),movingMeanInitializer:Pn(this.movingMeanInitializer),movingVarianceInitializer:Pn(this.movingVarianceInitializer),betaRegularizer:mn(this.betaRegularizer),gammaRegularizer:mn(this.gammaRegularizer),betaConstraint:os(this.betaConstraint),gammaConstraint:os(this.gammaConstraint)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="BatchNormalization",n})()),Se((()=>{class n extends zt{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const s of this.axis)if(!Number.isInteger(s))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=En(e.betaInitializer||"zeros"),this.gammaInitializer=En(e.gammaInitializer||"ones"),this.betaRegularizer=An(e.betaRegularizer),this.gammaRegularizer=An(e.gammaRegularizer),this.supportsMasking=!0}build(e){const s=(e=en(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=s);for(const i of this.axis)if(i<0||i>=s)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==qi(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const r=this.axis.map(i=>e[i]);this.gamma=this.scale?this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(e,s){const r=dt(e),o=r.shape,i=o.length;return q(()=>{let{mean:l,variance:u}=ch(r,this.axis,!0);const c=Va(1,i);for(const m of this.axis)c[m]=o[m];const h=m=>null!=m&&m.shape.length!==i?H(m,c):m;let d=this.scale?h(this.gamma.read()):null,p=this.center?h(this.beta.read()):null;const f=[],g=[];for(let m=0;m<i;++m)-1!==this.axis.indexOf(m)?(f.push(o[m]),g.push(1)):(f.push(1),g.push(o[m]));return l=Cr(l,f),u=Cr(u,f),null!=d&&(d=Cr(d,g)),null!=p&&(p=Cr(p,g)),Fh(r,l,u,p,d,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pn(this.betaInitializer),gammaInitializer:Pn(this.gammaInitializer),betaRegularizer:mn(this.betaRegularizer),gammaRegularizer:mn(this.gammaRegularizer)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="LayerNormalization",n})()),Se((()=>{class n extends zt{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new K(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let s,r;if("number"==typeof e.padding[0])s=[e.padding[0],e.padding[0]],r=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new K(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(s=e.padding[0],2!==e.padding[1].length)throw new K(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);r=e.padding[1]}this.padding=[s,r]}this.inputSpec=[new rs({ndim:4})]}computeOutputShape(e){let s,r;return e=en(e),"channelsFirst"===this.dataFormat?(s=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],s,r]):(s=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],s,r,e[3]])}call(e,s){return q(()=>function q8(n,t,e){return q(()=>{if(4!==n.rank)throw new K(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new K("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==e&&(e="channelsLast"),"channelsLast"!==e&&"channelsFirst"!==e)throw new K(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return s="channelsFirst"===e?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],ri(n,s)})}(dt(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ZeroPadding2D",n})());class uv extends zt{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new K(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(gs(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new K(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}gs(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,_r(this.padding),this.inputSpec=[new rs({ndim:3})]}computeOutputShape(t){const e=co((t=en(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return q(()=>{this.invokeCallHook(t,e),t=Nh(dt(t),2);const s=this.poolingFunction(dt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return on(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}Se((()=>{class n extends uv{constructor(e){super(e)}poolingFunction(e,s,r,o,i){return Kn(i),_r(o),Ef(e,s,r,o,i,"max")}}return n.className="MaxPooling1D",n})()),Se((()=>{class n extends uv{constructor(e){super(e)}poolingFunction(e,s,r,o,i){return Kn(i),_r(o),Ef(e,s,r,o,i,"avg")}}return n.className="AveragePooling1D",n})());class cv extends zt{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new K(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];gs(this.poolSize,"poolSize"),gs(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Kn(this.dataFormat),_r(this.padding),this.inputSpec=[new rs({ndim:4})]}computeOutputShape(t){t=en(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],s="channelsFirst"===this.dataFormat?t[3]:t[2];return e=co(e,this.poolSize[0],this.padding,this.strides[0]),s=co(s,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return q(()=>(this.invokeCallHook(t,e),this.poolingFunction(dt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Se((()=>{class n extends cv{constructor(e){super(e)}poolingFunction(e,s,r,o,i){return Kn(i),_r(o),Ef(e,s,r,o,i,"max")}}return n.className="MaxPooling2D",n})()),Se((()=>{class n extends cv{constructor(e){super(e)}poolingFunction(e,s,r,o,i){return Kn(i),_r(o),Ef(e,s,r,o,i,"avg")}}return n.className="AveragePooling2D",n})());class hv extends zt{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new K(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];gs(this.poolSize,"poolSize"),gs(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Kn(this.dataFormat),_r(this.padding),this.inputSpec=[new rs({ndim:5})]}computeOutputShape(t){t=en(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],s="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=co(e,this.poolSize[0],this.padding,this.strides[0]),s=co(s,this.poolSize[1],this.padding,this.strides[1]),r=co(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,s,r]:[t[0],e,s,r,t[4]]}call(t,e){return q(()=>(this.invokeCallHook(t,e),this.poolingFunction(dt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Se((()=>{class n extends hv{constructor(e){super(e)}poolingFunction(e,s,r,o,i){return Kn(i),_r(o),lv(e,s,r,o,i,"max")}}return n.className="MaxPooling3D",n})()),Se((()=>{class n extends hv{constructor(e){super(e)}poolingFunction(e,s,r,o,i){return Kn(i),_r(o),lv(e,s,r,o,i,"avg")}}return n.className="AveragePooling3D",n})());class dv extends zt{constructor(t){super(t),this.inputSpec=[new rs({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Ct}}Se((()=>{class n extends dv{constructor(e){super(e||{})}call(e,s){return q(()=>{const r=dt(e);return Ln(r,1)})}}return n.className="GlobalAveragePooling1D",n})()),Se((()=>{class n extends dv{constructor(e){super(e||{})}call(e,s){return q(()=>{const r=dt(e);return Ir(r,1)})}}return n.className="GlobalMaxPooling1D",n})());class pv extends zt{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Kn(this.dataFormat),this.inputSpec=[new rs({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Ct}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Se((()=>{class n extends pv{call(e,s){return q(()=>{const r=dt(e);return Ln(r,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return n.className="GlobalAveragePooling2D",n})()),Se((()=>{class n extends pv{call(e,s){return q(()=>{const r=dt(e);return Ir(r,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return n.className="GlobalMaxPooling2D",n})());class fv extends zt{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const o=fi(e.layer,s);delete e.layer;const i={layer:o};return Object.assign(i,e),new t(i)}}Se((()=>{class n extends fv{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=en(e)).length<3)throw new K(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const s=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(s),this.layer.built=!0),super.build(e)}computeOutputShape(e){const s=[(e=en(e))[0]].concat(e.slice(2)),r=this.layer.computeOutputShape(s);return[r[0],e[1]].concat(r.slice(1))}call(e,s){return q(()=>nv((a,l)=>[dt(this.layer.call(a,s)),[]],e=dt(e),[],!1,null,null,!1,!0)[1])}}return n.className="TimeDistributed",n})()),Se((()=>{class n extends fv{constructor(e){super(e);const s=e.layer.getConfig(),r={};r.className=e.layer.getClassName(),r.config=s,this.forwardLayer=fi(r),s.goBackwards=!0!==s.goBackwards;const o={};if(o.className=e.layer.getClassName(),o.config=s,this.backwardLayer=fi(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function X8(n){Ua(f7,"BidirectionalMergeMode",n)}(this.mergeMode),e.weights)throw new Ct("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const r=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,r)),this.backwardLayer.setWeights(e.slice(r))}computeOutputShape(e){let r,o,i,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState&&(i=s.slice(1)),r=s[0],"concat"===this.mergeMode?(r[r.length-1]*=2,o=[r]):o=null==this.mergeMode?[r,r.slice()]:[r],this.returnState?null==this.mergeMode?o.concat(i).concat(i.slice()):[r].concat(i).concat(i.slice()):qs(o)}apply(e,s){let r=null==s?null:s.initialState,o=null==s?null:s.constants;null==s&&(s={});const i=tv(e,r,o,this.numConstants);if(e=i.inputs,r=i.initialState,o=i.constants,Array.isArray(e)&&(r=e.slice(1),e=e[0]),(null==r||0===r.length)&&null==o)return super.apply(e,s);const a=[],l=[];if(null!=r){const c=r.length;if(c%2>0)throw new K("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");s.initialState=r,a.push(...r);const h=r.map(d=>new rs({shape:d.shape}));this.forwardLayer.stateSpec=h.slice(0,c/2),this.backwardLayer.stateSpec=h.slice(c/2),l.push(...h)}if(null!=o)throw new Ct("Support for constants in Bidirectional layers is not implemented yet.");const u=a[0]instanceof Po;for(const c of a)if(c instanceof Po!==u)throw new K("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const c=[e].concat(a),h=this.inputSpec.concat(l),d=this.inputSpec;this.inputSpec=h;const p=super.apply(c,s);return this.inputSpec=d,p}return super.apply(e,s)}call(e,s){return q(()=>{const r=s.initialState;let o,i,a,l;if(null==r)o=this.forwardLayer.call(e,s),i=this.backwardLayer.call(e,s);else{const u=r.slice(0,r.length/2),c=r.slice(r.length/2);o=this.forwardLayer.call(e,Object.assign(s,{initialState:u})),i=this.backwardLayer.call(e,Object.assign(s,{initialState:c}))}return this.returnState&&(Array.isArray(o)&&(a=o.slice(1).concat(i.slice(1))),o=o[0],i=i[0]),this.returnSequences&&(i=Nr(i,1)),"concat"===this.mergeMode?l=A2([o,i]):"sum"===this.mergeMode?l=ge(o,i):"ave"===this.mergeMode?l=G(.5,ge(o,i)):"mul"===this.mergeMode?l=G(o,i):null==this.mergeMode&&(l=[o,i]),this.returnState?null==this.mergeMode?l.concat(a):[l].concat(a):l})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ga(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ga(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,s){let r;if(Array.isArray(s)&&(s=s[0]),r=this.returnSequences?null==this.mergeMode?[s,s]:s:null==this.mergeMode?[null,null]:null,this.returnState){const i=this.forwardLayer.states.map(a=>null);return Array.isArray(r)?r.concat(i).concat(i):[r].concat(i).concat(i)}return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},s=super.getConfig();return Object.assign(e,s),e}static fromConfig(e,s){const r=fi(s.layer);if(delete s.layer,null!=s.numConstants)throw new Ct("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const o=s;return o.layer=r,new e(o)}}return n.className="Bidirectional",n})()),Se((()=>{class n extends zt{constructor(e){super(e),this.scale=e.scale,this.offset=e.offset?e.offset:0}getConfig(){const e={scale:this.scale,offset:this.offset},s=super.getConfig();return Object.assign(e,s),e}call(e,s){return q(()=>("float32"!==(e=dt(e)).dtype&&(e=Fo(e,"float32")),ge(G(e,this.scale),this.offset)))}}return n.className="Rescaling",n})());const{resizeBilinear:Y8,cropAndResize:J8}=ms;Se((()=>{class n extends zt{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,s,r,o,i,a,l,u){return q(()=>{let c,h=!1;const m=[s/a,r/l,(o+s)/a,(i+r)/l],y=[];3===e.rank?(h=!0,c=js([e])):c=e;for(let _=0;_<c.shape[0];_++)y.push(m);const b=vr(y,[y.length,4]),S=oi(0,y.length,1,"int32"),I=J8(c,b,S,[o,i],"nearest");return Fo(h?dt(kr(I)):I,u)})}upsize(e,s,r,o){return q(()=>Fo(Y8(e,[s,r]),o))}call(e,s){return q(()=>{const r=dt(e),o=r.dtype,i=r.shape,a=i[i.length-3],l=i[i.length-2];let u=0;a!==this.height&&(u=Math.floor((a-this.height)/2));let c=0;return l!==this.width&&(c=Math.floor((l-this.width)/2),0===c&&(c=1)),u>=0&&c>=0?this.centerCrop(r,u,c,this.height,this.width,a,l,o):this.upsize(e,this.height,this.width,o)})}getConfig(){const e={height:this.height,width:this.width},s=super.getConfig();return Object.assign(e,s),e}computeOutputShape(e){const r=(e=en(e)).length-2;return e[e.length-3]=this.height,e[r]=this.width,e}}return n.className="CenterCrop",n})()),Se((()=>{class n extends zt{constructor(e){super(e),this.numTokens=e.numTokens,this.outputMode=e.outputMode?e.outputMode:"multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},s=super.getConfig();return Object.assign(e,s),e}computeOutputShape(e){return null==(e=en(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,s){return q(()=>{let r;if("int32"!==(e=dt(e)).dtype&&(e=Fo(e,"int32")),typeof s.countWeights<"u"){if("count"!==this.outputMode)throw new K(`countWeights is not used when outputMode !== count.\n              Received countWeights=${s.countWeights}`);r=dt(s.countWeights)}const o=Ir(e),i=ou(e),a=Ps(this.numTokens,o).bufferSync().get(0),l=si(i,0).bufferSync().get(0);if(!a||!l)throw new K(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function Q8(n,t,e,s){let r=dt(n);if("int32"!==r.dtype&&(r=Fo(r,"int32")),"int"===t)return r;const o=r.shape;if(0===r.rank&&(r=_n(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=_n(r,-1)),r.rank>2)throw new K(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${o} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(t);let l;if(l=lp(r,typeof s<"u"&&"count"===t?s:[],e,i),"tfIdf"!==t)return l;if(s)return G(l,s);throw new K("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,r)})}}return n.className="CategoryEncoding",n})());const mv=new Set(["bilinear","nearest"]);Se((()=>{class n extends zt{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!mv.has(e.interpolation))throw new K(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){return e=en(e),[this.height,this.width,e[2]]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},s=super.getConfig();return Object.assign(e,s),e}call(e,s){return q(()=>{const r=[this.height,this.width];if("bilinear"===this.interpolation)return ms.resizeBilinear(e,r,!this.cropToAspectRatio);if("nearest"===this.interpolation)return ms.resizeNearestNeighbor(e,r,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...mv]} are supported`)})}}return n.className="Resizing",n})());let t9=(()=>{class n{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}return n.className="RandomSeed",n})(),n9=(()=>{class n extends zt{constructor(e){super(e),this.randomGenerator=new t9(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},s=super.getConfig();return Object.assign(e,s),e}}return n.className="BaseRandomLayer",n})();const gv=new Set(["bilinear","nearest"]);function je(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{null!=e&&E("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}Se((()=>{class n extends n9{constructor(e){super(e);const{factor:s,interpolation:r="bilinear"}=e;if(this.factor=s,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new K(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new K(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new K(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(r){if(!gv.has(r))throw new K(`Invalid interpolation parameter: ${r} is not implemented`);this.interpolation=r}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},s=super.getConfig();return Object.assign(e,s),e}computeOutputShape(e){return e=en(e),[this.imgHeight,-1,e[2]]}call(e,s){return q(()=>{const r=dt(e);this.imgHeight=r.shape[r.shape.length-3];const o=r.shape[r.shape.length-2];this.widthFactor=Ki([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let i=this.widthFactor.dataSync()[0]*o;i=Math.round(i);const a=[this.imgHeight,i];switch(this.interpolation){case"bilinear":return ms.resizeBilinear(e,a);case"nearest":return ms.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...gv]} are supported`)}})}}return n.className="RandomWidth",n})()),Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const D9=_p;let F9=(()=>{class n extends ha{nextDataId(){return n.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new wi(this,wr())}write(e,s,r){this.firstUse&&(this.firstUse=!1,J().get("IS_NODE")&&xr("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:r,refCount:1}),o}makeTensorInfo(e,s,r){let o;if("string"===s&&null!=r&&r.length>0&&yr(r[0])){const i=r.map(a=>wo(a));o=this.write(i,e,s)}else o=this.write(r,e,s);return{dataId:o,shape:e,dtype:s}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,s,r,o,i){this.data.set(e,{values:s,dtype:o,refCount:i})}numDataIds(){return this.data.numDataIds()}read(e){var s=this;return(0,ce.Z)(function*(){return s.readSync(e)})()}readSync(e){const{dtype:s,complexTensorInfos:r}=this.data.get(e);return"complex64"===s?li(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):Ci(this.data.get(e).values,s)}bufferSync(e){const s=this.readSync(e.dataId);if("string"===e.dtype)try{const r=s.map(o=>Zo(o));return kt(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return kt(e.shape,e.dtype,s)}makeOutput(e,s,r){return wr().makeTensorFromTensorInfo(this.makeTensorInfo(s,r,e),this)}disposeData(e,s=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!s&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:r}=this.data.get(e);null!=r&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}time(e){return(0,ce.Z)(function*(){const s=Ds();return e(),{kernelMs:Ds()-s}})()}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){je([e],"where");const s=this.readSync(e.dataId);return D9(e.shape,s)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}return n.nextDataId=0,n})();function zo(n){return(t,e,s)=>{const r=Cn(e,t.length);for(let o=0;o<t.length;++o)r[o]=n(t[o],s);return r}}function an(n,t,e){return na(n,zo(t),e)}function na(n,t,e){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;je(i,n);const a=o,l=a.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=ui(l)}else u=l;const c=e||i.dtype,h=t(u,c,r);return a.makeTensorInfo(i.shape,c,h)}}Km("cpu",()=>new F9,1);const $v=an(Pt,n=>n>=0?n:Math.exp(n)-1),L9={kernelName:Pt,backendName:"cpu",kernelFunc:$v};function Bo(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const P9={kernelName:xl,backendName:"cpu",kernelFunc:Bo};function Rv(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:o}=s;je([r],"leakyRelu");const i=ie(r.shape),a=e.data.get(r.dataId).values,l=$n("float32",i);for(let u=0;u<a.length;u++)l[u]=a[u]<0?o*a[u]:a[u];return e.makeTensorInfo(r.shape,"float32",l)}const M9={kernelName:sc,backendName:"cpu",kernelFunc:Rv};function qn(n){return(t,e,s,r,o)=>{const i=yt(t,e),a=i.length,l=Ye(i),c=$n(o,ie(i)),h=t.length,d=e.length,p=Ye(t),f=Ye(e),g=_a(t,i),m=_a(e,i);if(g.length+m.length===0)for(let y=0;y<c.length;++y)c[y]=n(s[y%s.length],r[y%r.length]);else for(let y=0;y<c.length;++y){const b=xo(y,a,l),S=b.slice(-h);g.forEach(R=>S[R]=0);const w=br(S,h,p),I=b.slice(-d);m.forEach(R=>I[R]=0);const _=br(I,d,f);c[y]=n(s[w],r[_])}return[c,i]}}const z9=qn((n,t)=>n<0?t*n:n);function Dv(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t;je([s,r],"prelu");const o=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,[a,l]=z9(s.shape,r.shape,o,i,"float32");return e.makeTensorInfo(l,"float32",a)}const B9={kernelName:Sc,backendName:"cpu",kernelFunc:Dv},Fv=an($l,n=>Math.max(0,n)),V9={kernelName:$l,backendName:"cpu",kernelFunc:Fv},Ov=an(Rl,n=>Math.min(Math.max(0,n),6)),W9={kernelName:Rl,backendName:"cpu",kernelFunc:Ov},U9=zo(n=>1/(1+Math.exp(-n))),Lv=an(zl,n=>1/(1+Math.exp(-n))),G9={kernelName:zl,backendName:"cpu",kernelFunc:Lv};function Ff(n,t,e,s,r){if("linear"===e)return Bo({inputs:{x:t},backend:n});if("relu"===e)return Fv({inputs:{x:t},backend:n});if("elu"===e)return $v({inputs:{x:t},backend:n});if("relu6"===e)return Ov({inputs:{x:t},backend:n});if("prelu"===e)return Dv({inputs:{x:t,alpha:s},backend:n});if("leakyrelu"===e)return Rv({inputs:{x:t},backend:n,attrs:{alpha:r}});if("sigmoid"===e)return Lv({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function lr(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,o=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,a=e.makeTensorInfo(s.shape,"complex64");return e.data.get(a.dataId).complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",o),imag:e.makeTensorInfo(r.shape,"float32",i)},a}const H9={kernelName:N,backendName:"cpu",kernelFunc:lr};function Of(n,t,e="float32"){if("complex64"===e)return lr({inputs:{real:Of(n,t,"float32"),imag:Of(n,t,"float32")},backend:n});const s=Un(ie(t),e);return n.makeTensorInfo(t,e,s)}function Ka(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.real,o=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,o)}const j9={kernelName:vd,backendName:"cpu",kernelFunc:Ka};function Pv(n,t,e,s){if("int32"===s)return[t,"int32",Int32Array.from(n)];if("bool"===s){const r=Pi([0],e),[o,i]=qn((a,l)=>a!==l?1:0)(t,[],n,r,"bool");return[i,"bool",o]}throw new Error(`Error in Cast: failed to cast ${e} to ${s}`)}function sa(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:o}=s;if("complex64"===o){if("complex64"===r.dtype)return Bo({inputs:{x:r},backend:e});const c=Of(e,r.shape,r.dtype),h=sa({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),d=lr({inputs:{real:h,imag:c},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),d}if("complex64"===r.dtype){const c=Ka({inputs:{input:r},backend:e}),h=sa({inputs:{x:c},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(c),h}if(!Lt(r.dtype,o)){const c=Bo({inputs:{x:r},backend:e});return{dataId:c.dataId,shape:c.shape,dtype:o}}const i=e.data.get(r.dataId).values,[a,l,u]=Pv(i,r.shape,r.dtype,o);return e.makeTensorInfo(a,l,u)}const K9={kernelName:Oi,backendName:"cpu",kernelFunc:sa};function as(n,t,e,s){return null==e?({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;je([i,a],n);const u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,h="string"===i.dtype?ui(u):u,d="string"===i.dtype?ui(c):c,p=s||i.dtype,[f,g]=t(i.shape,a.shape,h,d,p);return l.makeTensorInfo(g,p,f)}:({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;if("complex64"===i.dtype||"complex64"===a.dtype){const u=sa({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),d=c.complexTensorInfos.imag,p=l.data.get(c.complexTensorInfos.real.dataId).values,f=l.data.get(d.dataId).values,g=sa({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),m=l.data.get(g.dataId),b=m.complexTensorInfos.imag,S=l.data.get(m.complexTensorInfos.real.dataId).values,w=l.data.get(b.dataId).values,[I,_,R]=e(i.shape,a.shape,p,f,S,w),F=l.makeTensorInfo(R,"float32",I),O=l.makeTensorInfo(R,"float32",_),L=lr({inputs:{real:F,imag:O},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(F),l.disposeIntermediateTensorInfo(O),L}{const u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,h=s||i.dtype,[d,p]=t(i.shape,a.shape,u,c,h);return l.makeTensorInfo(p,h,d)}}}function x0(n){return(t,e,s,r,o,i)=>{const a=yt(t,e),l=ie(a),u=a.length,c=Ye(a),h=$n("float32",l),d=$n("float32",l),p=_a(t,a),f=_a(e,a),g=li(s,r),m=li(o,i),y=t.length,b=Ye(t),S=e.length,w=Ye(e);if(p.length+f.length===0)for(let I=0;I<h.length;I++){const _=I%g.length,R=I%m.length,F=n(g[2*_],g[2*_+1],m[2*R],m[2*R+1]);h[I]=F.real,d[I]=F.imag}else for(let I=0;I<h.length;I++){const _=xo(I,u,c),R=_.slice(-y);p.forEach(Q=>R[Q]=0);const F=br(R,y,b),O=_.slice(-S);f.forEach(Q=>O[Q]=0);const L=br(O,S,w),j=n(g[2*F],g[2*F+1],m[2*L],m[2*L+1]);h[I]=j.real,d[I]=j.imag}return[h,d,a]}}const Mv=qn((n,t)=>n+t),q9=x0((n,t,e,s)=>({real:n+e,imag:t+s})),Cu=as(jo,Mv,q9),X9={kernelName:jo,backendName:"cpu",kernelFunc:Cu};function wn(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:o}=s,i=ie(r.shape),a=Si(o,i),l=ie(a);E(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(r.dataId);const u=e.data.get(r.dataId);if(null!=u.complexTensorInfos){const h=u.complexTensorInfos.imag;u.complexTensorInfos.real.shape=a,h.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}const Z9={kernelName:Cc,backendName:"cpu",kernelFunc:wn};function zv(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o}=t,{transposeA:i,transposeB:a}=s;je([r,o],"matMul");const l=r.shape.length,u=o.shape.length,c=i?r.shape[l-2]:r.shape[l-1],h=a?o.shape[u-1]:o.shape[u-2],d=i?r.shape[l-1]:r.shape[l-2],p=a?o.shape[u-2]:o.shape[u-1],f=r.shape.slice(0,-2),g=o.shape.slice(0,-2),m=ie(f),y=ie(g),S=yt(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([d,p]);E(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${i} and transposeB=${a} must match.`);const I=a?[y,p,h]:[y,h,p],_=wn({inputs:{x:r},backend:e,attrs:{shape:i?[m,c,d]:[m,d,c]}}),R=wn({inputs:{x:o},backend:e,attrs:{shape:I}}),F=i?_.shape[1]:_.shape[2],O=i?_.shape[2]:_.shape[1],L=a?R.shape[1]:R.shape[2],j=Math.max(m,y),Q=e.data.get(_.dataId).values,te=e.data.get(R.dataId).values,se=Ye(_.shape),oe=Ye(R.shape),[ae,ue,re]=i?[se[0],1,se[1]]:[se[0],se[1],1],[de,ve,Ie]=a?[1,oe[1],oe[0]]:[oe[1],1,oe[0]],Ee=O*L,Ce=kt([j,O,L],_.dtype),Fe=Ce.values,$e=e.blockSize;for(let Le=0;Le<j;Le++){const Je=Le%m,st=Le%y;for(let tt=0;tt<O;tt+=$e){const bt=Math.min(tt+$e,O);for(let et=0;et<L;et+=$e){const Kt=Math.min(et+$e,L);for(let ln=0;ln<F;ln+=$e){const Sn=Math.min(ln+$e,F);for(let Yt=tt;Yt<bt;Yt++)for(let nn=et;nn<Kt;nn++){let In=0;for(let un=ln;un<Sn;un++)In+=Q[Je*ae+Yt*ue+un*re]*te[un*de+nn*ve+st*Ie];Fe[Le*Ee+(Yt*L+nn)]+=In}}}}}return e.disposeIntermediateTensorInfo(_),e.disposeIntermediateTensorInfo(R),e.makeTensorInfo(S,Ce.dtype,Ce.values)}const Y9={kernelName:Ri,backendName:"cpu",kernelFunc:zv},Q9={kernelName:Mc,backendName:"cpu",kernelFunc:function J9(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const g=[];d=zv({inputs:{a:r,b:o},attrs:{transposeA:l,transposeB:u},backend:e}),i&&(p=Cu({inputs:{a:d,b:i},backend:e}),g.push(d),d=p),c&&(f=Ff(e,d,c,a,h),g.push(d),d=f);for(const y of g)e.disposeIntermediateTensorInfo(y);return d}};function Bv(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const eF={kernelName:ma,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend;je(t,"abs");let s=new Float32Array(ie(t.shape));return s=Bv(e.data.get(t.dataId).values),e.makeOutput(s,t.shape,t.dtype)}},tF=an(Ni,n=>Math.acos(n)),nF={kernelName:Ni,backendName:"cpu",kernelFunc:tF},sF=an(ki,n=>Math.acosh(n)),rF={kernelName:ki,backendName:"cpu",kernelFunc:sF},iF={kernelName:Ti,backendName:"cpu",kernelFunc:function oF(n){const{inputs:t,backend:e}=n,s=t;je(t,"addN");const r=s.map(a=>e.data.get(a.dataId).values),o=kt(s[0].shape,s[0].dtype),i=o.values;for(let a=0;a<s.length;a++){const l=r[a];for(let u=0;u<i.length;u++)i[u]+=l[u]}return e.makeTensorInfo(o.shape,o.dtype,o.values)}};function v0(n,t,e,s,r){const o=t.length,i=ie(t),a=Ye(t),l=Ye(r),u=$n(e,ie(r));for(let c=0;c<i;++c){const h=xo(c,o,a),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];u[br(d,o,l)]=n[c]}return u}function Zs(n){const{inputs:t,attrs:e,backend:s}=n,{x:r}=t,{perm:o}=e;je(r,"transpose");const a=new Array(r.shape.length);for(let h=0;h<a.length;h++)a[h]=r.shape[o[h]];const u=v0(s.data.get(r.dataId).values,r.shape,r.dtype,o,a);return{dataId:s.write(u,a,r.dtype),shape:a,dtype:r.dtype}}const aF={kernelName:wa,backendName:"cpu",kernelFunc:Zs},uF={kernelName:ul,backendName:"cpu",kernelFunc:function lF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s;je(r,"all");const a=St(o,r.shape);let l=a;const u=On(l,r.shape.length);let c=r;null!=u&&(c=Zs({inputs:{x:r},backend:e,attrs:{perm:u}}),l=Hn(l.length,r.shape.length)),Ss("all",l,c.shape.length);const[h,d]=fs(c.shape,l),p=ie(d),f=Un(ie(h),c.dtype),g=e.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let S=g[b];for(let w=0;w<p;++w)S=S&&g[b+w];f[y]=S}null!=u&&e.disposeIntermediateTensorInfo(c);const m=e.makeTensorInfo(h,c.dtype,f);if(i){const b=wn({inputs:{x:m},backend:e,attrs:{shape:Gn(h,a)}});return e.disposeIntermediateTensorInfo(m),b}return m}},hF={kernelName:cl,backendName:"cpu",kernelFunc:function cF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s;je(r,"any");const a=St(o,r.shape);let l=a;const u=On(l,r.shape.length);let c=r;null!=u&&(c=Zs({inputs:{x:r},backend:e,attrs:{perm:u}}),l=Hn(l.length,r.shape.length)),Ss("any",l,c.shape.length);const[h,d]=fs(c.shape,l),p=ie(d),f=Un(ie(h),c.dtype),g=e.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let S=g[b];for(let w=0;w<p;++w)S=S||g[b+w];f[y]=S}null!=u&&e.disposeIntermediateTensorInfo(c);const m=e.makeTensorInfo(h,c.dtype,f);if(i){const b=wn({inputs:{x:m},backend:e,attrs:{shape:Gn(h,a)}});return e.disposeIntermediateTensorInfo(m),b}return m}},pF={kernelName:Ko,backendName:"cpu",kernelFunc:function dF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;je(r,"argMax");let i=St(o,r.shape);const a=On(i,r.shape.length);let l=r;const u=[];null!=a&&(l=Zs({inputs:{x:r},backend:e,attrs:{perm:a}}),u.push(l),i=Hn(i.length,l.shape.length)),i=[i[0]],Ss("argMax",i,l.shape.length);const[c,h]=fs(l.shape,i),p=Un(ie(c),"int32"),f=ie(h),g=e.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const y=m*f;let b=g[y],S=0;for(let w=0;w<f;++w){const I=g[y+w];I>b&&(b=I,S=w)}p[m]=S}return u.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(c,"int32",p)}},mF={kernelName:ga,backendName:"cpu",kernelFunc:function fF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;je(r,"argMin");let i=St(o,r.shape);const a=On(i,r.shape.length);let l=r;const u=[];null!=a&&(l=Zs({inputs:{x:r},backend:e,attrs:{perm:a}}),u.push(l),i=Hn(i.length,l.shape.length)),i=[i[0]],Ss("argMin",i,l.shape.length);const[c,h]=fs(l.shape,i),p=Un(ie(c),"int32"),f=ie(h),g=e.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const y=m*f;let b=g[y],S=0;for(let w=0;w<f;++w){const I=g[y+w];I<b&&(b=I,S=w)}p[m]=S}return u.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(c,"int32",p)}},gF=an(_i,n=>Math.asin(n)),yF={kernelName:_i,backendName:"cpu",kernelFunc:gF},bF=an(Ei,n=>Math.asinh(n)),xF={kernelName:Ei,backendName:"cpu",kernelFunc:bF},vF=an(Ai,n=>Math.atan(n)),wF={kernelName:Ai,backendName:"cpu",kernelFunc:vF},SF=qn((n,t)=>Math.atan2(n,t)),IF=as($i,SF),CF={kernelName:$i,backendName:"cpu",kernelFunc:IF},NF=an(vo,n=>Math.atanh(n)),kF={kernelName:vo,backendName:"cpu",kernelFunc:NF};function w0(n,t,e,s,r,o){const i=r.strideHeight,a=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=kt(r.outShape,e),m=g.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],S=r.outShape[3];for(let w=0;w<r.batchSize;++w){const I=w*y,_=w*s[0];for(let R=0;R<r.inChannels;++R)for(let F=0;F<r.outHeight;++F){const O=F*i-d,L=Math.max(0,O),j=Math.min(r.inHeight,c+O),Q=I+F*b;for(let te=0;te<r.outWidth;++te){const se=te*a-p,oe=Math.max(0,se),ae=Math.min(r.inWidth,h+se);let ue=f,re=0,de=0;for(let Ie=L;Ie<j;Ie+=l){const Ee=_+Ie*s[1];for(let Ce=oe;Ce<ae;Ce+=u){const $e=n[Ee+Ce*s[2]+R];"max"===o&&$e>ue?ue=$e:"avg"===o&&(re+=$e,de++)}if(isNaN(ue))break}m[Q+te*S+R]="avg"===o?re/de:ue}}}return g}function Vv(n,t,e,s,r=!1,o=!1){const i=kt(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,g=kt(t,e,n);for(let m=0;m<s.batchSize;++m)for(let y=0;y<s.inChannels;++y)for(let b=0;b<s.outHeight;++b){const S=b*a-p;let w=S;for(;w<0;)w+=u;const I=Math.min(s.inHeight,h+S);for(let _=0;_<s.outWidth;++_){const R=_*l-f;let F=R;for(;F<0;)F+=c;const O=Math.min(s.inWidth,d+R);let L=Number.NEGATIVE_INFINITY,j=-1;for(let Q=w;Q<I;Q+=u){const te=Q-S;for(let se=F;se<O;se+=c){const oe=se-R,ae=g.get(m,Q,se,y);ae>L&&(L=ae,j=r?o?((m*s.inHeight+Q)*s.inWidth+se)*s.inChannels+y:(Q*s.inWidth+se)*s.inChannels+y:te*d+oe)}}i.set(j,m,b,_,y)}}return i}function Wv(n,t,e,s,r,o){const i=r.strideDepth,a=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,g=r.padInfo.front,m=r.padInfo.top,y=r.padInfo.left,b="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,S=kt(r.outShape,e),w=S.values,I=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],_=r.outShape[2]*r.outShape[3]*r.outShape[4],R=r.outShape[3]*r.outShape[4],F=r.outShape[4];for(let O=0;O<r.batchSize;++O){const L=O*I,j=O*s[0];for(let Q=0;Q<r.inChannels;++Q)for(let te=0;te<r.outDepth;++te){const se=te*i-g;let oe=se;for(;oe<0;)oe+=u;const ae=Math.min(r.inDepth,d+se),ue=L+te*_;for(let re=0;re<r.outHeight;++re){const de=re*a-m;let ve=de;for(;ve<0;)ve+=c;const Ie=Math.min(r.inHeight,p+de),Ee=ue+re*R;for(let Ce=0;Ce<r.outWidth;++Ce){const Fe=Ce*l-y;let $e=Fe;for(;$e<0;)$e+=h;const Le=Math.min(r.inWidth,f+Fe),Je=Ee+Ce*F;let st=b,tt=0,bt=0;for(let Kt=oe;Kt<ae;Kt+=u){const ln=j+Kt*s[1];for(let Sn=ve;Sn<Ie;Sn+=c){const Yt=ln+Sn*s[2];for(let nn=$e;nn<Le;nn+=h){const un=n[Yt+nn*s[3]+Q];if("max"===o&&un>st?st=un:"avg"===o&&(tt+=un,bt++),isNaN(st))break}if(isNaN(st))break}if(isNaN(st))break}w[Je+Q]="avg"===o?tt/Math.max(bt,1):st}}}}return S}const EF={kernelName:ya,backendName:"cpu",kernelFunc:function _F(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;je(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s;E(vs(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=Lr(r.shape,o,i,1,a,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&At(c.inShape,c.outShape))h=Bo({inputs:{x:r},backend:e});else{const d=e.data.get(r.dataId).values,p=Ye(r.shape),f=w0(d,0,r.dtype,p,c,"avg");h=e.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}},$F={kernelName:ba,backendName:"cpu",kernelFunc:function AF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=s;je(r,"avgPool3d");const c=ei(r.shape,o,i,1,a,l,u),d=Wv(e.data.get(r.dataId).values,0,r.dtype,Ye(r.shape),c,"avg");return e.makeTensorInfo(d.shape,"float32",d.values)}},DF={kernelName:dl,backendName:"cpu",kernelFunc:function RF(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=s;je([r,o],"avgPool3DGrad");const c=ei(o.shape,i,a,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,S=c.dilationWidth,w=c.effectiveFilterDepth,I=c.effectiveFilterHeight,_=c.effectiveFilterWidth,R=w-1-c.padInfo.front,F=_-1-c.padInfo.left,O=I-1-c.padInfo.top,L=kt(o.shape,"float32"),j=1/(f*g*m),Q=e.bufferSync(r);for(let te=0;te<c.batchSize;++te)for(let se=0;se<c.inChannels;++se)for(let oe=0;oe<c.inDepth;++oe)for(let ae=0;ae<c.inHeight;++ae)for(let ue=0;ue<c.inWidth;++ue){const re=oe-R,de=ae-O,ve=ue-F;let Ie=0;for(let Ee=0;Ee<w;Ee+=y){const Ce=(re+Ee)/h;if(!(Ce<0||Ce>=c.outDepth||Math.floor(Ce)!==Ce))for(let Fe=0;Fe<I;Fe+=b){const $e=(de+Fe)/d;if(!($e<0||$e>=c.outHeight||Math.floor($e)!==$e))for(let Le=0;Le<_;Le+=S){const Je=(ve+Le)/p;Je<0||Je>=c.outWidth||Math.floor(Je)!==Je||(Ie+=Q.get(te,Ce,$e,Je,se))}}}L.set(Ie*j,te,oe,ae,ue,se)}return e.makeTensorInfo(L.shape,L.dtype,L.values)}},OF={kernelName:hl,backendName:"cpu",kernelFunc:function FF(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,i=o;je([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,c=Lr(i.shape,a,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,S=b-1-c.padInfo.left,w=y-1-c.padInfo.top,I=kt(i.shape,"float32"),_=1/(p*f),R=e.data.get(r.dataId).values,F=kt(r.shape,"float32",R);for(let O=0;O<c.batchSize;++O)for(let L=0;L<c.inChannels;++L)for(let j=0;j<c.inHeight;++j)for(let Q=0;Q<c.inWidth;++Q){const te=j-w,se=Q-S;let oe=0;for(let ae=0;ae<y;ae+=g){const ue=(te+ae)/h;if(!(ue<0||ue>=c.outHeight||Math.floor(ue)!==ue))for(let re=0;re<b;re+=m){const de=(se+re)/d;de<0||de>=c.outWidth||Math.floor(de)!==de||(oe+=F.get(O,ue,de,L))}}I.set(oe*_,O,j,Q,L)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}},PF={kernelName:ec,backendName:"cpu",kernelFunc:function LF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,scale:o,offset:i,mean:a,variance:l}=t;E(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),je([r,a,l,o,i],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=e.data.get(r.dataId).values,h=e.data.get(a.dataId).values,d=e.data.get(l.dataId).values,p=o?e.data.get(o.dataId).values:new Float32Array([1]),f=i?e.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),m=f.length,y=p.length,b=d.length,S=h.length;let w=0,I=0,_=0,R=0;for(let F=0;F<c.length;++F)g[F]=f[w++]+(c[F]-h[I++])*p[_++]/Math.sqrt(d[R++]+u),w>=m&&(w=0),I>=S&&(I=0),_>=y&&(_=0),R>=b&&(R=0);return e.makeTensorInfo(r.shape,r.dtype,g)}};function Uv(n,t,e,s,r){const o=gg(s,t,e),i=ie(e),a=Ye(s);if(o){const h=yg(t,a);return"string"===r?n.slice(h,h+i):n.subarray(h,h+i)}const u=kt(s,r,"string"===r?ui(n):n),c=kt(e,r);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),p=d.map((f,g)=>f+t[g]);c.set(u.get(...p),...d)}return"string"===r?Y4(c.values):c.values}function qa(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,size:i}=s;je(r,"slice");const[a,l]=np(r,o,i);fg(r,a,l);const c=Uv(e.data.get(r.dataId).values,a,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,c)}const MF={kernelName:Ec,backendName:"cpu",kernelFunc:qa},BF={kernelName:Di,backendName:"cpu",kernelFunc:function zF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,crops:i}=s;je([r],"batchToSpaceND");const a=o.reduce((y,b)=>y*b),l=bh(r.shape,o,a),u=xh(l.length,o.length),c=vh(r.shape,o,a),h=z1(i,o.length),d=B1(c,i,o.length),p=wn({inputs:{x:r},backend:e,attrs:{shape:l}}),f=Zs({inputs:{x:p},backend:e,attrs:{perm:u}}),g=wn({inputs:{x:f},backend:e,attrs:{shape:c}}),m=qa({inputs:{x:g},backend:e,attrs:{begin:h,size:d}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),m}};function S0(n,t,e,s,r){const o=ie(s),i=Un(r,e);for(let a=0;a<n.length;a++){const l=n[a];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(i[l]+=o>0?t[a]:1)}return i}function Gv(n,t,e,s=!1){const r=n.shape[0],o=n.shape[1],i=kt([r,e],t.dtype);for(let a=0;a<r;a++)for(let l=0;l<o;l++){const u=n.get(a,l);if(u<0)throw new Error("Input x must be non-negative!");u>=e||i.set(s?1:t.size>0?i.get(a,u)+t.get(a,l):i.get(a,u)+1,a,u)}return i}const WF={kernelName:xa,backendName:"cpu",kernelFunc:function VF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:i}=s,u=S0(e.data.get(r.dataId).values,e.data.get(o.dataId).values,o.dtype,o.shape,i);return e.makeTensorInfo([i],o.dtype,u)}},Hv=qn((n,t)=>n&t),UF=as(Fi,Hv),GF={kernelName:Fi,backendName:"cpu",kernelFunc:UF},jF={kernelName:va,backendName:"cpu",kernelFunc:function HF(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,o=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,a=yt(Array.from(o),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}},jv=zo(n=>Math.ceil(n)),KF=na(qo,jv),qF={kernelName:qo,backendName:"cpu",kernelFunc:KF},XF=an(v,(n,t)=>n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n),ZF={kernelName:v,backendName:"cpu",kernelFunc:XF},YF={kernelName:k,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(ie(t.shape)),r=e.data.get(t.dataId),i=r.complexTensorInfos.imag,a=e.data.get(r.complexTensorInfos.real.dataId).values,l=e.data.get(i.dataId).values;for(let u=0;u<a.length;u++)s[u]=Math.hypot(a[u],l[u]);return e.makeOutput(s,t.shape,"float32")}};function Kv(n,t,e,s){const r=Cn(e,ie(t));if(s&&"string"!==e){let o=0;n.forEach(i=>{const a=ie(i.shape);r.set(i.vals,o),o+=a})}else{let o=0;n.forEach(i=>{const a="string"===e?ui(i.vals):i.vals;let l=0;for(let u=0;u<i.shape[0];++u){const c=u*t[1]+o;for(let h=0;h<i.shape[1];++h)r[c+h]=a[l++]}o+=i.shape[1]})}return r}function Nu(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.imag,o=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,o)}const JF={kernelName:id,backendName:"cpu",kernelFunc:Nu};function ku(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,o=St(r,t[0].shape)[0];L1(t.map(g=>g.shape),o);let a=_o(t.map(g=>g.shape),o);if(0===ie(a))return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(g=>ie(g.shape)>0);if(1===l.length)return Bo({inputs:{x:l[0]},backend:e});if("complex64"===l[0].dtype){const g=l.map(w=>Ka({inputs:{input:w},backend:e})),m=l.map(w=>Nu({inputs:{input:w},backend:e})),y=ku({inputs:g,backend:e,attrs:{axis:o}}),b=ku({inputs:m,backend:e,attrs:{axis:o}}),S=lr({inputs:{real:y,imag:b},backend:e});return g.forEach(w=>e.disposeIntermediateTensorInfo(w)),m.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),S}const u=l.map(g=>{const y=[-1,ie(g.shape.slice(o))];return wn({inputs:{x:g},backend:e,attrs:{shape:y}})}),c=u.map(g=>({vals:e.data.get(g.dataId).values,shape:g.shape}));a=_o(u.map(g=>g.shape),1);const d=Kv(c,a,t[0].dtype,1===u[0].shape[0]),p=_o(l.map(g=>g.shape),o),f=e.makeTensorInfo(p,t[0].dtype,d);return u.forEach(g=>e.disposeIntermediateTensorInfo(g)),f}const QF={kernelName:P,backendName:"cpu",kernelFunc:ku};function qv(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=s;je([r,o],"conv2d");const h=ti(l),d=ps(r.shape,o.shape,i,u,a,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,S="channelsLast"===d.dataFormat,w=new Zn(d.outShape,r.dtype),I=Ye(r.shape),_=Ye(o.shape),R=I[0],F=S?I[1]:I[2],O=S?I[2]:1,L=S?1:I[1],j=w.strides[0],Q=S?w.strides[1]:w.strides[2],te=S?w.strides[2]:1,se=S?1:w.strides[1],oe=e.data.get(r.dataId).values,ae=e.data.get(o.dataId).values,ue=w.values;for(let re=0;re<d.batchSize;++re){const de=re*R,ve=re*j;for(let Ie=0;Ie<d.outHeight;++Ie){const Ee=ve+Ie*Q,Ce=Ie*d.strideHeight-b;for(let Fe=0;Fe<p;++Fe){const $e=Ce+Fe*g;if($e<0||$e>=d.inHeight)continue;const Le=Fe*_[0],Je=de+$e*F;for(let st=0;st<d.outWidth;++st){const tt=Ee+st*te,bt=st*d.strideWidth-y;for(let et=0;et<f;++et){const Kt=bt+et*m;if(Kt<0||Kt>=d.inWidth)continue;const Sn=Je+Kt*O;let Yt=Le+et*_[1];for(let nn=0;nn<d.inChannels;++nn){const In=oe[Sn+nn*L];for(let un=0;un<d.outChannels;++un)ue[tt+un*se]+=In*ae[Yt+un];Yt+=d.outChannels}}}}}}return e.makeTensorInfo(w.shape,w.dtype,ue)}const eO={kernelName:Z,backendName:"cpu",kernelFunc:qv},nO={kernelName:pe,backendName:"cpu",kernelFunc:function tO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;je([r,o],"conv2dBackpropFilter");const h=ti(l),d=ps(r.shape,c,i,1,a,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,y="channelsLast"===d.dataFormat,b=new Zn(d.filterShape,"float32"),S=d.padInfo.left,w=d.padInfo.top,I=e.data.get(r.dataId).values,_=e.data.get(o.dataId).values,R=new Zn(r.shape,r.dtype,I),F=new Zn(o.shape,o.dtype,_);for(let O=0;O<g;++O){const L=Math.max(0,Math.ceil((w-O)/p)),j=Math.min(d.outHeight,(d.inHeight+w-O)/p);for(let Q=0;Q<m;++Q){const te=Math.max(0,Math.ceil((S-Q)/f)),se=Math.min(d.outWidth,(d.inWidth+S-Q)/f);for(let oe=0;oe<d.inChannels;++oe)for(let ae=0;ae<d.outChannels;++ae){let ue=0;for(let re=0;re<d.batchSize;++re)for(let de=L;de<j;++de){const ve=O+de*p-w;for(let Ie=te;Ie<se;++Ie){const Ee=Q+Ie*f-S;ue+=y?R.get(re,ve,Ee,oe)*F.get(re,de,Ie,ae):R.get(re,oe,ve,Ee)*F.get(re,ae,de,Ie)}}b.set(ue,O,Q,oe,ae)}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}},rO={kernelName:ne,backendName:"cpu",kernelFunc:function sO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=s;je([r,o],"conv2dBackpropInput");const h=Ye(o.shape),d=Ye(r.shape);let p=ti(u);const f=ps(i,o.shape,a,1,l,c,!1,p),g=new Zn(f.inShape,"float32"),m=g.values,y=e.data.get(r.dataId).values,b=e.data.get(o.dataId).values,[S,w,I]=h,{batchSize:_,filterHeight:R,filterWidth:F,inChannels:O,inHeight:L,inWidth:j,outChannels:Q,outHeight:te,outWidth:se,strideHeight:oe,strideWidth:ae}=f;p=f.dataFormat;const ue=R-1-f.padInfo.top,re=F-1-f.padInfo.left,de="channelsLast"===p,ve=g.strides[0],Ie=de?g.strides[1]:g.strides[2],Ee=de?g.strides[2]:1,Ce=de?1:g.strides[1],Fe=d[0],$e=de?d[1]:d[2],Le=de?d[2]:1,Je=de?1:d[1];for(let st=0;st<_;++st)for(let tt=0;tt<O;++tt)for(let bt=0;bt<L;++bt){const et=bt-ue,Kt=Math.max(0,Math.ceil(et/oe)),ln=Math.min(te,(R+et)/oe);for(let Sn=0;Sn<j;++Sn){const Yt=Sn-re,nn=Math.max(0,Math.ceil(Yt/ae)),In=Math.min(se,(F+Yt)/ae);let un=0;for(let ls=Kt;ls<ln;++ls){const Ys=ls*oe-et;for(let Ns=nn;Ns<In;++Ns){const hr=Fe*st+$e*ls+Le*Ns,Js=S*(R-1-Ys)+w*(F-1-(Ns*ae-Yt))+I*tt;for(let dr=0;dr<Q;++dr)un+=y[hr+Je*dr]*b[Js+dr]}}m[ve*st+Ie*bt+Ee*Sn+Ce*tt]=un}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}},iO={kernelName:fe,backendName:"cpu",kernelFunc:function oO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:i,pad:a,dilations:l}=s;je([r,o],"conv3d");const u=Wi(r.shape,o.shape,i,l,a),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,y=m.front,b=m.left,S=m.top,w=new Zn(u.outShape,r.dtype),I=e.data.get(r.dataId).values,_=e.data.get(o.dataId).values,R=w.values,F=Ye(r.shape),O=Ye(o.shape);for(let L=0;L<u.batchSize;++L){const j=L*F[0],Q=L*w.strides[0];for(let te=0;te<u.outDepth;++te){const se=Q+te*w.strides[1],oe=te*u.strideDepth-y;for(let ae=0;ae<c;++ae){const ue=oe+ae*p;if(ue<0||ue>=u.inDepth)continue;const re=ae*O[0],de=j+ue*F[1];for(let ve=0;ve<u.outHeight;++ve){const Ie=se+ve*w.strides[2],Ee=ve*u.strideHeight-S;for(let Ce=0;Ce<h;++Ce){const Fe=Ee+Ce*f;if(Fe<0||Fe>=u.inHeight)continue;const $e=re+Ce*O[1],Le=de+Fe*F[2];for(let Je=0;Je<u.outWidth;++Je){const st=Ie+Je*u.outChannels,tt=Je*u.strideWidth-b;for(let bt=0;bt<d;++bt){const et=tt+bt*g;if(et<0||et>=u.inWidth)continue;const ln=Le+et*u.inChannels;let Sn=$e+bt*O[2];for(let Yt=0;Yt<u.inChannels;++Yt){const nn=I[ln+Yt];for(let In=0;In<u.outChannels;++In)R[st+In]+=nn*_[Sn+In];Sn+=u.outChannels}}}}}}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}},lO={kernelName:_e,backendName:"cpu",kernelFunc:function aO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:i,pad:a,filterShape:l}=s;je([r,o],"conv3dBackpropFilterV2");const u=Ye(r.shape),c=Ye(o.shape),h=Wi(r.shape,l,i,1,a),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,y=h.filterWidth,b=new Zn(h.filterShape,"float32"),S=b.values,[w,I,_,R]=b.strides,F=e.data.get(o.dataId).values,[O,L,j,Q]=c,te=e.data.get(r.dataId).values,[se,oe,ae,ue]=u,re=h.padInfo.front,de=h.padInfo.left,ve=h.padInfo.top;for(let Ie=0;Ie<g;++Ie){const Ee=Math.max(0,Math.ceil((re-Ie)/d)),Ce=Math.min(h.outDepth,(h.inDepth+re-Ie)/d),Fe=Ie*w;for(let $e=0;$e<m;++$e){const Le=Math.max(0,Math.ceil((ve-$e)/p)),Je=Math.min(h.outHeight,(h.inHeight+ve-$e)/p),st=$e*I+Fe;for(let tt=0;tt<y;++tt){const bt=Math.max(0,Math.ceil((de-tt)/f)),et=Math.min(h.outWidth,(h.inWidth+de-tt)/f),Kt=tt*_+st;for(let ln=0;ln<h.inChannels;++ln){const Sn=ln*R+Kt;for(let Yt=0;Yt<h.outChannels;++Yt){let nn=0;for(let In=0;In<h.batchSize;++In){const un=In*se,cr=In*O;for(let ls=Ee;ls<Ce;++ls){const Ns=(Ie+ls*d-re)*oe+un,Wo=ls*L+cr;for(let hr=Le;hr<Je;++hr){const dr=($e+hr*p-ve)*ae+Ns,Gr=hr*j+Wo;for(let fo=bt;fo<et;++fo)nn+=te[(tt+fo*f-de)*ue+dr+ln]*F[fo*Q+Gr+Yt]}}}S[Sn+Yt]=nn}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}},cO={kernelName:Be,backendName:"cpu",kernelFunc:function uO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{pad:i,strides:a,inputShape:l}=s;je([r],"conv3dBackpropInputV2");const u=Ye(r.shape),c=Ye(o.shape),h=Wi(l,o.shape,a,1,i),d=new Zn(h.inShape,"float32"),p=d.values,[f,g,m,y]=d.strides,b=e.data.get(r.dataId).values,[S,w,I,_]=u,R=e.data.get(o.dataId).values,[F,O,L,j]=c,{batchSize:Q,filterDepth:te,filterHeight:se,filterWidth:oe,inChannels:ae,inDepth:ue,inHeight:re,inWidth:de,outChannels:ve,outDepth:Ie,outHeight:Ee,outWidth:Ce,strideDepth:Fe,strideHeight:$e,strideWidth:Le}=h,Je=te-1-h.padInfo.front,st=se-1-h.padInfo.top,tt=oe-1-h.padInfo.left;for(let bt=0;bt<Q;++bt)for(let et=0;et<ae;++et)for(let Kt=0;Kt<ue;++Kt){const ln=Kt-Je,Sn=Math.max(0,Math.ceil(ln/Fe)),Yt=Math.min(Ie,(te+ln)/Fe);for(let nn=0;nn<re;++nn){const In=nn-st,un=Math.max(0,Math.ceil(In/$e)),cr=Math.min(Ee,(se+In)/$e);for(let ls=0;ls<de;++ls){const Ys=ls-tt,Ns=Math.max(0,Math.ceil(Ys/Le)),Wo=Math.min(Ce,(oe+Ys)/Le);let hr=0;for(let Js=Sn;Js<Yt;++Js){const dr=Js*Fe-ln;for(let Gr=un;Gr<cr;++Gr){const fo=Gr*$e-In;for(let Uo=Ns;Uo<Wo;++Uo){const Bu=S*bt+w*Js+I*Gr+_*Uo,um=F*(te-1-dr)+O*(se-1-fo)+L*(oe-1-(Uo*Le-Ys))+j*et;for(let sl=0;sl<ve;++sl)hr+=b[Bu+sl]*R[um+sl]}}}p[f*bt+g*Kt+m*nn+y*ls+et]=hr}}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}},hO=an(it,n=>Math.cos(n)),dO={kernelName:it,backendName:"cpu",kernelFunc:hO},pO=an(Ht,n=>Math.cosh(n)),fO={kernelName:Ht,backendName:"cpu",kernelFunc:pO},gO={kernelName:qe,backendName:"cpu",kernelFunc:function mO(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:o,boxInd:i}=t,{cropSize:a,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=o.shape[0],[g,m]=a,y=kt([f,g,m,p],"float32"),b=e.data.get(o.dataId).values,S=e.data.get(i.dataId).values,w=e.data.get(r.dataId).values,I=Ye(r.shape),_=Ye(y.shape);for(let R=0;R<f;R++){const F=4*R,O=b[F],L=b[F+1],j=b[F+2],Q=b[F+3],te=S[R];if(te>=c)continue;const se=g>1?(j-O)*(h-1)/(g-1):0,oe=m>1?(Q-L)*(d-1)/(m-1):0;for(let ae=0;ae<g;ae++){const ue=g>1?O*(h-1)+ae*se:.5*(O+j)*(h-1);if(ue<0||ue>h-1)for(let re=0;re<m;re++)for(let de=0;de<p;de++)y.values[de+re*_[2]+ae*_[1]+R*_[0]]=u;else if("bilinear"===l){const re=Math.floor(ue),de=Math.ceil(ue),ve=ue-re;for(let Ie=0;Ie<m;Ie++){const Ee=m>1?L*(d-1)+Ie*oe:.5*(L+Q)*(d-1);if(Ee<0||Ee>d-1){for(let Le=0;Le<p;Le++)y.values[Le+Ie*_[2]+ae*_[1]+R*_[0]]=u;continue}const Ce=Math.floor(Ee),Fe=Math.ceil(Ee),$e=Ee-Ce;for(let Le=0;Le<p;Le++){let Je=Le+Ce*I[2]+re*I[1]+te*I[0];const st=w[Je];Je=Le+Fe*I[2]+re*I[1]+te*I[0];const tt=w[Je];Je=Le+Ce*I[2]+de*I[1]+te*I[0];const bt=w[Je];Je=Le+Fe*I[2]+de*I[1]+te*I[0];const et=w[Je],Kt=st+(tt-st)*$e;Je=Le+Ie*_[2]+ae*_[1]+R*_[0],y.values[Je]=Kt+(bt+(et-bt)*$e-Kt)*ve}}}else for(let re=0;re<m;++re){const de=m>1?L*(d-1)+re*oe:.5*(L+Q)*(d-1);if(de<0||de>d-1){for(let Ee=0;Ee<p;Ee++)y.values[Ee+re*_[2]+ae*_[1]+R*_[0]]=u;continue}const ve=Math.round(de),Ie=Math.round(ue);for(let Ee=0;Ee<p;Ee++)y.values[Ee+re*_[2]+ae*_[1]+R*_[0]]=w[Ee+ve*I[2]+Ie*I[1]+te*I[0]]}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}},bO={kernelName:Nt,backendName:"cpu",kernelFunc:function yO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:i,reverse:a}=s;je(r,"cumprod");const l=On([o],r.shape.length);let u=r;null!=l&&(u=Zs({inputs:{x:r},backend:e,attrs:{perm:l}}));const c=Hn(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Ws(u.dtype,"int32"),d=il(ie(u.shape),h),p=e.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=a?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<p.length;y+=f)for(let b=0;b<f;b++){const S=g(y,b);if(0===b)d[S]=i?1:p[S];else{const w=g(y,b-1);d[S]=i?p[w]*d[w]:p[S]*d[w]}}const m=e.makeTensorInfo(u.shape,h,d);if(null!=l){const b=Zs({inputs:{x:m},backend:e,attrs:{perm:Gi(l)}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(u),b}return m}},vO={kernelName:mt,backendName:"cpu",kernelFunc:function xO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:i,reverse:a}=s;je(r,"cumsum");const l=On([o],r.shape.length);let u=r;null!=l&&(u=Zs({inputs:{x:r},backend:e,attrs:{perm:l}}));const c=Hn(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Ws(u.dtype,"int32"),d=Un(ie(u.shape),h),p=e.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=a?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<p.length;y+=f)for(let b=0;b<f;b++){const S=g(y,b);if(0===b)d[S]=i?0:p[S];else{const w=g(y,b-1);d[S]=i?p[w]+d[w]:p[S]+d[w]}}const m=e.makeTensorInfo(u.shape,h,d);if(null!=l){const b=Zs({inputs:{x:m},backend:e,attrs:{perm:Gi(l)}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(u),b}return m}},SO={kernelName:ct,backendName:"cpu",kernelFunc:function wO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:i,binaryOutput:a}=s;if(1===r.shape.length){const c=S0(e.data.get(r.dataId).values,e.data.get(o.dataId).values,o.dtype,o.shape,i);return e.makeTensorInfo([i],o.dtype,c)}if(2===r.shape.length){const c=Gv(e.bufferSync(r),e.bufferSync(o),i,a);return e.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},CO={kernelName:It,backendName:"cpu",kernelFunc:function IO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:o,dataFormat:i}=s;E("NHWC"===i,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const a=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*o,d=u*o,p=c/(o*o),f=e.data.get(r.dataId).values,g=new Float32Array(a*h*d*p);let m=0;for(let y=0;y<a;++y)for(let b=0;b<h;++b){const S=Math.floor(b/o),w=b%o;for(let I=0;I<d;++I){const _=Math.floor(I/o),F=(w*o+I%o)*p;for(let O=0;O<p;++O)g[m++]=f[O+F+c*(_+u*(S+l*y))]}}return e.makeTensorInfo([a,h,d,p],r.dtype,g)}};function Xv(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=s;je([r,o],"depthwiseConv2DNative");const c=Ye(r.shape),h=Ye(o.shape);let d=l;null==d&&(d=[1,1]),E(vs(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const p=ps(r.shape,o.shape,i,d,a,u,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:y,padInfo:b}=p,S=b.left,w=b.top,I=p.outChannels/p.inChannels,_=new Zn(p.outShape,r.dtype),R=e.data.get(r.dataId).values,F=e.data.get(o.dataId).values,O=_.values;for(let L=0;L<p.batchSize;++L){const j=L*c[0],Q=L*_.strides[0];for(let te=0;te<p.outHeight;++te){const se=Q+te*_.strides[1],oe=te*p.strideHeight-w;for(let ae=0;ae<f;++ae){const ue=oe+ae*m;if(ue<0||ue>=p.inHeight)continue;const re=ae*h[0],de=j+ue*c[1];for(let ve=0;ve<p.outWidth;++ve){const Ie=se+ve*_.strides[2],Ee=ve*p.strideWidth-S;for(let Ce=0;Ce<g;++Ce){const Fe=Ee+Ce*y;if(Fe<0||Fe>=p.inWidth)continue;const Le=de+Fe*p.inChannels;let Je=Ie,st=re+Ce*h[1];for(let tt=0;tt<p.inChannels;++tt){const bt=R[Le+tt];for(let et=0;et<I;++et)O[Je+et]+=bt*F[st+et];Je+=I,st+=I}}}}}}return e.makeTensorInfo(_.shape,_.dtype,_.values)}const NO={kernelName:Dt,backendName:"cpu",kernelFunc:Xv},TO={kernelName:Bn,backendName:"cpu",kernelFunc:function kO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=s;je([r,o],"depthwiseConv2dNativeBackpropFilter");const h=ps(r.shape,c,i,a,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new Zn(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,S=h.outChannels/h.inChannels,w=e.data.get(r.dataId).values,I=new Zn(r.shape,r.dtype,w),_=e.data.get(o.dataId).values,R=new Zn(o.shape,o.dtype,_);for(let F=0;F<f;++F){const O=Math.max(0,Math.ceil((b-F)/d)),L=Math.min(h.outHeight,(h.inHeight+b-F)/d);for(let j=0;j<g;++j){const Q=Math.max(0,Math.ceil((y-j)/p)),te=Math.min(h.outWidth,(h.inWidth+y-j)/p);for(let se=0;se<h.outChannels;++se){const oe=Math.trunc(se/S),ae=se%S;let ue=0;for(let re=0;re<h.batchSize;++re)for(let de=O;de<L;++de){const ve=F+de*d-b;for(let Ie=Q;Ie<te;++Ie)ue+=I.get(re,ve,j+Ie*p-y,oe)*R.get(re,de,Ie,se)}m.set(ue,F,j,oe,ae)}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}},EO={kernelName:tn,backendName:"cpu",kernelFunc:function _O(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=s;je([r,o],"depthwiseConv2DNativeBackpropInput");const h=Ye(r.shape),d=Ye(o.shape),p=ps(c,o.shape,i,a,l,u,!0),f=new Zn(p.inShape,"float32"),g=f.values,[m,y,b]=f.strides,S=e.data.get(r.dataId).values,[w,I,_]=h,R=e.data.get(o.dataId).values,[F,O,L]=d,{batchSize:j,filterHeight:Q,filterWidth:te,inChannels:se,inHeight:oe,inWidth:ae,outChannels:ue,outHeight:re,outWidth:de,strideHeight:ve,strideWidth:Ie}=p,Ee=Q-1-p.padInfo.top,Ce=te-1-p.padInfo.left,Fe=ue/se;for(let $e=0;$e<j;++$e)for(let Le=0;Le<se;++Le)for(let Je=0;Je<oe;++Je){const st=Je-Ee,tt=Math.max(0,Math.ceil(st/ve)),bt=Math.min(re,(Q+st)/ve);for(let et=0;et<ae;++et){const Kt=et-Ce,ln=Math.max(0,Math.ceil(Kt/Ie)),Sn=Math.min(de,(te+Kt)/Ie);let Yt=0;for(let nn=tt;nn<bt;++nn){const In=nn*ve-st;for(let un=ln;un<Sn;++un){const ls=w*$e+I*nn+_*un,Ys=F*(Q-1-In)+O*(te-1-(un*Ie-Kt))+L*Le;for(let Ns=0;Ns<Fe;++Ns)Yt+=S[ls+(Le*Fe+Ns)]*R[Ys+Ns]}}g[m*$e+y*Je+b*et+Le]=Yt}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}},$O={kernelName:ts,backendName:"cpu",kernelFunc:function AO(n){const{inputs:t,backend:e}=n,{x:s}=t,r=ie(s.shape),o=e.data.get(s.dataId).values,i=kt([r,r],s.dtype),a=i.values;for(let u=0;u<o.length;u++)a[u*r+u]=o[u];const l=[...s.shape,...s.shape];return e.makeTensorInfo(l,i.dtype,i.values)}},RO={kernelName:bn,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r}=n,{strides:o,pad:i,dilations:a}=e,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:y,outWidth:b,padInfo:S,strideHeight:w,strideWidth:I,filterHeight:_,filterWidth:R,dilationHeight:F,dilationWidth:O,outShape:L}=Jc(s.shape,r.shape,o,i,"NHWC",a),j=ie(L),Q=L.length,te=Cn(s.dtype,j);for(let oe=0;oe<p;++oe)for(let ae=0;ae<y;++ae){const ue=ae*w-S.top;for(let re=0;re<b;++re){const de=re*I-S.left;for(let ve=0;ve<m;++ve){let Ie=Number.MIN_SAFE_INTEGER;for(let Ce=0;Ce<_;++Ce){const Fe=ue+Ce*F;if(Fe>=0&&Fe<f)for(let $e=0;$e<R;++$e){const Le=de+$e*O;if(Le>=0&&Le<g){const Je=br([oe,Fe,Le,ve],c,Ye(s.shape)),st=br([Ce,$e,ve],d,Ye(r.shape)),tt=u[Je]+h[st];tt>Ie&&(Ie=tt)}}}te[br([oe,ae,re,ve],Q,Ye(L))]=Ie}}}return{dataId:l.write(Pi(te,s.dtype),L,s.dtype),shape:L,dtype:s.dtype}}},DO={kernelName:Vt,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:l}=e,u=t,c=hn(s.shape,u.data.get(s.dataId).values),h=hn(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:S,strideWidth:w,filterHeight:I,filterWidth:_,dilationHeight:R,dilationWidth:F,outShape:O}=Jc(s.shape,r.shape,i,a,"NHWC",l);E(o.rank===O.length,()=>`Error in ${Vt}, dy must have the same rank as output ${O.length}, but got ${o.rank}`);const L=hn(O,u.data.get(o.dataId).values),j=ju(r.shape,r.dtype);for(let te=0;te<d;++te)for(let se=0;se<m;++se){const oe=se*S-b.top;for(let ae=0;ae<y;++ae){const ue=ae*w-b.left;for(let re=0;re<g;++re){let de=Number.MIN_SAFE_INTEGER,ve=0,Ie=0;for(let Ee=0;Ee<I;++Ee){const Ce=oe+Ee*R;if(Ce>=0&&Ce<p)for(let Fe=0;Fe<_;++Fe){const $e=ue+Fe*F;if($e>=0&&$e<f){const Le=c[te][Ce][$e][re]+h[Ee][Fe][re];Le>de&&(de=Le,ve=Ee,Ie=Fe)}}}j[ve][Ie][re]+=L[te][se][ae][re]}}}return{dataId:u.write(Pi(j,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},FO={kernelName:gt,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:l}=e,u=t,c=hn(s.shape,u.data.get(s.dataId).values),h=hn(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:S,strideWidth:w,filterHeight:I,filterWidth:_,dilationHeight:R,dilationWidth:F,outShape:O}=Jc(s.shape,r.shape,i,a,"NHWC",l);E(o.rank===O.length,()=>`Error in ${gt}, dy must have the same rank as output ${O.length}, but got ${o.rank}`);const L=hn(O,u.data.get(o.dataId).values),j=ju(s.shape,s.dtype);for(let te=0;te<d;++te)for(let se=0;se<m;++se){const oe=se*S-b.top;for(let ae=0;ae<y;++ae){const ue=ae*w-b.left;for(let re=0;re<g;++re){let de=Number.MIN_SAFE_INTEGER,ve=oe<0?0:oe,Ie=ue<0?0:ue;for(let Ee=0;Ee<I;++Ee){const Ce=oe+Ee*R;if(Ce>=0&&Ce<p)for(let Fe=0;Fe<_;++Fe){const $e=ue+Fe*F;if($e>=0&&$e<f){const Le=c[te][Ce][$e][re]+h[Ee][Fe][re];Le>de&&(de=Le,ve=Ce,Ie=$e)}}}j[te][ve][Ie][re]+=L[te][se][ae][re]}}}return{dataId:u.write(Pi(j,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},LO={kernelName:Ut,backendName:"cpu",kernelFunc:function OO(n){const{inputs:t,backend:e,attrs:s}=n,{image:r}=t,{canvas:o,options:i}=s,{contextOptions:a,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,c=(null==a?void 0:a.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);const h=o.getContext(c,(null==a?void 0:a.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],g=e.data.get(r.dataId).values,m="float32"===r.dtype?255:1,y=new Uint8ClampedArray(p*d*4);for(let S=0;S<d*p;++S){const w=[0,0,0,255*u];for(let _=0;_<f;_++){const R=g[S*f+_];if("float32"===r.dtype){if(R<0||R>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${R}.`)}else if("int32"===r.dtype&&(R<0||R>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${R}.`);1===f?(w[0]=R*m,w[1]=R*m,w[2]=R*m):w[_]=R*m}const I=4*S;y[I+0]=Math.round(w[0]),y[I+1]=Math.round(w[1]),y[I+2]=Math.round(w[2]),y[I+3]=Math.round(w[3])}o.width=p,o.height=d;const b=new ImageData(y,p,d);return h.putImageData(b,0,0),r}},I0=qn((n,t)=>n*t),PO=x0((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e})),Lf=as(_l,I0,PO),MO={kernelName:_l,backendName:"cpu",kernelFunc:Lf};function Lh(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s;let a;je(r,"sum"),a="bool"===r.dtype?sa({inputs:{x:r},backend:e,attrs:{dtype:"int32"}}):Bo({inputs:{x:r},backend:e});const l=a.shape.length,u=St(o,a.shape),c=On(u,l);let h=u,d=a;null!=c&&(d=Zs({inputs:{x:a},backend:e,attrs:{perm:c}}),h=Hn(h.length,l)),Ss("sum",h,d.shape.length);const[p,f]=fs(d.shape,h);let m=Of(e,p,Ws(d.dtype,"int32"));const y=ie(f),b=e.data.get(m.dataId).values,S=e.data.get(d.dataId).values;for(let w=0;w<b.length;++w){const I=w*y;let _=0;for(let R=0;R<y;++R)_+=S[I+R];b[w]=_}if(i){const I=m;m=wn({inputs:{x:m},backend:e,attrs:{shape:Gn(m.shape,u)}}),e.disposeIntermediateTensorInfo(I)}return e.disposeIntermediateTensorInfo(a),null!=c&&e.disposeIntermediateTensorInfo(d),m}const zO={kernelName:Ac,backendName:"cpu",kernelFunc:Lh},VO={kernelName:Wt,backendName:"cpu",kernelFunc:function BO(n){const{inputs:t,backend:e,attrs:s}=n,{equation:r}=s,o=t,{allDims:i,summedDims:a,idDims:l}=X1(r,o.length);Y1(i.length,l,o);const{path:u,steps:c}=J1(a,l),h=c.length;let d=null,p=i.length;const f=[];for(let g=0;g<h;++g){for(const m of c[g]){const{permutationIndices:y,expandDims:b}=Z1(p,l[m]);let S;Q1(y)?S=o[m]:(S=Zs({inputs:{x:o[m]},backend:e,attrs:{perm:y}}),f.push(S));const w=S.shape.slice();for(let I=0;I<b.length;++I)w.splice(b[I],0,1);At(S.shape,w)||(S=wn({inputs:{x:S},backend:e,attrs:{shape:w}}),f.push(S)),null===d?d=S:(d=Lf({inputs:{a:S,b:d},backend:e}),f.push(d))}g<h-1&&(u[g]>=0&&(d=Lh({inputs:{x:d},backend:e,attrs:{axis:u[g]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&e.disposeIntermediateTensorInfo(g);return d}},UO={kernelName:Zr,backendName:"cpu",kernelFunc:function WO(n){const{inputs:t,backend:e}=n,{dy:s,y:r}=t;je([s,r],"eluGrad");const o=new Float32Array(ie(r.shape)),i=e.data.get(r.dataId).values,a=e.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const u=i[l];o[l]=u>=0?a[l]:a[l]*(u+1)}return e.makeTensorInfo(r.shape,"float32",o)}},Zv=qn((n,t)=>n===t?1:0),Yv=as(Ju,Zv,null,"bool"),GO={kernelName:Ju,backendName:"cpu",kernelFunc:Yv},HO=V1,jO=W1,KO=U1,qO=G1,XO=H1,ZO=j1,YO=an(pl,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+HO*e);return t*(1-((((ZO*s+XO)*s+qO)*s+KO)*s+jO)*s*Math.exp(-e*e))}),JO={kernelName:pl,backendName:"cpu",kernelFunc:YO},Jv=zo(n=>Math.exp(n)),Qv=na(fl,Jv,"float32"),QO={kernelName:fl,backendName:"cpu",kernelFunc:Qv};function Pf(n){const{inputs:t,backend:e,attrs:s}=n,{input:r}=t,{dim:o}=s,i=r.shape.length,a=r.shape.slice();let l=o;return o<0&&(E(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+o+1),a.splice(l,0,1),wn({inputs:{x:r},backend:e,attrs:{shape:a}})}const eL={kernelName:Qu,backendName:"cpu",kernelFunc:Pf},ew=zo(n=>Math.expm1(n)),tL=na(ml,ew),nL={kernelName:ml,backendName:"cpu",kernelFunc:tL},sL=qn((n,t)=>n/t),C0=as(vt,sL),N0={kernelName:vt,backendName:"cpu",kernelFunc:C0},tw=qn((n,t)=>n-t),rL=x0((n,t,e,s)=>({real:n-e,imag:t-s})),k0=as(Ul,tw,rL),oL={kernelName:Ul,backendName:"cpu",kernelFunc:k0};function nw(n,t,e){const s=n.shape,r=s[0],o=s[1],i=e.data.get(n.dataId),a=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,o],c=ie(u),h=$n("float32",c),d=$n("float32",c);for(let m=0;m<r;m++){const y=qa({inputs:{x:a},backend:e,attrs:{begin:[m,0],size:[1,o]}}),b=qa({inputs:{x:l},backend:e,attrs:{begin:[m,0],size:[1,o]}}),S=lr({inputs:{real:y,imag:b},backend:e}),{real:w,imag:I}=iL(S,t,e),_=li(w,I);for(let R=0;R<o;R++){const F=K1(_,R);h[m*o+R]=F.real,d[m*o+R]=F.imag}e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(S)}const p=e.makeTensorInfo(u,"float32",h),f=e.makeTensorInfo(u,"float32",d),g=lr({inputs:{real:p,imag:f},backend:e});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),g}function iL(n,t,e){const s=ie(n.shape),r=e.data.get(n.dataId),o=e.data.get(r.complexTensorInfos.real.dataId).values,i=e.data.get(r.complexTensorInfos.imag.dataId).values;if(function aL(n){return 0==(n&n-1)}(s)){const a=T0(o,i,s,t,e),l=[n.shape[0],n.shape[1]];if(t){const u=e.makeTensorInfo(l,"float32",a.real),c=e.makeTensorInfo(l,"float32",a.imag),h=e.makeTensorInfo([],"float32",Xo(s,"float32")),d=Bo({inputs:{x:h},backend:e}),p=N0.kernelFunc({inputs:{a:u,b:h},backend:e}),f=N0.kernelFunc({inputs:{a:c,b:d},backend:e}),g=e.data.get(p.dataId).values,m=e.data.get(f.dataId).values;return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),{real:g,imag:m}}return a}{const l=function lL(n,t,e){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let o=0,i=0;for(let a=0;a<t;a++){const l=O4(r*a,t,e),u=K1(n,a);o+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}e&&(o/=t,i/=t),D4(s,o,i,r)}return s}(li(o,i),s,t);return A4(l)}}function T0(n,t,e,s,r){if(1===e)return{real:n,imag:t};const o=li(n,t),i=e/2,a=$4(o),l=a.real,u=a.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=lr({inputs:{real:h,imag:d},backend:r}),f=R4(o),g=f.real,m=f.imag,y=[g.length],b=r.makeTensorInfo(y,"float32",g),S=r.makeTensorInfo(y,"float32",m),w=lr({inputs:{real:b,imag:S},backend:r}),I=T0(l,u,i,s,r),_=I.real,R=I.imag,F=[_.length],O=r.makeTensorInfo(F,"float32",_),L=r.makeTensorInfo(F,"float32",R),j=lr({inputs:{real:O,imag:L},backend:r}),Q=T0(g,m,i,s,r),te=Q.real,se=Q.imag,oe=[te.length],ae=r.makeTensorInfo(oe,"float32",te),ue=r.makeTensorInfo(oe,"float32",se),re=lr({inputs:{real:ae,imag:ue},backend:r}),de=F4(e,s),ve=[de.real.length],Ie=r.makeTensorInfo(ve,"float32",de.real),Ee=r.makeTensorInfo(ve,"float32",de.imag),Ce=lr({inputs:{real:Ie,imag:Ee},backend:r}),Fe=Lf({inputs:{a:Ce,b:re},backend:r}),$e=Cu({inputs:{a:j,b:Fe},backend:r}),Le=k0({inputs:{a:j,b:Fe},backend:r}),Je=Ka({inputs:{input:$e},backend:r}),st=Ka({inputs:{input:Le},backend:r}),tt=Nu({inputs:{input:$e},backend:r}),bt=Nu({inputs:{input:Le},backend:r}),et=ku({inputs:[Je,st],backend:r,attrs:{axis:0}}),Kt=ku({inputs:[tt,bt],backend:r,attrs:{axis:0}}),ln=r.data.get(et.dataId).values,Sn=r.data.get(Kt.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(ae),r.disposeIntermediateTensorInfo(ue),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(Ie),r.disposeIntermediateTensorInfo(Ee),r.disposeIntermediateTensorInfo(Ce),r.disposeIntermediateTensorInfo(Fe),r.disposeIntermediateTensorInfo($e),r.disposeIntermediateTensorInfo(Le),r.disposeIntermediateTensorInfo(Je),r.disposeIntermediateTensorInfo(tt),r.disposeIntermediateTensorInfo(st),r.disposeIntermediateTensorInfo(bt),r.disposeIntermediateTensorInfo(et),r.disposeIntermediateTensorInfo(Kt),{real:ln,imag:Sn}}const cL={kernelName:td,backendName:"cpu",kernelFunc:function uL(n){const{inputs:t,backend:e}=n,{input:s}=t,r=ie(s.shape),o=s.shape[s.shape.length-1],a=wn({inputs:{x:s},backend:e,attrs:{shape:[r/o,o]}}),l=nw(a,!1,e),u=wn({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),u}};function _0(n){const{backend:t,attrs:e}=n,{shape:s,value:r,dtype:o}=e,i=o||qr(r),a=Cn(i,ie(s));return function dL(n,t,e){n.fill(t)}(a,r),t.makeTensorInfo(s,i,a)}const hL={kernelName:nd,backendName:"cpu",kernelFunc:_0},pL={kernelName:sd,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{image:s}=n,r=e,o=$n(s.dtype,ie(s.shape)),[i,a,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<i;d++){const p=d*l*a*u;for(let f=0;f<a;f++){const g=f*(l*u);for(let m=0;m<l;m++){const y=m*u;for(let b=0;b<u;b++){const S=Math.round(l-m-1),w=p+g+y+b;let I=c[w];S>=0&&S<l&&(I=c[p+g+S*u+b]),o[w]=I}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},sw=zo(n=>Math.floor(n)),fL=na(gl,sw),mL={kernelName:gl,backendName:"cpu",kernelFunc:fL},gL=qn((n,t)=>Math.floor(n/t)),yL=as(yl,gL,null,"int32"),bL={kernelName:yl,backendName:"cpu",kernelFunc:yL},vL={kernelName:zc,backendName:"cpu",kernelFunc:function xL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=qv({inputs:{x:r,filter:o},backend:e,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const m=g;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const y=wn({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});g=Cu({inputs:{a:g,b:y},backend:e}),e.disposeIntermediateTensorInfo(y)}else g=Cu({inputs:{a:g,b:i},backend:e});e.disposeIntermediateTensorInfo(m)}if(p){const m=g;if("NCHW"===c&&"prelu"===p&&1===a.shape.length&&1!==a.shape[0]){const y=wn({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});g=Ff(e,g,p,y,f),e.disposeIntermediateTensorInfo(y)}else g=Ff(e,g,p,a,f);e.disposeIntermediateTensorInfo(m)}return g}},SL={kernelName:Bc,backendName:"cpu",kernelFunc:function wL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=Xv({inputs:{x:r,filter:o},backend:e,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const m=g;g=Cu({inputs:{a:g,b:i},backend:e}),e.disposeIntermediateTensorInfo(m)}if(p){const m=g;g=Ff(e,g,p,a,f),e.disposeIntermediateTensorInfo(m)}return g}};function rw(n,t,e,s,r,o,i,a,l){const u=kt([s,o],e);for(let c=0;c<s;c++){const h=[];let d=0;for(let p=0;p<r;p++){const f=n[c*r+p];d+=f*i[p],h.push(f)}if(d<0||d>=l/o)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let p=0;p<o;p++)u.values[c*o+p]=t.get(...t.indexToLoc(d*o+p))}return u}const CL={kernelName:rd,backendName:"cpu",kernelFunc:function IL(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,o=ie(s.shape),i=r.shape,a=i[i.length-1],[l,u,c,h]=ep(s,r);if(0===u)return e.makeTensorInfo(l,s.dtype,[]);const f=rw(e.data.get(r.dataId).values,e.bufferSync(s),s.dtype,u,a,c,h,s.shape,o);return e.makeTensorInfo(l,s.dtype,f.values)}};function ow(n,t,e){const s=kt(e,n.dtype);for(let r=0;r<s.size;++r){const i=s.indexToLoc(r).slice(),u=t.locToIndex([i[0],i[2]]);i[2]=t.values[u];const c=n.locToIndex(i);0<=c&&c<n.values.length&&(s.values[r]=n.values[c])}return s}const kL={kernelName:tc,backendName:"cpu",kernelFunc:function NL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:o}=t,{axis:i,batchDims:a}=s;je([r,o],"gatherV2");const l=St(i,r.shape)[0],u=e.data.get(o.dataId).values,c=r.shape[l];for(let w=0;w<u.length;++w){const I=u[w];E(I<=c-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${c-1}]`)}let h=a;null==a&&(h=0);const d=ie(o.shape),p=n2(r,o,l,h),f=wn({inputs:{x:r},backend:e,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=wn({inputs:{x:o},backend:e,attrs:{shape:[p.batchSize,d/p.batchSize]}}),m=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=e.bufferSync(g),S=ow(e.bufferSync(f),y,m);return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),e.makeTensorInfo(p.outputShape,S.dtype,S.values)}},iw=qn((n,t)=>n>t?1:0),TL=as(nc,iw,null,"bool"),_L={kernelName:nc,backendName:"cpu",kernelFunc:TL},aw=qn((n,t)=>n>=t?1:0),EL=as(bl,aw,null,"bool"),AL={kernelName:bl,backendName:"cpu",kernelFunc:EL},RL={kernelName:od,backendName:"cpu",kernelFunc:function $L(n){const{inputs:t,backend:e}=n,{input:s}=t,r=ie(s.shape),o=s.shape[s.shape.length-1],a=wn({inputs:{x:s},backend:e,attrs:{shape:[r/o,o]}}),l=nw(a,!0,e),u=wn({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),u}},DL=an(vl,n=>Number.isFinite(n)?1:0,"bool"),FL={kernelName:vl,backendName:"cpu",kernelFunc:DL},OL=an(wl,n=>Math.abs(n)===1/0?1:0,"bool"),LL={kernelName:wl,backendName:"cpu",kernelFunc:OL},PL=an(Sl,n=>Number.isNaN(n)?1:0,"bool"),ML={kernelName:Sl,backendName:"cpu",kernelFunc:PL},lw=qn((n,t)=>n<t?1:0),zL=as(rc,lw,null,"bool"),BL={kernelName:rc,backendName:"cpu",kernelFunc:zL},uw=qn((n,t)=>n<=t?1:0),VL=as(oc,uw,null,"bool"),WL={kernelName:oc,backendName:"cpu",kernelFunc:VL};function cw(n,t,e){const s=(t-n)/(e-1),r=Un(e,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}const GL={kernelName:ad,backendName:"cpu",kernelFunc:function UL(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:o}=e,i=cw(s,r,o);return t.makeTensorInfo([i.length],"float32",i)}},hw=zo(n=>Math.log(n)),HL=na(Il,hw),jL={kernelName:Il,backendName:"cpu",kernelFunc:HL},KL=an(Cl,n=>Math.log1p(n)),qL={kernelName:Cl,backendName:"cpu",kernelFunc:KL},XL=qn((n,t)=>n&&t),ZL=as(ic,XL,null,"bool"),YL={kernelName:ic,backendName:"cpu",kernelFunc:ZL},JL=an(ac,n=>n?0:1,"bool"),QL={kernelName:ac,backendName:"cpu",kernelFunc:JL},eP=qn((n,t)=>n||t),tP=as(lc,eP,null,"bool"),nP={kernelName:lc,backendName:"cpu",kernelFunc:tP},rP={kernelName:uc,backendName:"cpu",kernelFunc:function sP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:o,bias:i,alpha:a,beta:l}=s;je(r,"LRN");const u=r.shape[3],c=u-1,h=e.data.get(r.dataId).values,d=ie(r.shape),p=new Float32Array(d);function f(g){const m=g%u;let y=g-m+Math.max(0,m-o);const b=g-m+Math.min(m+o,c);let S=0;for(;y<=b;y++){const w=h[y];S+=w*w}return S}for(let g=0;g<d;g++){const m=f(g),y=h[g]*Math.pow(i+a*m,-l);p[g]=y}return e.makeTensorInfo(r.shape,r.dtype,p)}},iP={kernelName:ld,backendName:"cpu",kernelFunc:function oP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,y:o,dy:i}=t,{depthRadius:a,bias:l,alpha:u,beta:c}=s;je(i,"LRNGrad");const h=ie(i.shape),d=i.shape[3],p=e.data.get(i.dataId).values,f=e.data.get(r.dataId).values,g=e.data.get(o.dataId).values,m=new Float32Array(h),y=h;for(let b=0;b<y;b++){const S=b%d,w=b-S+Math.max(0,S-a),I=b-S+Math.min(d,S+a+1);let _=0;for(let R=w;R<I;R++)_+=Math.pow(f[R],2);_=u*_+l;for(let R=w;R<I;R++){let F=-2*u*c*f[R]*g[b]/_;b===R&&(F+=Math.pow(_,-c)),F*=p[b],m[R]+=F}}return e.makeTensorInfo(i.shape,r.dtype,m)}};function dw(n,t,e,s){const r=$n(s,ie(e));for(let o=0;o<r.length;++o){const i=o*t;let a=n[i];for(let l=0;l<t;++l){const u=n[i+l];(Number.isNaN(u)||u>a)&&(a=u)}r[o]=a}return r}function pw(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:o,keepDims:i}=s,a=e;let l=r.shape;const u=l.length,c=St(o,l);let h=c;const d=On(h,u);let p=a.data.get(r.dataId).values;if(null!=d){const w=new Array(u);for(let I=0;I<w.length;I++)w[I]=l[d[I]];p=v0(p,l,r.dtype,d,w),h=Hn(h.length,u),l=w}je(r,"max"),Ss("max",h,u);const[f,g]=fs(l,h),y=dw(p,ie(g),f,r.dtype),b=a.write(y,f,r.dtype);let S=f;return i&&(S=Gn(f,c)),{dataId:b,shape:S,dtype:r.dtype}}const aP={kernelName:cc,backendName:"cpu",kernelFunc:pw},fw=qn((n,t)=>Math.max(n,t)),lP=as(Nl,fw),uP={kernelName:Nl,backendName:"cpu",kernelFunc:lP},hP={kernelName:hc,backendName:"cpu",kernelFunc:function cP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;je(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s;E(vs(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=Lr(r.shape,o,i,1,a,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&At(c.inShape,c.outShape))h=Bo({inputs:{x:r},backend:e});else{const d=e.data.get(r.dataId).values,p=Ye(r.shape),f=w0(d,0,r.dtype,p,c,"max");h=e.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}},pP={kernelName:dc,backendName:"cpu",kernelFunc:function dP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=s;je(r,"maxPool3d");const c=ei(r.shape,o,i,1,a,l,u),d=Wv(e.data.get(r.dataId).values,0,r.dtype,Ye(r.shape),c,"max");return e.makeTensorInfo(d.shape,"float32",d.values)}},mP={kernelName:cd,backendName:"cpu",kernelFunc:function fP(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=s;je([r,o],"maxPool3DGrad");const c=ei(o.shape,i,a,1,l,u),d=function TF(n,t){const e=kt(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,a=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let y=0;y<t.outDepth;++y){const b=y*s-d;let S=b;for(;S<0;)S+=i;const w=Math.min(t.inDepth,u+b);for(let I=0;I<t.outHeight;++I){const _=I*r-p;let R=_;for(;R<0;)R+=a;const F=Math.min(t.inHeight,c+_);for(let O=0;O<t.outWidth;++O){const L=O*o-f;let j=L;for(;j<0;)j+=l;const Q=Math.min(t.inWidth,h+L);let te=Number.NEGATIVE_INFINITY,se=-1;for(let oe=S;oe<w;oe+=i){const ae=oe-b;for(let ue=R;ue<F;ue+=a){const re=ue-_;for(let de=j;de<Q;de+=l){const ve=de-L,Ie=n.get(g,oe,ue,de,m);Ie>=te&&(te=Ie,se=ae*c*h+re*c+ve)}}}e.set(se,g,y,I,O,m)}}}return e}(e.bufferSync(o),c),p=c.strideDepth,f=c.strideHeight,g=c.strideWidth,m=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,S=c.effectiveFilterDepth,w=c.effectiveFilterHeight,I=c.effectiveFilterWidth,_=S-1-c.padInfo.front,R=I-1-c.padInfo.left,F=w-1-c.padInfo.top,O=kt(o.shape,"float32"),L=e.bufferSync(r);for(let j=0;j<c.batchSize;++j)for(let Q=0;Q<c.inChannels;++Q)for(let te=0;te<c.inDepth;++te)for(let se=0;se<c.inHeight;++se)for(let oe=0;oe<c.inWidth;++oe){const ae=te-_,ue=se-F,re=oe-R;let de=0;for(let ve=0;ve<S;ve+=m){const Ie=(ae+ve)/p;if(!(Ie<0||Ie>=c.outDepth||Math.floor(Ie)!==Ie))for(let Ee=0;Ee<w;Ee+=y){const Ce=(ue+Ee)/f;if(!(Ce<0||Ce>=c.outHeight||Math.floor(Ce)!==Ce))for(let Fe=0;Fe<I;Fe+=b){const $e=(re+Fe)/g;if($e<0||$e>=c.outWidth||Math.floor($e)!==$e)continue;const st=S*w*I-1-d.get(j,Ie,Ce,$e,Q)===ve*w*I+Ee*I+Fe?1:0;0!==st&&(de+=L.get(j,Ie,Ce,$e,Q)*st)}}}O.set(de,j,te,se,oe,Q)}return e.makeTensorInfo(O.shape,O.dtype,O.values)}},yP={kernelName:ud,backendName:"cpu",kernelFunc:function gP(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o,output:i}=t,a=o;je([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Lr(a.shape,l,u,1,c,h),p=e.data.get(a.dataId).values,f=kt(d.outShape,a.dtype,Vv(p,a.shape,a.dtype,d).values),g=d.strideHeight,m=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,S=d.effectiveFilterHeight,w=d.effectiveFilterWidth,I=w-1-d.padInfo.left,_=S-1-d.padInfo.top,R=kt(a.shape,"float32"),F=e.data.get(r.dataId).values,O=kt(r.shape,"float32",F);for(let L=0;L<d.batchSize;++L)for(let j=0;j<d.inChannels;++j)for(let Q=0;Q<d.inHeight;++Q)for(let te=0;te<d.inWidth;++te){const se=Q-_,oe=te-I;let ae=0;for(let ue=0;ue<S;ue+=y){const re=(se+ue)/g;if(!(re<0||re>=d.outHeight||Math.floor(re)!==re))for(let de=0;de<w;de+=b){const ve=(oe+de)/m;if(ve<0||ve>=d.outWidth||Math.floor(ve)!==ve)continue;const Ce=S*w-1-f.get(L,re,ve,j)===ue*w+de?1:0;0!==Ce&&(ae+=O.get(L,re,ve,j)*Ce)}}R.set(ae,L,Q,te,j)}return e.makeTensorInfo(R.shape,R.dtype,R.values)}},xP={kernelName:hd,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=t,l=e;je(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Lr(s.shape,r,o,[1,1],i),[h,d]=function bP(n,t,e,s,r){const i=w0(n,0,e,Ye(t),r,"max"),a=Vv(n,t,e,r,!0,s);return[i.values,a.values]}(u,s.shape,s.dtype,a,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},wP={kernelName:pc,backendName:"cpu",kernelFunc:function vP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s,a=St(o,r.shape),c=ie(fs(r.shape,a)[1]),h=[],d=e.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=sa({inputs:{x:r},backend:e,attrs:{dtype:"float32"}});h.push(p);const f=C0({inputs:{a:p,b:d},backend:e});h.push(f);const g=Lh({inputs:{x:f},backend:e,attrs:{axis:o,keepDims:i}});return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),g}},IP={kernelName:fc,backendName:"cpu",kernelFunc:function SP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s;je(r,"min");const a=St(o,r.shape);let l=a;const u=On(l,r.shape.length);let c=r;null!=u&&(c=Zs({inputs:{x:r},backend:e,attrs:{perm:u}}),l=Hn(l.length,r.shape.length)),Ss("min",l,c.shape.length);const[h,d]=fs(c.shape,l),p=ie(d),f=Un(ie(h),c.dtype),g=e.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let S=g[b];for(let w=0;w<p;++w){const I=g[b+w];(Number.isNaN(I)||I<S)&&(S=I)}f[y]=S}null!=u&&e.disposeIntermediateTensorInfo(c);const m=e.makeTensorInfo(h,c.dtype,f);if(i){const b=wn({inputs:{x:m},backend:e,attrs:{shape:Gn(h,a)}});return e.disposeIntermediateTensorInfo(m),b}return m}},mw=qn((n,t)=>Math.min(n,t)),CP=as(kl,mw),NP={kernelName:kl,backendName:"cpu",kernelFunc:CP},TP={kernelName:mc,backendName:"cpu",kernelFunc:function kP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,mode:i}=s;je(r,"mirrorPad");const a=o.map((S,w)=>S[0]+r.shape[w]+S[1]),l=o.map(S=>S[0]),u=o.map((S,w)=>S[0]+r.shape[w]),c="reflect"===i?0:1,h=e.data.get(r.dataId).values,d=r.shape.length,p=Ye(r.shape),f=ie(a),g=a.length,m=Ye(a),y=$n(r.dtype,f);for(let S=0;S<f;S++){let w=xo(S,g,m);for(let _=0;_<g;_++)w[_]<l[_]?w[_]=2*l[_]-w[_]-c:w[_]>=u[_]&&(w[_]=2*(u[_]-1)-w[_]+c);w=w.map((_,R)=>_-l[R]);const I=br(w,d,p);y[S]=h[I]}return{dataId:e.write(y,a,r.dtype),shape:a,dtype:r.dtype}}},_P=qn((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),EP=as(Tl,_P),AP={kernelName:Tl,backendName:"cpu",kernelFunc:EP};function gw(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:o}=s,i=r.shape.length;let a=o;if(-1===a&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);const l=St([a],r.shape),u=pw({inputs:{x:r},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),c=Gn(u.shape,l),h=wn({inputs:{x:u},backend:e,attrs:{shape:c}}),d=k0({inputs:{a:r,b:h},backend:e}),p=Qv({inputs:{x:d},backend:e}),f=Lh({inputs:{x:p},backend:e,attrs:{axis:l,keepDims:!1}}),g=wn({inputs:{x:f},backend:e,attrs:{shape:c}}),m=C0({inputs:{a:p,b:g},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),m}const $P={kernelName:Dc,backendName:"cpu",kernelFunc:gw},DP={kernelName:dd,backendName:"cpu",kernelFunc:function RP(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:o,seed:i,normalized:a}=s;je(r,"multinomial");const l=a?r:gw({inputs:{logits:r},backend:e,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=e.data.get(l.dataId).values,d=[u,o],p=Un(ie(d),"int32");for(let f=0;f<u;++f){const g=f*c,m=new Float32Array(c-1);m[0]=h[g];for(let S=1;S<m.length;++S)m[S]=m[S-1]+h[g+S];const y=fp.alea(i.toString()),b=f*o;for(let S=0;S<o;++S){const w=y();p[b+S]=m.length;for(let I=0;I<m.length;I++)if(w<m[I]){p[b+S]=I;break}}}return a||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(d,"int32",p)}};function yw(n,t,e){const s=Xo(-1,e);return I0([],t,s,n,e)}const OP={kernelName:gc,backendName:"cpu",kernelFunc:function FP(n){const{inputs:t,backend:e}=n,{x:s}=t;je(s,"neg");const r=e.data.get(s.dataId).values,[o,i]=yw(r,s.shape,s.dtype);return e.makeTensorInfo(i,s.dtype,o)}},LP=Fp,MP={kernelName:pd,backendName:"cpu",kernelFunc:function PP(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s;je(r,"NonMaxSuppression");const u=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,{selectedIndices:h}=LP(u,c,i,a,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}},zP=Op,VP={kernelName:fd,backendName:"cpu",kernelFunc:function BP(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=s;je(r,"NonMaxSuppressionPadded");const c=e.data.get(r.dataId).values,h=e.data.get(o.dataId).values,{selectedIndices:d,validOutputs:p}=zP(c,h,i,a,l,u);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}},WP=Lp,GP={kernelName:md,backendName:"cpu",kernelFunc:function UP(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s;je(r,"NonMaxSuppressionWithScore");const c=e.data.get(r.dataId).values,h=e.data.get(o.dataId).values,d=i,p=a,f=l,g=u,{selectedIndices:m,selectedScores:y}=WP(c,h,d,p,f,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},bw=qn((n,t)=>n!==t?1:0),HP=as(yc,bw,null,"bool"),jP={kernelName:yc,backendName:"cpu",kernelFunc:HP},qP={kernelName:xc,backendName:"cpu",kernelFunc:function KP(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:o,depth:i,onValue:a,offValue:l}=s;je(r,"oneHot");const u=ie(r.shape),c=new Float32Array(u*i);c.fill(l);const h=e.data.get(r.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<i&&(c[d*i+h[d]]=a);return e.makeTensorInfo([...r.shape,i],o,c)}};function Mf(n){const{inputs:t,backend:e}=n,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const r=Ka({inputs:{input:s},backend:e}),o=Mf({inputs:{x:r},backend:e}),i=Nu({inputs:{input:s},backend:e}),a=Mf({inputs:{x:i},backend:e}),l=lr({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}return _0({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const XP={kernelName:Pc,backendName:"cpu",kernelFunc:Mf},ZP={kernelName:bc,backendName:"cpu",kernelFunc:function xw(n){const{inputs:t,backend:e}=n,{x:s}=t;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const r=Ka({inputs:{input:s},backend:e}),o=xw({inputs:{x:r},backend:e}),i=Nu({inputs:{input:s},backend:e}),a=Mf({inputs:{x:i},backend:e}),l=lr({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}return _0({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function vw(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(1===t.length)return Pf({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const o=t[0].shape,i=t[0].dtype;t.forEach(c=>{Vn(o,c.shape,"All tensors passed to stack must have matching shapes"),E(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=ku({inputs:t.map(c=>{const h=Pf({inputs:{input:c},backend:e,attrs:{dim:r}});return a.push(h),h}),backend:e,attrs:{axis:r}});return a.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}const YP={kernelName:vc,backendName:"cpu",kernelFunc:vw},ww={kernelName:wc,backendName:"cpu",kernelFunc:function JP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,constantValue:i}=s;je(r,"pad");const a=o.map((b,S)=>b[0]+r.shape[S]+b[1]),l=o.map(b=>b[0]),u=e.data.get(r.dataId).values,c=ie(r.shape),h=r.shape.length,d=Ye(r.shape),p=ie(a),f=a.length,g=Ye(a),m=$n(r.dtype,p);0!==i&&m.fill(i);for(let b=0;b<c;b++)m[br(xo(b,h,d).map((_,R)=>_+l[R]),f,g)]=u[b];return{dataId:e.write(m,a,r.dtype),shape:a,dtype:r.dtype}}},QP=qn((n,t)=>Math.pow(n,t)),eM=as(El,QP),tM={kernelName:El,backendName:"cpu",kernelFunc:eM};function Sw(n,t,e,s){const[r,o]=fs(n,s),i=Ws(t,"int32"),a=Un(ie(r),i),l=ie(o);for(let u=0;u<a.length;++u){const c=u*l;let h=1;for(let d=0;d<l;++d)h*=e[c+d];a[u]=h}return{outVals:a,outShape:r,outDtype:i}}const sM={kernelName:Ic,backendName:"cpu",kernelFunc:function nM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s;je(r,"prod");const a=r.shape.length,l=St(o,r.shape),u=On(l,a);let c=l,h=r;const d=[];null!=u&&(h=Zs({inputs:{x:r},backend:e,attrs:{perm:u}}),d.push(h),c=Hn(c.length,a));const p=e.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=Sw(h.shape,h.dtype,p,c);let y=g;return i&&(y=Gn(g,l)),d.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.makeTensorInfo(y,m,f)}};function Iw(n,t){const e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let s=t;s<n.length;s++)e[t-1]*=n[s];return e}function Cw(n,t,e,s,r,o,i,a){if(0===n.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function rM(n,t,e){n.forEach((s,r)=>{if(s<0||s>=e){const o=xo(r,t.length,Ye(t)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${e})`)}})}(o,i,t[0][0]-1),0===s.length)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:h,numValues:d}=function iM(n,t,e,s){const r=[];let o=0;const a=new Array(t.length-1+e.length).fill(null).map(()=>[0]);!function oM(n,t){for(let e=0;e<n.length;++e){const s=n[e],r=e===n.length-1?t:n[e+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}(e,s);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];const c=t[u+1];for(let h=1;h<l+1;++h)a[u].push(h*c)}for(let u=0;u<n.length;++u){let c=n[u],h=n[u]+1;for(let d=0;d<e.length;++d){const p=e[d],f=d+t.length-1;if(f>=0){const g=a[f],m=g[g.length-1]-p[c];for(let y=c;y<h;++y)a[f].push(p[y+1]+m)}c=p[c],h=p[h]}h!==c&&(r.push([c,h]),o+=h-c)}return{outSplits:a,valueSlices:r,numValues:o}}(o,i,n,u),p=function aM(n){const t=[];for(let e=0;e<n.length;++e){const r=Cn("int32",n[e].length);t.push(r),n[e].forEach((o,i)=>r[i]=o)}return t}(c),f=function uM(n,t,e,s,r){const o=t.slice();o[0]=r;const i=Cn(e,ie(o)),a=n.length;return function lM(n,t,e,s,r,o){const i=Iw(t,2)[1],a=Iw(o,2)[1];let l=0;for(const u of e)for(let c=u[0];c<u[1];++c){for(let h=0;h<s;++h)r[l*a+h]=n[c*i+h];++l}}(n,t,s,0===a?0:a/t[0],i,o),[i,o]}(e,s,r,h,d);return[p,f[0],f[1]]}const hM={kernelName:gd,backendName:"cpu",kernelFunc:function cM(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=t,l=r.map(y=>e.data.get(y.dataId).values),u=r.map(y=>y.shape),c=e.data.get(o.dataId).values,h=e.data.get(i.dataId).values,[d,p,f]=Cw(l,u,c,o.shape,o.dtype,h,i.shape),g=d.map(y=>e.makeTensorInfo([y.length],"int32",y)),m=e.makeTensorInfo(f,o.dtype,p);return g.concat([m])}},Nw=2147483647;function kw(n,t,e,s,r,o,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const a=0===t.length,l=0===r.length,u=0===i.length,c=[];a||c.push(t[0]),l||c.push(r[0]),u||c.push(i[0]);for(let m=1;m<c.length;++m)if(c[m]!==c[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=Cn("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const y=a?n[0]:n[m],b=l?s[0]:s[m],S=u?o[0]:o[m];if(0===S)throw new Error("Requires delta != 0");let w;if(S>0&&b<y||S<0&&b>y)w=0;else if(w=Math.ceil(Math.abs((b-y)/S)),w>Nw)throw new Error(`Requires ((limit - start) / delta) <= ${Nw}`);d[m+1]=d[m]+w}const f=Cn(e,d[h]);let g=0;for(let m=0;m<h;++m){const y=d[m+1]-d[m];let b=a?n[0]:n[m];const S=u?o[0]:o[m];for(let w=0;w<y;++w)f[g++]=b,b+=S}return[d,f]}const pM={kernelName:yd,backendName:"cpu",kernelFunc:function dM(n){const{inputs:t,backend:e}=n,{starts:s,limits:r,deltas:o}=t,i=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values,[u,c]=kw(i,s.shape,s.dtype,a,r.shape,l,o.shape);return[e.makeTensorInfo([u.length],"int32",u),e.makeTensorInfo([c.length],s.dtype,c)]}};var Vr=Eo;class zf{constructor(t,e,s,r,o,i,a,l,u,c){this.shape=t,this.shapeShape=e,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=T4(c),this.raggedRank=_4(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Vr.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Vr.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Vr.VALUE_ROWIDS:return zf.getMaxWidthValueRowID(e);case Vr.ROW_SPLITS:return zf.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Vr[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(0===e||1===e)return 0;let s=0;for(let r=0;r<e-1;++r){const o=t[r+1]-t[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(t){const e=t.length;if(0===e)return 0;let s=0,r=t[0],o=0;for(let i=1;i<e;++i){const a=t[i];a!==r&&(r=a,o=Math.max(i-s,o),s=i)}return Math.max(e-s,o)}tensorShapeFromTensor(t,e,s=!0){if(0===e.length){if(-1===t[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return _w(t,s)}calculateOutputSize(t){const e=this.valuesShape;E4(this.defaultValueShape,e);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=k4(this.raggedRank,r,e);i[0]<0&&(i[0]=t);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(t,e,s){const r=Math.min(t,s),o=[];let i=0;for(let a=0;a<r;++a,i+=e)o.push(i);for(let a=r;a<t;++a)o.push(-1);return E(o.length===t,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(t,e,s,r){const o=t.length,i=[];for(let a=0;a<o-1;++a){const l=t[a+1]-t[a];let u=Math.min(r,l),c=e[a];-1===c&&(u=0);for(let h=0;h<u;++h)i.push(c),c+=s;for(let h=0;h<l-u;++h)i.push(-1)}if(o>0&&i.length!==t[o-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,s,r){const o=t.length,i=[];if(0===o)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let u=e[l];i.push(u);for(let c=1;c<o;++c){const h=t[c];if(h===l)u>=0&&(++a,a<r?u+=s:u=-1);else{if(a=0,l=h,h>=e.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${e.length}`);u=e[h]}i.push(u)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,s,r){const o=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case Vr.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,e,s,r);case Vr.ROW_SPLITS:if(o.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(o,e,s,r);default:throw new Error(`Unsupported partition type: ${Vr[i]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case Vr.FIRST_DIM_SIZE:return t[0];case Vr.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Vr.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Vr[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),s=this.calculateOutputSize(e),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const o=_w(s,!1),i=Cn(this.valuesDType,ie(o));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(e,r[0],s[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,r[u],s[u]);this.setOutput(this.raggedRank,l,i,o)}return[o,i]}setOutput(t,e,s,r){if(0===s.length)return;const o=this.values,i=s;let a=r.slice();a=a.slice(t+1);const l=ie(a),u=e.length;let c=this.defaultValue;if(c.length!==l&&1!==c.length){const f=this.defaultValueShape;q(()=>{const g=H(c,f);c=Da(g,a).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=u;++f){let g=f<u?e[f]:-1;if(g!==p){if(d<p){const m=o.subarray(h*l);Tw(i.subarray(d*l),m,(p-d)*l)}if(f>=u&&(g=Math.floor(s.length/l)),g>p)if(1===this.defaultValue.length)i.subarray(p*l,g*l).fill(this.defaultValue[0]),p=g;else for(;g>p;)Tw(i.slice(p*l),c,l),++p;g<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}else++p}}}function Tw(n,t,e){for(let s=0;s<e;s++)n[s]=t[s]}function _w(n,t){const e=[];for(let s of n){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}e.push(s)}return e}function Ew(n,t,e,s,r,o,i,a,l,u){return new zf(n,t,e,s,r,o,i,a,l,u).compute()}const mM={kernelName:bd,backendName:"cpu",kernelFunc:function fM(n){const{inputs:t,backend:e,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=s,u=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,h=e.data.get(i.dataId).values,d=a.map(m=>e.data.get(m.dataId).values),p=a.map(m=>m.shape),[f,g]=Ew(u,r.shape,c,o.shape,o.dtype,h,i.shape,d,p,l);return e.makeTensorInfo(f,o.dtype,g)}};function Aw(n,t,e,s){if(n===t||n<t&&e<0||t<n&&e>1)return Un(0,s);const l=Un(Math.abs(Math.ceil((t-n)/e)),s);t<n&&1===e&&(e=-1),l[0]=n;for(let u=1;u<l.length;u++)l[u]=l[u-1]+e;return l}const yM={kernelName:xd,backendName:"cpu",kernelFunc:function gM(n){const{backend:t,attrs:e}=n,{start:s,stop:r,dtype:o,step:i}=e,a=Aw(s,r,i,o);return t.makeTensorInfo([a.length],o,a)}},bM=an(Al,n=>1/n),xM={kernelName:Al,backendName:"cpu",kernelFunc:bM},wM={kernelName:kc,backendName:"cpu",kernelFunc:function vM(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:i,size:a}=s;je(r,"resizeBilinear");const l=Ye(r.shape),[u,c]=a,[h,d,p,f]=r.shape,g=e.data.get(r.dataId).values,m=new Float32Array(ie([h,u,c,f])),y=[o&&u>1?d-1:d,o&&c>1?p-1:p],b=[o&&u>1?u-1:u,o&&c>1?c-1:c];let S=0;const w=y[0]/b[0],I=y[1]/b[1];for(let _=0;_<h;_++)for(let R=0;R<u;R++){let F;F=i?w*(R+.5)-.5:w*R;const O=Math.max(0,Math.floor(F)),L=F-O,j=Math.min(d-1,Math.ceil(F)),Q=_*l[0]+O*l[1],te=_*l[0]+j*l[1];for(let se=0;se<c;se++){let oe;oe=i?I*(se+.5)-.5:I*se;const ae=Math.max(0,Math.floor(oe)),ue=oe-ae,re=Math.min(p-1,Math.ceil(oe)),de=Q+ae*l[2],ve=te+ae*l[2],Ie=Q+re*l[2],Ee=te+re*l[2];for(let Ce=0;Ce<f;Ce++){const Fe=g[de+Ce],$e=g[ve+Ce],st=Fe+(g[Ie+Ce]-Fe)*ue;m[S++]=st+($e+(g[Ee+Ce]-$e)*ue-st)*L}}}return e.makeTensorInfo([h,u,c,f],"float32",m)}},IM={kernelName:Sd,backendName:"cpu",kernelFunc:function SM(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:i}=s;je([o,r],"resizeBilinearGrad");const a=Ye(r.shape),[l,u,c,h]=r.shape,[,d,p]=o.shape,f=new Float32Array(l*u*c*h),g=[i&&d>1?u-1:u,i&&p>1?c-1:c],m=[i&&d>1?d-1:d,i&&p>1?p-1:p],y=g[0]/m[0],b=g[1]/m[1],S=e.data.get(o.dataId).values;let w=0;for(let I=0;I<l;I++){const _=I*a[0];for(let R=0;R<d;R++){const F=R*y,O=Math.floor(F),L=Math.min(Math.ceil(F),u-1),j=_+O*a[1],Q=_+L*a[1],te=F-O,se=1-te;for(let oe=0;oe<p;oe++){const ae=oe*b,ue=Math.floor(ae),re=Math.min(Math.ceil(ae),c-1),de=ae-ue,ve=1-de,Ie=j+ue*a[2],Ee=j+re*a[2],Ce=Q+ue*a[2],Fe=Q+re*a[2],$e=se*ve,Le=se*de,Je=te*ve,st=te*de;for(let tt=0;tt<h;tt++){const bt=S[w++];f[Ie+tt]+=bt*$e,f[Ee+tt]+=bt*Le,f[Ce+tt]+=bt*Je,f[Fe+tt]+=bt*st}}}}return e.makeTensorInfo([l,c,u,h],"float32",f)}},NM={kernelName:Nc,backendName:"cpu",kernelFunc:function CM(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:i,size:a}=s;je(r,"resizeNearestNeighbor");const l=Ye(r.shape),[u,c]=a,[h,d,p,f]=r.shape,g=e.data.get(r.dataId).values,m=new Float32Array(h*u*c*f),y=[o&&u>1?d-1:d,o&&c>1?p-1:p],b=[o&&u>1?u-1:u,o&&c>1?c-1:c],S=y[0]/b[0],w=y[1]/b[1];let I=0;for(let _=0;_<h;_++){const R=_*l[0];for(let F=0;F<u;F++){const O=i?S*(F+.5):S*F;let L=Math.min(d-1,o?Math.round(O):Math.floor(O));i&&(L=Math.max(0,L));const j=R+L*l[1];for(let Q=0;Q<c;Q++){const te=i?w*(Q+.5):w*Q;let se=Math.min(p-1,o?Math.round(te):Math.floor(te));i&&(se=Math.max(0,se));const oe=j+se*l[2];for(let ae=0;ae<f;ae++)m[I++]=g[oe+ae]}}}return e.makeTensorInfo([h,u,c,f],r.dtype,m)}},TM={kernelName:wd,backendName:"cpu",kernelFunc:function kM(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:i}=s;je([o,r],"resizeNearestNeighborGrad");const a=Ye(r.shape),l=Ye(o.shape),[u,c,h,d]=r.shape,[,p,f]=o.shape,g=new Float32Array(u*c*h*d),m=e.data.get(o.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?h-1:h],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],S=y[0]/b[0],w=y[1]/b[1],I=1/S,_=1/w,R=2*Math.ceil(I)+2,F=2*Math.ceil(_)+2;for(let O=0;O<u;O++){const L=O*a[0];for(let j=0;j<c;j++){const Q=L+j*a[1],te=Math.floor(j*I),se=Math.floor(te-R/2);for(let oe=0;oe<h;oe++){const ae=Q+oe*a[2],ue=Math.floor(oe*_),re=Math.floor(ue-F/2);for(let de=0;de<d;de++){let ve=0;for(let Ie=0;Ie<R;Ie++){const Ee=Ie+se;if(Ee<0||Ee>=p)continue;const Ce=L+Ee*l[1],Fe=Ee*S;if(j===Math.min(c-1,i?Math.round(Fe):Math.floor(Fe)))for(let Le=0;Le<F;Le++){const Je=Le+re;if(Je<0||Je>=f)continue;const st=Ce+Je*l[2],tt=Je*w;oe===Math.min(h-1,i?Math.round(tt):Math.floor(tt))&&(ve+=m[st+de])}}g[ae+de]=ve}}}}return e.makeTensorInfo(r.shape,r.dtype,g)}},EM={kernelName:Tc,backendName:"cpu",kernelFunc:function _M(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:o}=s;je(r,"reverse");const i=r.shape.length,a=St(o,r.shape);if(0===i)return Bo({inputs:{x:r},backend:e});const l=new Zn(r.shape,r.dtype),u=e.bufferSync(r);for(let c=0;c<l.size;c++){const h=l.indexToLoc(c),d=h.slice();a.forEach(p=>d[p]=r.shape[p]-1-d[p]),l.set(u.get(...d),...h)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}},AM={kernelName:Bd,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=t,a=e,l=$n(s.dtype,ie(s.shape)),[u,c,h,d]=s.shape,[p,f]=M1(i,c,h),m=Math.sin(r),y=Math.cos(r),b=a.data.get(s.dataId).values;for(let w=0;w<u;w++){const I=w*h*c*d;for(let _=0;_<c;_++){const R=_*(h*d);for(let F=0;F<h;F++){const O=F*d;for(let L=0;L<d;L++){const j=[u,_,F,L],Q=j[2],te=j[1];let se=(Q-p)*y-(te-f)*m,oe=(Q-p)*m+(te-f)*y;se=Math.round(se+p),oe=Math.round(oe+f);let ae=o;"number"!=typeof o&&(ae=3===L?255:o[L]),se>=0&&se<h&&oe>=0&&oe<c&&(ae=b[I+oe*(h*d)+se*d+L]),l[I+R+O+L]=ae}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},$M=an(Dl,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2==0?t:t+1}),RM={kernelName:Dl,backendName:"cpu",kernelFunc:$M},$w=zo(n=>1/Math.sqrt(n)),DM=na(Fl,$w),FM={kernelName:Fl,backendName:"cpu",kernelFunc:DM};function Xa(n,t,e,s,r,o,i,a,l,u){const c=[s/r,r],h=n.values,d=t.values;if(0===s)return kt(e,t.dtype);const p=l instanceof Zn?l:kt(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let f=0;f<o;f++){const g=[];let m=0;for(let y=0;y<i;y++){const b=h[f*i+y];g.push(b),m+=b*a[y]}if(m<0||m>=s/r)throw new Error(`Invalid indices: ${g} does not index into ${e}`);for(let y=0;y<r;y++)u?p.values[m*r+y]+=d[f*r+y]:p.values[m*r+y]=0===t.rank?d[0]:d[f*r+y]}return p}const LM={kernelName:Id,backendName:"cpu",kernelFunc:function OM(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:o}=t,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Bi(0,r,i),g=Xa(e.bufferSync(r),e.bufferSync(o),i,h,u,l,a,c,0,!0);return e.makeTensorInfo(i,g.dtype,g.values)}};function PM(n,t){let e=0,s=n.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),n[r]<t?e=r+1:s=r;return s}function MM(n,t){let e=0,s=n.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),n[r]<=t?e=r+1:s=r;return s}const VM={kernelName:Nd,backendName:"cpu",kernelFunc:function BM(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:o}=t,{side:i}=s,u=function zM(n,t,e,s,r,o){const i=Cn("int32",e*r);for(let a=0;a<e;++a){const l=n.slice(a*s,(a+1)*s),u=a*r;for(let c=0;c<r;++c)i[u+c]="left"===o?PM(l,t[c+u]):MM(l,t[c+u])}return i}(e.data.get(r.dataId).values,e.data.get(o.dataId).values,r.shape[0],r.shape[1],o.shape[1],i);return e.makeTensorInfo(o.shape,"int32",u)}},UM={kernelName:_c,backendName:"cpu",kernelFunc:function WM(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:o}=t;je([s,r,o],"select");const i=s.shape.length,a=e.data.get(s.dataId).values,l=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,c=Ws(r.dtype,o.dtype),h=Un(ie(r.shape),c);let d=0;const p=0===i||i>1||1===r.shape.length?1:ie(r.shape.slice(1));for(let f=0;f<a.length;f++)for(let g=0;g<p;g++)h[d++]=1===a[f]?l[f]:u[f];return e.makeTensorInfo(r.shape,c,h)}},GM=Mp,HM=zp,jM=an(Ol,n=>n>=0?HM*n:GM*(Math.exp(n)-1)),KM={kernelName:Ol,backendName:"cpu",kernelFunc:jM},qM=an(Ml,n=>n<0?-1:n>0?1:0),XM={kernelName:Ml,backendName:"cpu",kernelFunc:qM},ZM=an(Ll,n=>Math.sin(n)),YM={kernelName:Ll,backendName:"cpu",kernelFunc:ZM},JM=an(Pl,n=>Math.sinh(n)),QM={kernelName:Pl,backendName:"cpu",kernelFunc:JM},Rw=Math.log(1.1920928955078125e-7)+2,ez=an(Bl,n=>{const t=n>-Rw,e=n<Rw,s=Math.exp(n);let r;return r=e?s:t?n:Math.log(1+s),r}),tz={kernelName:Bl,backendName:"cpu",kernelFunc:ez},sz={kernelName:$c,backendName:"cpu",kernelFunc:function nz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,paddings:i}=s;je([r],"spaceToBatchND");const a=ie(o),l=[[0,0]];l.push(...i);for(let _=1+o.length;_<r.shape.length;++_)l.push([0,0]);const u=ww.kernelFunc({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),c=bh(u.shape,o,a,!1),h=xh(c.length,o.length,!1),d=vh(u.shape,o,a,!1),g=wn({inputs:{x:u},backend:e,attrs:{shape:c}}),b=Zs({inputs:{x:g},backend:e,attrs:{perm:h}}),I=wn({inputs:{x:b},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(b),I}};function Dw(n,t,e,s,r,o,i){const a=t[0],l=o[0],u=new Array(l),c=new Array(a),h=t[1];if(0===l){if(0!==a)throw new Error(M4(a));return[Cn(e,0),[0,h],Cn(r,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let m=0;m<a;++m){const y=n[m*h];if(y<0)throw new Error(z4(m,y));if(y>=l)throw new Error(B4(m,y,l));++f[y],d=d&&y>=p,p=y}let g=!0;for(let m=0;m<l;++m){const y=0===f[m];u[m]=y,g=g&&!y,f[m]=Math.max(f[m],1),m>0&&(f[m]+=f[m-1])}if(g&&d){const m=n,y=s;for(let b=0;b<a;++b)c[b]=b;return[m,[a,h],y,u,c]}{const m=f[l-1],y=Cn(e,m*h),b=Cn(r,m),S=new Array(l).fill(0);for(let w=0;w<a;++w){const I=n[w*h],R=(0===I?0:f[I-1])+S[I];S[I]++;for(let F=0;F<h;++F)y[R*h+F]=n[w*h+F];b[R]=s[w],c[w]=R}for(let w=0;w<l;++w)if(0===S[w]){const _=0===w?0:f[w-1];y[_*h+0]=w;for(let R=1;R<h;++R)y[_*h+R]=0;b[_]=i}return[y,[m,h],b,u,c]}}const oz={kernelName:kd,backendName:"cpu",kernelFunc:function rz(n){const{inputs:t,backend:e}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=t;if(1!==o.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${o.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const a=e.data.get(s.dataId).values,l=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,c=e.data.get(i.dataId).values[0],[h,d,p,f,g]=Dw(a,s.shape,s.dtype,l,r.dtype,u,c);return[e.makeTensorInfo(d,s.dtype,h),e.makeTensorInfo([d[0]],r.dtype,p),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(m=>Number(m)))),e.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}};function Fw(n,t,e,s,r){const o=ie(s),i=t[0],a=r.length,l=[];let u=1,c=-1;for(let m=0;m<a;++m){const y=r[m];if(-1===y){if(-1!==c)throw new Error(V4(c,m));c=m,l.push(1)}else{if(y<0)throw new Error(W4(m,y));u*=y,l.push(y)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const m=Math.trunc(o/u);if(u*m!==o)throw new Error(G4(s,l));l[c]=m}if(ie(l)!==o)throw new Error(H4(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let m=d-2;m>=0;--m)p[m]=p[m+1]*s[m+1]}const f=[];if(a>0){f[a-1]=1;for(let m=a-2;m>=0;--m)f[m]=f[m+1]*l[m+1]}const g=Cn(e,i*a);for(let m=0;m<i;++m){let y=0;for(let b=0;b<d;++b)y+=n[m*d+b]*p[b];for(let b=0;b<a;++b)g[m*a+b]=Math.trunc(y/f[b]),y%=f[b]}return[g,[i,a],l]}const az={kernelName:Td,backendName:"cpu",kernelFunc:function iz(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:r,newShape:o}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==o.shape.length)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(e.data.get(r.dataId).values),a=e.data.get(s.dataId).values,l=Array.from(e.data.get(o.dataId).values),[u,c,h]=Fw(a,s.shape,s.dtype,i,l);return[e.makeTensorInfo(c,s.dtype,u),e.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}};function E0(n,t,e,s,r,o=!1,i=0){const a=s.length,l=[t[0],n.length/t[0]],u=l[1],h=a>0?r[a-1]+1:0;if(h<0)throw new Error("segment ids must be >= 0");const d=t.slice();d[0]=h;const f=Cn(e,d.reduce((S,w)=>S*w,1));if(0===a)return h>0&&f.fill(i),[f,d];if(h<=0)throw new Error("segment ids must be >= 0");let g=0,m=1,y=0,b=r[g];for(;;){let S=0;if(m<a){if(S=r[m],b===S){++m;continue}if(b>=S)throw new Error("segment ids are not increasing")}if(b<0||b>=h)throw new Error(K4(b,h));b>y&&f.fill(i,y*u,b*u);for(let w=g;w<m;++w){const I=s[w];if(I<0||I>=l[0])throw new Error(q4(w,s[w],l[0]));for(let _=0;_<u;_++)f[b*u+_]+=n[I*u+_]}if(o)for(let w=0;w<u;w++)f[b*u+w]/=m-g;if(g=m,++m,y=b+1,b=S,m>a)break}return y<h&&f.fill(i,y*u,h*u),[f,d]}const uz={kernelName:_d,backendName:"cpu",kernelFunc:function lz(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values,[u,c]=E0(i,s.shape,s.dtype,a,l,!0);return e.makeTensorInfo(c,s.dtype,u)}},hz={kernelName:Ed,backendName:"cpu",kernelFunc:function cz(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values,[u,c]=E0(i,s.shape,s.dtype,a,l);return e.makeTensorInfo(c,s.dtype,u)}},pz={kernelName:Ad,backendName:"cpu",kernelFunc:function dz(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=t,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Bi(0,r,a),p=!1,f=e.bufferSync(r);let g;switch(o.dtype){case"bool":g=Xa(f,e.bufferSync(o),a,d,c,u,l,h,!!e.data.get(i.dataId).values[0],p);break;case"float32":case"int32":g=Xa(f,e.bufferSync(o),a,d,c,u,l,h,e.data.get(i.dataId).values[0],p);break;case"string":g=Xa(f,e.bufferSync(o),a,d,c,u,l,h,Zo(e.data.get(i.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${o.dtype}`)}return e.makeTensorInfo(a,g.dtype,g.values)}},mz={kernelName:Rc,backendName:"cpu",kernelFunc:function fz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:o,axis:i}=s,a=St(i,r.shape)[0],l=e2(r,o,a),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(h=>{const d=[...c];d[a]=h;const p=qa({inputs:{x:r},backend:e,attrs:{begin:u,size:d}});return u[a]+=h,p})}},gz=zo(n=>Math.sqrt(n)),yz=an(Vl,n=>Math.sqrt(n)),bz={kernelName:Vl,backendName:"cpu",kernelFunc:yz},xz={kernelName:$d,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;je(e,"square");const r=s.data.get(e.dataId).values,o=new Float32Array(r.length);for(let a=0;a<r.length;++a){const l=r[a];o[a]=l*l}return{dataId:s.write(o,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}},vz=qn((n,t)=>{const e=n-t;return e*e}),wz=as(Wl,vz),Sz={kernelName:Wl,backendName:"cpu",kernelFunc:wz},Ow=zo((n,t)=>{const{pattern:e,replaceGlobal:s,rewrite:r}=t;return n.replace(new RegExp(e,s?"g":""),r)}),Iz=na(Fc,Ow),Cz={kernelName:Fc,backendName:"cpu",kernelFunc:Iz},Nz=an(Kl,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),kz={kernelName:Kl,backendName:"cpu",kernelFunc:Nz};function Lw(n,t,e,s){const r=kt(n,t.dtype);for(let o=0;o<r.size;o++){const i=r.indexToLoc(o),a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[l]*e[l]+s[l];r.set(t.get(...a),...i)}return r}const _z={kernelName:Rd,backendName:"cpu",kernelFunc:function Tz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;je(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:y,begin:b,end:S,strides:w}=bg(r.shape,o,i,a,l,u,c,h,d);let I;if(g)I=wn({inputs:{x:r},backend:e,attrs:{shape:f}});else if(m||y){E(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const _=mg(b,S,w),R=qa({inputs:{x:r},backend:e,attrs:{begin:b,size:_}});I=wn({inputs:{x:R},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(R)}else{const R=Lw(p,e.bufferSync(r),w,b);I=e.makeTensorInfo(f,R.dtype,R.values)}return I}};class Ez{constructor(t,e,s,r,o,i){this.separator=wo(t),this.nGramWidths=e,this.leftPad=wo(s),this.rightPad=wo(r),this.padWidth=o,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const s=this.getPadWidth(e);return Math.max(0,t+2*s-e+1)}createNGrams(t,e,s,r,o,i){for(let a=0;a<o;++a){const l=this.getPadWidth(i),u=Math.max(0,l-a),c=Math.max(0,l-(o-(a+1))),h=i-(u+c),d=e+(u>0?0:a-l);let p=0;p+=u*this.leftPad.length;for(let b=0;b<h;++b)p+=t[d+b].length;p+=c*this.rightPad.length,p+=(u+c+h-1)*this.separator.length,s[r+a]=new Uint8Array(p);const g=s[r+a];let m=0;const y=b=>b.forEach(S=>g[m++]=S);for(let b=0;b<u;++b)y(this.leftPad),y(this.separator);for(let b=0;b<h-1;++b)y(t[d+b]),y(this.separator);if(h>0){y(t[d+h-1]);for(let b=0;b<c;++b)y(this.separator),y(this.rightPad)}else{for(let b=0;b<c-1;++b)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(t,e){const s=t.length,r=e.length;if(r>0){let l=e[0];if(0!==l)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<r;++u){let c=e[u]>=l;if(c=c&&e[u]<=s,!c)throw new Error(`Invalid split value ${e[u]}, must be in [${l}, ${s}]`);l=e[u]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const o=r-1,i=Cn("int32",r);if(0===s||0===r){const l=new Array(s);for(let u=0;u<=o;++u)i[u]=0;return[l,i]}i[0]=0;for(let l=1;l<=o;++l){const u=e[l]-e[l-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(u,h)}),this.preserveShort&&u>0&&0===c&&(c=1),i[l]=i[l-1]+c}const a=new Array(i[o]);for(let l=0;l<o;++l){const u=e[l];let c=i[l];if(this.nGramWidths.forEach(h=>{const p=this.getNumNGrams(e[l+1]-e[l],h);this.createNGrams(t,u,a,c,p,h),c+=p}),this.preserveShort&&c===i[l]){const h=e[l+1]-e[l];if(0===h)continue;this.createNGrams(t,u,a,c,1,h+2*this.padWidth)}}return[a,i]}}function Pw(n,t,e,s,r,o,i,a){return new Ez(e,s,r,o,i,a).compute(n,t)}const $z={kernelName:Dd,backendName:"cpu",kernelFunc:function Az(n){const{inputs:t,backend:e,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=e.data.get(c.dataId).values,p=e.data.get(h.dataId).values,[f,g]=Pw(d,p,r,o,i,a,l,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(h.shape,"int32",g)]}};function Rz(n,t,e,s){if(!n.length)return;if(0===t.length){for(let o=0;o<n.length;++o)s.push(n.subarray(o,o+1));return}if(1===t.length){const o=t[0];let i=n.indexOf(o);for(;-1!==i;){const a=n.subarray(0,i);(!e||0!==a.length)&&s.push(a),i=(n=n.subarray(i+1)).indexOf(o)}return void((!e||0!==n.length)&&s.push(n))}let r=0;for(let o=0;o<n.length+1;o++)if(o===n.length||-1!==t.indexOf(n[o])){const i=n.subarray(r,o);(!e||0!==i.length)&&s.push(i),r=o+1}}function Mw(n,t,e){const s=n.length,r=[];let o=0,i=0;const a=new Array(s);for(let d=0;d<s;++d){const p=r.length;Rz(n[d],t,e,r);const f=r.length-p;a[d]=f,o+=f,i=Math.max(i,f)}const l=Cn("int32",2*o),u=new Array(o),c=[s,i];let h=0;for(let d=0;d<s;++d)for(let p=0;p<a[d];++p)l[2*h]=d,l[2*h+1]=p,u[h]=r[h],++h;return[l,u,c]}const Fz={kernelName:Fd,backendName:"cpu",kernelFunc:function Dz(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=e.data.get(o.dataId).values,l=e.data.get(i.dataId).values[0],[u,c,h]=Mw(a,l,r),d=c.length;return[e.makeTensorInfo([d,2],"int32",u),e.makeTensorInfo([d],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(h))]}};function zw(n,t){const e=Cn("int32",n.length);for(let s=0;s<n.length;++s)e[s]=b3(n[s]).modulo(t).getLowBitsUnsigned();return e}const Lz={kernelName:Od,backendName:"cpu",kernelFunc:function Oz(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:r}=s,{input:o}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=zw(e.data.get(o.dataId).values,r);return e.makeTensorInfo(o.shape,"int32",a)}},Pz=an(Gl,n=>Math.tan(n)),Mz={kernelName:Gl,backendName:"cpu",kernelFunc:Pz},zz=an(Hl,n=>Math.tanh(n));function Bw(n,t){const e=new Array(n.rank);for(let r=0;r<e.length;r++)e[r]=n.shape[r]*t[r];const s=kt(e,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),i=new Array(n.rank);for(let l=0;l<i.length;l++)i[l]=o[l]%n.shape[l];const a=n.locToIndex(i);s.values[r]=n.values[a]}return s}const Ph=(n,t)=>{const e=t.value-n.value;return 0===e?n.index-t.index:e};function Vw(n,t,e=0,s=n.length-1){for(;s>e;){if(s-e>600){const a=s-e+1,l=t-e+1,u=Math.log(a),c=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*c*(a-c)/a)*Math.sign(l-a/2);Vw(n,t,Math.max(e,Math.floor(t-l*c/a+h)),Math.min(s,Math.floor(t+(a-l)*c/a+h)))}const r=n[t];let o=e,i=s;for(tr(n,e,t),Ph(n[s],r)>0&&tr(n,e,s);o<i;){for(tr(n,o,i),o++,i--;Ph(n[o],r)<0;)o+=1;for(;Ph(n[i],r)>0;)i-=1}0===Ph(n[e],r)?tr(n,e,i):(i+=1,tr(n,i,s)),i<=t&&(e=i+1),t<=i&&(s=i-1)}}function Ww(n,t,e,s,r){const o=t[t.length-1],[i,a]=[n.length/o,o],l=$n(e,i*s),u=$n("int32",i*s);for(let h=0;h<i;h++){const d=h*a,p=n.subarray(d,d+a);let f=new Array(p.length);p.forEach((b,S)=>f[S]={value:b,index:S}),s<f.length&&(Vw(f,s),f=f.slice(0,s)),r&&f.sort(Ph);const g=h*s,m=l.subarray(g,g+s),y=u.subarray(g,g+s);for(let b=0;b<s;b++)m[b]=f[b].value,y[b]=f[b].index}const c=t.slice();return c[c.length-1]=s,[kt(c,e,l),kt(c,"int32",u)]}function Uw(n,t,e){switch(e){case"reflect":return function Xz(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=2*t;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-t?e+s:-e-1}else if(e>t-1)if(t<=1)e=0;else{const s=2*t;e-=s*Math.trunc(e/s),e>=t&&(e=s-e-1)}return bs(0,e,t-1)}(n,t);case"wrap":return function Zz(n,t){let e=n;return e<0?t<=1?e=0:e+=t*(Math.trunc(-e/(t-1))+1):e>t-1&&(t<=1?e=0:e-=t*Math.trunc(e/(t-1))),bs(0,e,t-1)}(n,t);case"nearest":return function Jz(n,t){return bs(0,n,t-1)}(n,t);default:return function Yz(n,t){return n}(n)}}function Mh(n,t,e,s,r,o,i,a,l,u,c){return 0<=a&&a<t&&0<=l&&l<e?n[i*s+a*r+l*o+u]:c}function Qz(n,t,e,s,r,o,i,a,l,u,c){return Mh(n,t,e,s,r,o,i,Math.round(a),Math.round(l),u,c)}function eB(n,t,e,s,r,o,i,a,l,u,c){const h=Math.floor(a),d=Math.floor(l),p=h+1,f=d+1;return(p-a)*((f-l)*Mh(n,t,e,s,r,o,i,h,d,u,c)+(l-d)*Mh(n,t,e,s,r,o,i,h,f,u,c))+(a-h)*((f-l)*Mh(n,t,e,s,r,o,i,p,d,u,c)+(l-d)*Mh(n,t,e,s,r,o,i,p,f,u,c))}function Gw(n,t,e,s){const r=St(t,e)[0],o=[1,e[0],1];for(let f=0;f<r;f++)o[0]*=e[f];o[1]=e[r];for(let f=r+1;f<e.length;f++)o[2]*=e[f];const i=new Map,a=new Int32Array(e[r]),l=new Zn(o,s,n),u=[],c=1===o[0]&&1===o[2];for(let f=0;f<e[r];f++){let g;if(c)g=n[f].toString();else{const y=[];for(let b=0;b<o[0];b++)for(let S=0;S<o[2];S++)y.push(l.get(b,f,S));g=y.join(",")}const m=i.get(g);if(null!=m)a[f]=m;else{const y=i.size;i.set(g,y),a[f]=y,u.push(f)}}const h=o.slice();h[1]=i.size;const d=new Zn(h,s);u.forEach((f,g)=>{for(let m=0;m<o[0];m++)for(let y=0;y<o[2];y++)d.set(l.get(m,f,y),m,g,y)});const p=e.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:a}}const aB=[Q9,eF,nF,rF,X9,iF,uF,hF,pF,mF,yF,xF,wF,CF,kF,EF,$F,DF,OF,Y9,PF,BF,WF,GF,jF,K9,qF,ZF,H9,YF,QF,eO,nO,rO,iO,lO,cO,dO,fO,gO,bO,vO,SO,CO,NO,TO,EO,$O,RO,DO,FO,LO,VO,L9,UO,GO,JO,QO,eL,nL,cL,hL,pL,mL,bL,vL,SL,CL,kL,_L,AL,P9,RL,JF,FL,LL,ML,M9,BL,WL,GL,jL,qL,YL,QL,nP,rP,iP,aP,uP,hP,pP,mP,yP,xP,wP,IP,NP,TP,AP,DP,MO,OP,MP,VP,GP,jP,qP,ZP,YP,ww,tM,B9,sM,hM,pM,mM,yM,j9,N0,xM,V9,W9,Z9,wM,IM,NM,TM,EM,AM,RM,FM,LM,VM,UM,KM,G9,XM,YM,QM,MF,$P,tz,sz,oz,az,uz,hz,pz,mz,bz,xz,Sz,Cz,kz,_z,$z,Fz,Lz,oL,zO,Mz,{kernelName:Hl,backendName:"cpu",kernelFunc:zz},{kernelName:Cd,backendName:"cpu",kernelFunc:function Vz(n){const{inputs:t,backend:e}=n,{tensor:s,indices:r,updates:o}=t,{sliceRank:i,numUpdates:a,sliceSize:l,strides:u,outputSize:c}=Bi(0,r,s.shape),d=e.bufferSync(r),p=e.bufferSync(o),f=e.bufferSync(s),g=Xa(d,p,s.shape,c,l,a,i,u,f,!1);return e.makeTensorInfo(s.shape,g.dtype,g.values)}},{kernelName:jl,backendName:"cpu",kernelFunc:function Uz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:o}=s;je(r,"tile");const i=Bw(e.bufferSync(r),o);return e.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Ld,backendName:"cpu",kernelFunc:function Hz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:o,sorted:i}=s;je(r,"topk");const a=e.data.get(r.dataId).values,[l,u]=Ww(a,r.shape,r.dtype,o,i);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(u.shape,u.dtype,u.values)]}},{kernelName:Pd,backendName:"cpu",kernelFunc:function Kz(n){const{inputs:t,attrs:e,backend:s}=n,{image:r,transforms:o}=t,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=e,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],y=Ye(r.shape),b=y[0],S=y[1],w=y[2],I=Ye(m),_=I[0],R=I[1],F=I[2],O=$n(r.dtype,ie(m));O.fill(l);const L=s.data.get(r.dataId).values,j=s.data.get(o.dataId).values;for(let te=0;te<c;++te){const se=1===o.shape[0]?j:j.subarray(8*te,8*te+8);for(let oe=0;oe<f;++oe)for(let ae=0;ae<g;++ae)for(let ue=0;ue<p;++ue){let re;const de=se[6]*ae+se[7]*oe+1;if(0===de)continue;const Ie=(se[3]*ae+se[4]*oe+se[5])/de,Ee=Uw((se[0]*ae+se[1]*oe+se[2])/de,d,a),Ce=Uw(Ie,h,a);switch(i){case"nearest":re=Qz(L,h,d,b,S,w,te,Ce,Ee,ue,l);break;case"bilinear":re=eB(L,h,d,b,S,w,te,Ce,Ee,ue,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}O[te*_+oe*R+ae*F+ue]=re}return s.makeTensorInfo(m,r.dtype,O)}return{dataId:s.write(O,m,r.dtype),shape:r.shape,dtype:r.dtype}}},aF,{kernelName:Md,backendName:"cpu",kernelFunc:function tB(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:o}=t;je(o,"unique");const i=s.data.get(o.dataId).values,{outputValues:a,outputShape:l,indices:u}=Gw(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Oc,backendName:"cpu",kernelFunc:function sB(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r.shape.length,a=r.shape[o],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==o&&(l[u++]=r.shape[p]);const c=new Array(i).fill(0),h=r.shape.slice();h[o]=1;const d=new Array(a);for(let p=0;p<d.length;p++){c[o]=p;const f=qa({inputs:{x:r},backend:e,attrs:{begin:c,size:h}});d[p]=wn({inputs:{x:f},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(f)}return d}},{kernelName:Lc,backendName:"cpu",kernelFunc:function oB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:o}=t,{numSegments:i}=s;je(r,"unsortedSegmentSum");const u=[],c=[],h=r.shape.length-o.shape.length;let d=o;for(let f=0;f<h;++f){const g=Pf({inputs:{input:d},backend:e,attrs:{dim:f+1}});d=g,c.push(g)}for(let f=0;f<i;++f){const g=Xo(f,"int32"),m=e.makeTensorInfo([],"int32",g),y=Yv({inputs:{a:m,b:d},backend:e}),b=sa({inputs:{x:y},backend:e,attrs:{dtype:"float32"}}),S=Lf({inputs:{a:b,b:r},backend:e}),w=Lh({inputs:{x:S},backend:e,attrs:{axis:0,keepDims:!1}});u.push(w),c.push(m),c.push(y),c.push(b),c.push(S),c.push(w)}const p=vw({inputs:u,backend:e,attrs:{axis:0}});return c.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}},XP];for(const n of aB)Wd(n);const ra={},Bf={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ho(n,t){if(!(n in ra)||null!=t){const s=function cB(n,t){if(1!==n&&2!==n)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=null==t?function uB(n){if(!J().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&2===n)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(n):t;return e.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete ra[n]},!1),J().getBool("SOFTWARE_WEBGL_ENABLED")&&(Bf.failIfMajorPerformanceCaveat=!1),1===n?e.getContext("webgl",Bf)||e.getContext("experimental-webgl",Bf):e.getContext("webgl2",Bf)}(n,t);if(null===s)return console.log("Could not get context for WebGL version",n),null;ra[n]=s}const e=ra[n];return null==e||e.isContextLost()?(delete ra[n],ho(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),ra[n])}var Vf=function(n){return n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH",n}(Vf||{}),Wr=function(n){return n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD",n}(Wr||{}),Es=function(n){return n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",n}(Es||{});function zh(n,t){return[t,n]}function Wf(n){const t=ie(n);return ol(Math.ceil(t/4))}function Tu(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function A0(n,t){const e=n;let s,r,o,i,a,l,u,c,h,d;return 2===J().getNumber("WEBGL_VERSION")?(s=e.R32F,r=e.R16F,o=e.RGBA16F,i=e.RGBA32F,a=e.RED,u=4,c=1,h=e.HALF_FLOAT,d=e.FLOAT,l=e.RGBA8):(s=n.RGBA,r=n.RGBA,o=n.RGBA,i=e.RGBA,a=n.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function Oe(n,t){const e=t();return J().getBool("DEBUG")&&function pB(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+function yB(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(n,t))}(n),e}function gB(n){return!!(J().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===n||5.96e-8<Math.abs(n)&&Math.abs(n)<65504)}function Uf(n,t){return mi(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}const vB=/ERROR: [0-9]+:([0-9]+):/g;function Hw(n,t){const e=vB.exec(t);if(null==e)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(n);const s=+e[1],r=n.split("\n"),o=r.length.toString().length+2,i=r.map((h,d)=>yo((d+1).toString(),o)+h);let a=0;for(let h=0;h<i.length;h++)a=Math.max(i[h].length,a);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${yo(u[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function $0(n,t){if(Oe(n,()=>n.validateProgram(t)),!1===n.getProgramParameter(t,n.VALIDATE_STATUS))throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function jw(n,t,e,s,r,o,i){const a=n.getAttribLocation(t,e);return-1!==a&&(Oe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),Oe(n,()=>n.vertexAttribPointer(a,r,n.FLOAT,!1,o,i)),Oe(n,()=>n.enableVertexAttribArray(a)),!0)}function $B(n,t,e,s){Oe(n,()=>function _B(n,t,e){(function qw(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${e}].`)})(n,e),Oe(n,()=>n.activeTexture(n.TEXTURE0+e)),Oe(n,()=>n.bindTexture(n.TEXTURE_2D,t))}(n,t,s)),Oe(n,()=>n.uniform1i(e,s))}function R0(n,t,e){Oe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Oe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function Kw(n,t){Oe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Oe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Gf(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function RB(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(n,t))}function mi(n,t,e){const s=Oe(n,()=>t());if(null==s)throw new Error(e);return s}function _u(n,t=2){return ie(n.slice(0,n.length-t))}function Eu(n){if(0===n.length)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Hf(n){let t=[1,1,1];return 0===n.length||1===n.length&&1===n[0]||(t=[_u(n),...Eu(n)]),t}function jf(n){return n%2==0}function Kf(n,t){if(At(n=n.slice(-2),t=t.slice(-2))||!n.length||!t.length||0===n[0]||0===n[1]||0===t[0]||0===t[1])return!0;if(n.length!==t.length){const e=n[n.length-1],s=t[t.length-1];if(e===s||jf(e)&&jf(s)&&(1===n[0]||1===t[0]))return!0}return n[1]===t[1]&&jf(n[0])&&jf(t[0])}let qf,Xf;function Ur(n,t){return null!=n.getExtension(t)}function Xw(n){try{if(null!=ho(n))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function D0(n){const t=A0(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(o),i}function Bh(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{null!=e&&E("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const Xe=J();function Ms(){let n,t,e,s,r,o,i,a,l,u;return 2===J().getNumber("WEBGL_VERSION")?(n="#version 300 es",t="in",e="out",s="in",r="texture",o="outputColor",i="out vec4 outputColor;",a=J().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(n="",t="attribute",e="varying",s="varying",r="texture2D",o="gl_FragColor",i="",a="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:r,output:o,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}function Za(n,t,e="index"){const s=Ye(t);return s.map((r,o)=>`int ${n[o]} = ${e} / ${r}; ${o===s.length-1?`int ${n[o+1]} = ${e} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`};`).join("")}function Zf(n,t,e="index"){const s=Ye(t);return s.map((r,o)=>`int ${n[o]} = ${e} / outShapeStrides[${o}]; ${o===s.length-1?`int ${n[o+1]} = ${e} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`};`).join("")}function F0(n){const t=Ye(n).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Xe.registerFlag("HAS_WEBGL",()=>Xe.getNumber("WEBGL_VERSION")>0),Xe.registerFlag("WEBGL_VERSION",()=>Xw(2)?2:Xw(1)?1:0),Xe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Xe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Xe.get("WEBGL_VERSION")),Xe.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Xe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Xe.registerFlag("WEBGL_PACK",()=>Xe.getBool("HAS_WEBGL")),Xe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Xe.getBool("WEBGL_PACK")),Xe.registerFlag("WEBGL_PACK_CLIP",()=>Xe.getBool("WEBGL_PACK")),Xe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Xe.getBool("WEBGL_PACK")),Xe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Xe.getBool("WEBGL_PACK")),Xe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Xe.getBool("WEBGL_PACK")),Xe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Xe.getBool("WEBGL_PACK")),Xe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Xe.getBool("WEBGL_PACK")),Xe.registerFlag("WEBGL_PACK_REDUCE",()=>Xe.getBool("WEBGL_PACK")),Xe.registerFlag("WEBGL_LAZILY_UNPACK",()=>Xe.getBool("WEBGL_PACK")),Xe.registerFlag("WEBGL_CONV_IM2COL",()=>Xe.getBool("WEBGL_PACK")),Xe.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Xe.getBool("WEBGL_PACK")),Xe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function FB(n){if(null==qf){const t=ho(n);qf=t.getParameter(t.MAX_TEXTURE_SIZE)}return qf}(Xe.getNumber("WEBGL_VERSION"))),Xe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function OB(n){if(null==Xf){const t=ho(n);Xf=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Xf)}(Xe.getNumber("WEBGL_VERSION"))),Xe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Xe.getNumber("WEBGL_VERSION");return 0===n?0:function LB(n){if(0===n)return 0;let t;const e=ho(n);return t=Ur(e,"EXT_disjoint_timer_query_webgl2")&&2===n?2:Ur(e,"EXT_disjoint_timer_query")?1:0,t}(n)}),Xe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Xe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!_m()),Xe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function PB(n){if(0===n)return!1;const t=ho(n);if(1===n){if(!Ur(t,"OES_texture_float"))return!1}else if(!Ur(t,"EXT_color_buffer_float"))return!1;return D0(t)}(Xe.getNumber("WEBGL_VERSION"))),Xe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Xe.getBool("WEBGL_FORCE_F16_TEXTURES")&&Xe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Xe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function MB(n){if(0===n)return!1;const t=ho(n);if(1!==n){if(Ur(t,"EXT_color_buffer_float"))return D0(t);const s="EXT_color_buffer_half_float";if(Ur(t,s)){const r=t.getExtension(s);return function zB(n,t){const e=A0(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),a}(t,r)}return!1}return!(!Ur(t,"OES_texture_float")||!Ur(t,"WEBGL_color_buffer_float"))&&D0(t)}(Xe.getNumber("WEBGL_VERSION"))),Xe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>function BB(n){return 2===n&&null!=ho(n).fenceSync}(Xe.getNumber("WEBGL_VERSION"))),Xe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Xe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Xe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if("number"!=typeof n)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&-1!==n)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)}),Xe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>_m()?1:-1,n=>{if("number"!=typeof n)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&-1!==n)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)}),Xe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),Xe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),Xe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),Xe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),Xe.registerFlag("WEBGL_EXP_CONV",()=>!1),Xe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Xe.getBool("IS_TEST")),Xe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),Xe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),Xe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),Xe.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);const Zw="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Yw}=Ge;function UB(n,t,e){const s=[];if(n.forEach(p=>{const f=ie(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),e.enableShapeUniforms){const{uniformShape:g}=L0(e.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(g.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`)}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join("\n"),o=n.map(p=>function GB(n,t,e=!1,s){let r="";r+=e?Jw(n,s):Au(n,s);return n.shapeInfo.logicalShape.length<=t.logicalShape.length&&(r+=e?function IV(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,i=t.logicalShape.length,a=Yw(n.shapeInfo.logicalShape,t.logicalShape),l=fn(i),u=i-o;let c;const h=["x","y","z","w","u","v"];c=0===o?"":i<2&&a.length>=1?"coords = 0;":a.map(b=>`coords.${h[b+u]} = 0;`).join("\n");let d="";d=i<2&&o>0?"coords":n.shapeInfo.logicalShape.map((b,S)=>`coords.${h[S+u]}`).join(", ");let p="return outputValue;";const g=1===ie(n.shapeInfo.logicalShape),y=1===ie(t.logicalShape);if(1!==o||g||y){if(g&&!y)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(a.length){const b=o-2,S=o-1;a.indexOf(b)>-1&&a.indexOf(S)>-1?p="return vec4(outputValue.x);":a.indexOf(b)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(S)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}(n,t):function CV(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",a=n.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!n.shapeInfo.isUniform&&a===l&&null==n.shapeInfo.flatOffset&&At(n.shapeInfo.texShape,t.texShape))return`\n      float ${r}() {\n        return sampleTexture(${e}, resultUV);\n      }\n    `;const u=fn(l),c=Yw(n.shapeInfo.logicalShape,t.logicalShape),h=l-a;let d;const p=["x","y","z","w","u","v"];d=0===a?"":l<2&&c.length>=1?"coords = 0;":c.map(g=>`coords.${p[g+h]} = 0;`).join("\n");let f="";return f=l<2&&a>0?"coords":n.shapeInfo.logicalShape.map((g,m)=>`coords.${p[m+h]}`).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}(n,t)),r}(p,t,e.packedInputs,e.enableShapeUniforms)).join("\n"),i=t.texShape,a=Ms(),l=function KB(n){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${n.texture2D}(textureSampler, uv).r;\n    }\n  `}(a);let u,c,h=function ZB(n){return`${n.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${n.varyingFs} vec2 resultUV;\n    ${n.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${n.defineSpecialNaN}\n    ${n.defineSpecialInf}\n    ${n.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${YB}\n    ${JB}\n    ${QB}\n  `}(a);return t.isPacked?(u=function HB(n,t,e){switch(n.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function tV(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===s[0]?e?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?e?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:e?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,t,e);case 2:return function uV(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(At(n,t))return e?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(n[1]/2);return e?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(n,t,e);case 3:return function sV(n,t,e){if(e)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[2]/2),o=r*Math.ceil(n[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${o};\n      index -= b * ${o};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(n,t,e);default:return function oV(n,t,e){if(e)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[n.length-1]/2),o=r*Math.ceil(n[n.length-2]/2);let i=o,a="",l="b, r, c";for(let u=2;u<n.length-1;u++)i*=n[n.length-u-1],a=`\n      int b${u} = index / ${i};\n      index -= b${u} * ${i};\n    `+a,l=`b${u}, `+l;return`\n    ivec${n.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${a}\n\n      int b = index / ${o};\n      index -= b * ${o};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${n.length}(${l});\n    }\n  `}(n,t,e)}}(t.logicalShape,i,e.enableShapeUniforms),c=function XB(n){return`\n    void setOutput(vec4 val) {\n      ${n.output} = val;\n    }\n  `}(a)):(u=function jB(n,t,e){switch(n.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function nV(n,t,e){return 1===t[0]?e?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?e?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:e?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,e);case 2:return function cV(n,t,e){return At(n,t)?e?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===n[1]?e?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===n[0]?e?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:e?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${n[1]};\n      int c = index - r * ${n[1]};\n      return ivec2(r, c);\n    }\n  `}(n,t,e);case 3:return function rV(n,t,e){if(e)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${Zf(["r","c","d"],n)}\n    return ivec3(r, c, d);\n  }\n`;const s=Za(["r","c","d"],n);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(n,t,e);case 4:return function iV(n,t,e){if(e)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${Zf(["r","c","d","d2"],n)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const s=Za(["r","c","d","d2"],n);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(n,t,e);case 5:return function aV(n,t){const e=Za(["r","c","d","d2","d3"],n);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${e}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(n,t);case 6:return function lV(n,t){const e=Za(["r","c","d","d2","d3","d4"],n);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${e}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,e.enableShapeUniforms),c=function qB(n){return`\n    void setOutput(float val) {\n      ${n.output} = vec4(val, 0, 0, 0);\n    }\n  `}(a)),e.packedInputs&&(h+=eV),[h,l,c,r,u,o,e.userCode].join("\n")}function Au(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return function dV(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${e};}`;const[r,o]=n.shapeInfo.texShape;if(1===r&&1===o)return`\n      float ${s}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=Ya(e);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `;const[a,l]=n.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${a}, ${l}, ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(n,t);case 1:return function fV(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${$u(n)}\n      }\n    `;const r=n.shapeInfo.texShape,o=r[0],i=r[1];if(1===i&&1===o)return`\n      float ${s}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const a=Ya(e);return 1===i?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===o?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:t?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});\n      return sampleTexture(${e}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${o}, ${i}, index + ${a});\n      return sampleTexture(${e}, uv);\n    }\n  `}(n,t);case 2:return function gV(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape;if(null!=o&&At(e,o))return t?`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${o[1]}.0, ${o[0]}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const{newShape:i,keptDims:a}=Qt(e);if(i.length<e.length){const p=["row","col"];return`\n      ${Au(Ru(n,i),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${Du(p,a)});\n      }\n    `}if(n.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${$u(n)}\n      }\n    `;const u=o[0],c=o[1],h=Ya(s);return 1===c?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(n,t);case 3:return function bV(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=e[1]*e[2],i=e[2],{newShape:a,keptDims:l}=Qt(e);if(a.length<e.length){const m=["row","col","depth"];return`\n        ${Au(Ru(n,a),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Du(m,l)});\n        }\n      `}if(n.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${o}, ${i}, 1)));\n        ${$u(n)}\n      }\n    `;const c=n.shapeInfo.texShape,h=c[0],d=c[1],p=n.shapeInfo.flatOffset;if(d===o&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=Ya(s);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${o} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(n,t);case 4:return function vV(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=e[3],i=e[2]*o,a=e[1]*i,{newShape:l,keptDims:u}=Qt(e);if(l.length<e.length){const S=["row","col","depth","depth2"];return`\n      ${Au(Ru(n,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Du(S,u)});\n      }\n    `}if(n.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${i}, ${o}, 1)));\n        ${$u(n)}\n      }\n    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,m=`int stride0 = ${s}Shape[1] * stride1;`;if(p===a&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(p===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const y=Ya(s);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${g}\n      ${m}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${i} +\n          depth * ${o} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `}(n,t);case 5:return function wV(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t[4],o=t[3]*r,i=t[2]*o,a=t[1]*i,{newShape:l,keptDims:u}=Qt(t);if(l.length<t.length){const m=["row","col","depth","depth2","depth3"];return`\n      ${Au(Ru(n,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${Du(m,u)});\n      }\n    `}if(n.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${a}, ${i}, ${o}, ${r})) +\n          depth3;\n        ${$u(n)}\n      }\n    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===a&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${o}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${i} + depth * ${o} +\n          depth2 * ${r} + depth3 + ${Ya(e)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${e}, uv);\n    }\n  `}(n);case 6:return function SV(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:r,keptDims:o}=Qt(t);if(r.length<t.length){const y=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Au(Ru(n,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${Du(y,o)});\n      }\n    `}const i=t[5],a=t[4]*i,l=t[3]*a,u=t[2]*l,c=t[1]*u;if(n.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${a})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${$u(n)}\n      }\n    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${a}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${a} + depth3 * ${i} + depth4 + ${Ya(e)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${e}, uv);\n    }\n  `}(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function Jw(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return function hV(n){const t=n.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${Ms().texture2D}(${t}, halfCR);\n    }\n  `}(n);case 1:return function pV(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=n.shapeInfo.texShape,o=Ms();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${o.texture2D}(${e}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${o.texture2D}(${e}, uv);\n    }\n  `}(n,t);case 2:return function mV(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=o[0],a=o[1],l=Ms();if(null!=o&&At(e,o))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(n,t);case 3:return function yV(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(1===e[0]){const p=[1,2],g=["b","row","col"];return`\n        ${Jw(Ru(n,e.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Du(g,p)});\n        }\n      `}const a=Ms();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${a.texture2D}(${s}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(e[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(e[1]/2)}, ${c}, b, row, col);\n      return ${a.texture2D}(${s}, uv);\n    }\n  `}(n,t);default:return function xV(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=Ms();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${e}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${e}, uv);\n    }\n  `;const o=n.shapeInfo.logicalShape,i=o.length,a=n.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=l[0],c=l[1],h=Math.ceil(o[i-1]/2);let d=h*Math.ceil(o[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<i-1;g++)p=`int b${g}, `+p,d*=o[i-g-1],f=`b${g} * ${d} + `+f;return`\n    vec4 ${s}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${e}, uv);\n    }\n  `}(n,t)}}const YB="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",JB="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",QB="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",eV="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Ya(n){return`offset${n}`}function $u(n){const t=n.name,e=ie(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`\n    for (int i = 0; i < ${e}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function fn(n){if(n<=1)return"int";if(2===n)return"ivec2";if(3===n)return"ivec3";if(4===n)return"ivec4";if(5===n)return"ivec5";if(6===n)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function L0(n,t,e){const{newShape:s,keptDims:r}=Qt(t),o=t.length,i=n&&3===o&&1===t[0],a=i?t.slice(1):s,l=!n&&o>1&&!At(t,e)&&s.length<o||i;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:r}}function Ru(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function Du(n,t){return t.map(e=>n[e]).join(", ")}function eS(n,t,e){const s=[],r=[];let o,i,a,l=null,u=null;u=n.getUniformLocation(e,"NAN",!1),1===J().getNumber("WEBGL_VERSION")&&(l=n.getUniformLocation(e,"INFINITY",!1));const c=!1;for(const h of t.variableNames){const d={name:h,uniform:n.getUniformLocation(e,h,c),offset:n.getUniformLocation(e,`offset${h}`,c)};t.enableShapeUniforms&&(d.shape=n.getUniformLocation(e,`${h}Shape`,c),d.texShape=n.getUniformLocation(e,`${h}TexShape`,c)),s.push(d)}if(t.enableShapeUniforms&&(o=n.getUniformLocation(e,"outShape",c),a=n.getUniformLocation(e,"outShapeStrides",c),i=n.getUniformLocation(e,"outTexShape",c)),t.customUniforms)for(const h of t.customUniforms)r.push(n.getUniformLocation(e,h.name,c));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:o,outShapeStridesLocation:a,outTexShapeLocation:i}}function tS(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const r=e.logicalShape,o=t[s],i=o.shape;if(!At(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&o.isUniform)return;const a=e.texShape,l=o.isUniform?null:o.texData.texShape;if(!At(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function As(n){return J().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}class _V{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Vf.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Ms();this.outputShape=t,this.enableShapeUniforms=As(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Zf(["r","c","d"],t):Za(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class EV{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Vf.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Ms();this.outputShape=t,this.enableShapeUniforms=As(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Zf(["r","c","d"],t):Za(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class AV{constructor(t){this.variableNames=["A"],this.outTexUsage=Wr.DOWNLOAD;const e=Ms();this.outputShape=t,this.userCode=`\n      ${Zw}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class $V{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Wr.DOWNLOAD;const e=Ms();this.outputShape=t,this.userCode=`\n      ${Zw}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}const RV={R:0,G:1,B:2,A:3};class nS{constructor(t,e=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Ms();this.outputShape=t,this.enableShapeUniforms=As(this.outputShape.length);let o="result";e&&(o="floor(result * 255. + 0.5)");let i="";for(let a=0;a<s.length;a++)i+=`\n          if(offset == ${a}) {\n            result = values[${RV[s[a]]}];\n          }`;this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":F0(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${s.length});\n\n        flatIndex = idiv(flatIndex, ${s.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${i}\n        }\n        ${r.output} = vec4(${o}, 0., 0., 0.);\n      }\n    `}}class DV{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Ms();this.outputShape=t,this.enableShapeUniforms=As(this.outputShape.length);let r="",o="result";e&&(o="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){const l=2*i+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {\n            localCoords[1] += ${i};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${s.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${l}] = values[0];\n            } else if (offset == 1) {\n              result[${l}] = values[1];\n            } else if (offset == 2) {\n              result[${l}] = values[2];\n            } else {\n              result[${l}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":F0(t)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${s.output} = ${o};\n        }\n    `}}function Vh(n,t,e,s,r,o){!function kB(n,t){const e=J().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0)throw new Error(`Requested texture size [${n}x${t}] is invalid.`);if(n>e||t>e)throw new Error(`Requested texture size [${n}x${t}] greater than WebGL maximum on this browser / GPU [${e}x${e}].`)}(t,e);const i=function NB(n){return mi(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}(n),a=n.TEXTURE_2D;return Oe(n,()=>n.bindTexture(a,i)),Oe(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Oe(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Oe(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),Oe(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),1===J().getNumber("WEBGL_VERSION")?Oe(n,()=>n.texImage2D(a,0,s,t,e,0,r,o,null)):Oe(n,()=>n.texStorage2D(a,1,s,t,e)),Oe(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[e,t]}}function sS(n){return n.internalFormatFloat}function rS(n){return n.internalFormatHalfFloat}function oS(n){return n.downloadTextureFormat}function iS(n){return n.internalFormatPackedFloat}function aS(n){return n.internalFormatPackedHalfFloat}class P0{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=J().getNumber("WEBGL_VERSION");if(null!=t?(this.gl=t,function lB(n,t){ra[n]=t}(e,t)):this.gl=ho(e),t=this.gl,2===J().getNumber("WEBGL_VERSION")){const o=t;this.createVertexArray=()=>Oe(o,()=>o.createVertexArray()),this.bindVertexArray=i=>Oe(o,()=>o.bindVertexArray(i)),this.deleteVertexArray=i=>Oe(o,()=>o.deleteVertexArray(i)),this.getVertexArray=()=>Oe(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(null!=t){const o=t.getExtension("OES_vertex_array_object");if(null==o)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Oe(t,()=>o.createVertexArrayOES()),this.bindVertexArray=i=>Oe(t,()=>o.bindVertexArrayOES(i)),this.deleteVertexArray=i=>Oe(t,()=>o.deleteVertexArrayOES(i)),this.getVertexArray=()=>Oe(t,()=>t.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===J().getNumber("WEBGL_VERSION")){const i="OES_texture_half_float";if(this.textureFloatExtension=Uf(this.gl,"OES_texture_float"),Ur(this.gl,i))this.textureHalfFloatExtension=Uf(this.gl,i);else if(J().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Ur(this.gl,r))this.colorBufferHalfFloatExtension=Uf(this.gl,r);else if(J().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Ur(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else{if(!Ur(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function OV(n){return function IB(n,t){const e=mi(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Oe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),Oe(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}(n,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function LV(n){return function CB(n,t){const e=mi(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Oe(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),Oe(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}(n,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function TB(n){return mi(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=A0(this.gl,this.textureHalfFloatExtension)}get debug(){return J().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Oe(t,()=>t.finish()),Oe(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Oe(t,()=>t.deleteFramebuffer(this.framebuffer)),Oe(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Oe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Oe(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function PV(n,t,e,s){const[r,o]=zh(t,e);return Vh(n,r,o,sS(s),s.textureFormatFloat,n.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function MV(n,t,e,s){const[r,o]=zh(t,e);return Vh(n,r,o,rS(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function zV(n,t,e,s){const[r,o]=zh(t,e);return Vh(n,r,o,oS(s),n.RGBA,n.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function GV(n,t,e){Oe(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?2===J().getNumber("WEBGL_VERSION")?Oe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,e.data)):Oe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):2===J().getNumber("WEBGL_VERSION")?Oe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,e)):Oe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),Oe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,r){this.throwIfDisposed(),function UV(n,t,e,s,r,o){let i,a,l;Oe(n,()=>n.bindTexture(n.TEXTURE_2D,t)),r instanceof Uint8Array?(i=new Uint8Array(e*s*4),a=n.UNSIGNED_BYTE,l=n.RGBA):(i=new Float32Array(e*s*4),a=n.FLOAT,l=o.internalFormatPackedFloat),i.set(r),2===J().getNumber("WEBGL_VERSION")?Oe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e,s,n.RGBA,a,i)):Oe(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,e,s,0,n.RGBA,a,i)),Oe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}(this.gl,t,e,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function VV(n,t,e,s){const[r,o]=Tu(t,e);return Vh(n,r,o,aS(s),n.RGBA,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function BV(n,t,e,s){const[r,o]=Tu(t,e);return Vh(n,r,o,iS(s),n.RGBA,n.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Kw(this.gl,this.framebuffer),this.outputTexture=null),Oe(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>function KV(n,t,e,s){const[r,o]=zh(t,e),a=new Uint8Array(function hB(n,t){return n*t}(t*e,4));return Oe(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,r,o,i){return function qV(n,t,e,s,r,o,i,a){const l=n,u=new Float32Array(function dB(n,t){const[e,s]=Tu(n,t);return e*s*4}(o,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,o,i)}downloadFloat32MatrixFromBuffer(t,e){return function jV(n,t,e){const s=n,r=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const r=function HV(n,t,e,s){const r=n.createBuffer();Oe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const a=16*t*e;return Oe(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),Oe(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),Oe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}(this.gl,e,s);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(J().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const i=r.clientWaitSync(o,0,0);return i===r.ALREADY_SIGNALED||i===r.CONDITION_SATISFIED},e=o}else J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>function XV(n,t,e){const s=new Float32Array(t*e*4);return Oe(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=function FV(n){const t=Ms();return function bB(n,t){const e=mi(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Oe(n,()=>n.shaderSource(e,t)),Oe(n,()=>n.compileShader(e)),!1===n.getShaderParameter(e,n.COMPILE_STATUS))throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}(n,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e));const s=function wB(n){return mi(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}(e);Oe(e,()=>e.attachShader(s,this.vertexShader)),Oe(e,()=>e.attachShader(s,t)),function SB(n,t){if(Oe(n,()=>n.linkProgram(t)),!J().get("ENGINE_COMPILE_ONLY")&&!1===n.getProgramParameter(t,n.LINK_STATUS))throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(e,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&$0(e,r),r}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;Oe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),function WV(n,t,e){Oe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),jw(n,t,"clipSpacePos",e,3,20,0)&&jw(n,t,"uv",e,2,20,12)}(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&(Oe(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&$0(this.gl,this.program),Oe(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?function EB(n,t,e){return mi(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}(this.gl,t,e):function AB(n,t,e){return n.getUniformLocation(t,e)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Oe(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),$B(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[r,o]=Tu(e,s);this.setOutputMatrixTextureDriver(t,r,o)}setOutputMatrixWriteRegion(t,e,s,r){this.setOutputMatrixWriteRegionDriver(s,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&$0(this.gl,this.program),Gf(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Oe(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Oe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Uf(this.gl,2===J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();return void e.endQuery(s.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(t){var e=this;return(0,ce.Z)(function*(){return yield Wn(()=>e.disposed||e.isQueryAvailable(t,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),e.getQueryTime(t,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})()}getQueryTime(t,e){if(0===e)return null;if(2===e){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function ZV(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in J().platform&&(s=J().platform.setTimeoutCustom.bind(J().platform)),Wn(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,s)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),R0(this.gl,t,this.framebuffer),this.debug&&Gf(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(R0(this.gl,this.outputTexture,this.framebuffer),this.debug&&Gf(this.gl)):Kw(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const r=this.gl;R0(r,t,this.framebuffer),this.debug&&Gf(r),this.outputTexture=t,Oe(r,()=>r.viewport(0,0,e,s)),Oe(r,()=>r.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,r){this.throwIfDisposed(),Oe(this.gl,()=>this.gl.scissor(t,e,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:YV,bincountImpl:lS,bincountReduceImpl:JV,bitwiseAndImpl:QV,castImpl:eW,ceilImpl:tW,concatImpl:nW,equalImpl:sW,expImpl:rW,expm1Impl:oW,floorImpl:iW,gatherNdImpl:aW,gatherV2Impl:lW,greaterImpl:uW,greaterEqualImpl:cW,lessImpl:hW,lessEqualImpl:dW,linSpaceImpl:pW,logImpl:fW,maxImpl:mW,maximumImpl:gW,minimumImpl:yW,multiplyImpl:bW,negImpl:xW,notEqualImpl:vW,prodImpl:wW,raggedGatherImpl:SW,raggedRangeImpl:IW,raggedTensorToTensorImpl:CW,rangeImpl:NW,rsqrtImpl:kW,scatterImpl:TW,sigmoidImpl:_W,simpleAbsImpl:uS,sliceImpl:EW,sparseFillEmptyRowsImpl:AW,sparseReshapeImpl:$W,sparseSegmentReductionImpl:cS,sqrtImpl:RW,staticRegexReplaceImpl:DW,stridedSliceImpl:FW,stringNGramsImpl:OW,stringSplitImpl:LW,stringToHashBucketFastImpl:PW,subImpl:MW,tileImpl:zW,topKImpl:BW,transposeImpl:M0,uniqueImpl:VW}=us;function hS(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function zs(n,t){return 1===t?[n]:hS(n,t)}class UW{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=As(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=zs("rc",this.rank),s=fn(this.rank),r=this.getOutOfBoundsCondition(e),o=this.getSetup(e),i=this.getOutput(e);this.userCode=`\n        void main() {\n          ${s} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${o}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}getSourceCoordsArr(t){const e=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let i=2;i<this.rank;i++)o=`${t[t.length-1-i]},`+o;e.push(o)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let s=this.rank-2;s<this.rank;s++)e+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2);return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1]};\n      bool rEdge = rp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2]};\n    `}getOutput(t){const e=this.getSourceCoordsArr(t);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class dS{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=As(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2==1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`\n        ${o}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${function GW(n,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?function WB(n,t,e="index"){const r=function VB(n,t){const e=n.length,s=n.map(o=>`${t}[${o}]`),r=new Array(e-1);r[e-2]=s[e-1];for(let o=e-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}(n.map((o,i)=>i),t);return r.map((o,i)=>`int ${n[i]} = ${e} / ${r[i]}; ${i===r.length-1?`int ${n[i+1]} = ${e} - ${n[i]} * ${r[i]}`:`index -= ${n[i]} * ${r[i]}`};`).join("")}(["r","c","d"],"inputShape"):Za(["r","c","d"],n)}\n      return ivec3(r, c, d);\n    }\n  `}(e,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":F0(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};\n\n        ${s}\n\n        setOutput(result);\n      }\n    `}}class HW{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,s){const r=fS(e,s),o=mS(t,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const i=pS(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const l=this.freeTextures[o].pop();return this.usedTextures[o].push(l),l}let a;return r===Es.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Es.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Es.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Es.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Es.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[o].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,s,r){if(null==this.freeTextures)return;const o=fS(s,r),i=mS(e,o,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=pS(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=J().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==l&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const u=this.usedTextures[i],c=u&&u.indexOf(t);if(null==c||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function pS(n,t,e,s,r){const o=function KW(n,t){switch(n){case Es.PACKED_2X2_FLOAT32:return iS(t);case Es.PACKED_2X2_FLOAT16:return aS(t);case Es.UNPACKED_FLOAT32:return sS(t);case Es.UNPACKED_FLOAT16:return rS(t);case Es.PACKED_4X1_UNSIGNED_BYTE:return oS(t);default:throw new Error(`Unknown physical texture type ${n}`)}}(t,s);let i;if(r){const[l,u]=Tu(n[0],n[1]);i=l*u}else{const[l,u]=zh(n[0],n[1]);i=l*u}const a=function jW(n,t){if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(e,o);return i*a}function fS(n,t){if(n===Wr.UPLOAD)return Es.PACKED_2X2_FLOAT32;if(n===Wr.RENDER||null==n)return function qW(n){return J().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Es.PACKED_2X2_FLOAT32:Es.UNPACKED_FLOAT32:n?Es.PACKED_2X2_FLOAT16:Es.UNPACKED_FLOAT16}(t);if(n===Wr.DOWNLOAD||n===Wr.PIXELS)return Es.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function mS(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}class Vo{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=As(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Ar="if (isnan(x)) return x;",XW="return x;",gS="return abs(x);",ZW="return (x >= 0.0) ? x : (exp(x) - 1.0);",YW=Ar+"\n  return (x < 0.0) ? 0.0 : x;\n",JW=Ar+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",oa="return x;",QW="return 1.0 / (1.0 + exp(-1.0 * x));",eU="return x;",tU="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",nU="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",sU="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",rU="return 1.0 / (1.0 + exp(-1.0 * x));";class ia{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=As(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class oU{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=As(this.outputShape.length);const e=t.length,s=zs("rc",e),r=fn(e),o=function WW(n,t){if(1===n)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}(e,s),i=s.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${o});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const iU=_p,Jf={},cU=J().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");let pU=(()=>{class n extends ha{nextDataId(){return n.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!J().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let s;if(null!=e){if(e instanceof P0)s=e;else{const r=ho(J().getNumber("WEBGL_VERSION"),e);s=new P0(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=ho(J().getNumber("WEBGL_VERSION"));s=new P0(r),this.binaryCache=function uU(n){return n in Jf||(Jf[n]={}),Jf[n]}(J().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=s,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new HW(this.gpgpu),this.numMBBeforeWarning=function dU(){return null==J().global.screen?1024:J().global.screen.height*J().global.screen.width*window.devicePixelRatio*600/1024/1024}(),this.texData=new wi(this,wr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,s,r,o,i,a){const l=this.makeTensorInfo(s,r),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[o,i]},u.texShape=[o,i];const c=Hf(s),h=new nS(c,!1,a),d=this.runWebGLProgram(h,[l],r,[[o,i]]);return d.shape=s,u.texture=null,this.disposeIntermediateTensorInfo(l),d.dataId}write(e,s,r){if((J().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||J().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===r&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const o={id:this.nextDataId()};return this.texData.set(o,{shape:s,dtype:r,values:e,usage:Wr.UPLOAD,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,s,r,o,i){if(J().getBool("DEBUG")&&this.checkNumericalProblems(s),"complex64"===o)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:o,values:s,usage:Wr.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const s=this.texData.get(e),{values:r,dtype:o,complexTensorInfos:i,slice:a,shape:l,isPacked:u}=s;if(null!=a){let p;p=u?new ia(l,oa):new Vo(l,oa);const f=this.runWebGLProgram(p,[{dataId:e,shape:l,dtype:o}],o),g=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),g}if(null!=r)return this.convertAndCacheOnCPU(e);if("string"===o)return r;const c=null!=this.activeTimers;let h,d;return c&&(h=Ds()),d="complex64"===o?li(this.readSync(i.real.dataId),this.readSync(i.imag.dataId)):this.getValuesFromTexture(e),c&&(this.downloadWaitMs+=Ds()-h),this.convertAndCacheOnCPU(e,d)}read(e){var s=this;return(0,ce.Z)(function*(){if(s.pendingRead.has(e)){const m=s.pendingRead.get(e);return new Promise(y=>m.push(y))}const r=s.texData.get(e),{values:o,shape:i,slice:a,dtype:l,complexTensorInfos:u,isPacked:c}=r;if(null!=a){let m;m=c?new ia(i,oa):new Vo(i,oa);const y=s.runWebGLProgram(m,[{dataId:e,shape:i,dtype:l}],l),b=s.read(y.dataId);return s.disposeIntermediateTensorInfo(y),b}if(null!=o)return s.convertAndCacheOnCPU(e);if(J().getBool("DEBUG")&&!J().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===J().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let d,p,h=null;if("complex64"!==l&&J().get("WEBGL_BUFFER_SUPPORTED")){d=s.decode(e);const m=s.texData.get(d.dataId);h=s.gpgpu.createBufferFromTexture(m.texture.texture,...Wf(i))}if(s.pendingRead.set(e,[]),"complex64"!==l&&(yield s.gpgpu.createAndWaitForFence()),"complex64"===l){const m=yield Promise.all([s.read(u.real.dataId),s.read(u.imag.dataId)]);p=li(m[0],m[1])}else if(null==h)p=s.getValuesFromTexture(e);else{const m=ie(i);p=s.gpgpu.downloadFloat32MatrixFromBuffer(h,m)}if(null!=d&&s.disposeIntermediateTensorInfo(d),null!=h){const m=s.gpgpu.gl;Oe(m,()=>m.deleteBuffer(h))}const f=s.convertAndCacheOnCPU(e,p),g=s.pendingRead.get(e);return s.pendingRead.delete(e),g.forEach(m=>m(f)),s.pendingDisposal.has(e)&&(s.pendingDisposal.delete(e),s.disposeData(e)&&wr().removeDataId(e,s),s.pendingDeletes--),f})()}readToGPU(e,s={}){const r=this.texData.get(e),{values:o,shape:i,slice:a,dtype:l,isPacked:u,texture:c}=r;if("complex64"===l)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let f;f=u?new ia(i,oa):new Vo(i,oa);const g=this.runWebGLProgram(f,[{dataId:e,shape:i,dtype:l}],l),m=this.readToGPU(g,s);return this.disposeIntermediateTensorInfo(g),m}if(null==c)throw null!=o?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const h=this.decode(e,s.customTexShape),d=wr().makeTensorFromTensorInfo(h),p=this.texData.get(h.dataId);return Object.assign({tensorRef:d},p.texture)}bufferSync(e){const s=this.readSync(e.dataId);if("string"===e.dtype)try{const r=s.map(o=>Zo(o));return kt(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return kt(e.shape,e.dtype,s)}checkNumericalProblems(e){if(null!=e)for(let s=0;s<e.length;s++){const r=e[s];if(!gB(r))throw J().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:s,dtype:r,isPacked:o}=this.texData.get(e),i=ie(s);if(J().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const p=this.decode(e),f=this.texData.get(p.dataId),g=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...Wf(s)).subarray(0,i);return this.disposeIntermediateTensorInfo(p),g}const a=J().getBool("WEBGL_PACK")&&!0===o,l=a?Hf(s):s,u=a?new $V(l):new AV(l),c=this.runWebGLProgram(u,[{shape:l,dtype:r,dataId:e}],"float32"),h=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(h.texture.texture,h.texShape[0],h.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){var s=this;const r=this.activeTimers,o=[];let i=!1;null==this.programTimersStack?(this.programTimersStack=o,i=!0):this.activeTimers.push(o),this.activeTimers=o,e();const a=So(this.activeTimers.map(c=>c.query)).filter(c=>null!=c),l=So(this.activeTimers.map(c=>c.name)).filter(c=>null!=c);this.activeTimers=r,i&&(this.programTimersStack=null);const u={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(0,ce.Z)(function*(){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const c=yield Promise.all(a);u.kernelMs=Vs(c),u.getExtraProfileInfo=()=>c.map((h,d)=>({name:l[d],ms:h})).map(h=>`${h.name}: ${h.ms}`).join(", ")}else u.kernelMs={error:"WebGL query timers are not supported in this environment."};return s.uploadWaitMs=0,s.downloadWaitMs=0,u})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ds(),endMs:null}}endTimer(e){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ds(),e)}getQueryTime(e){var s=this;return(0,ce.Z)(function*(){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?s.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs})()}disposeData(e,s=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(s?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!s&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return null!=r&&(this.disposeData(r.real.dataId,s),this.disposeData(r.imag.dataId,s)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:s,dtype:r,texShape:o,usage:i,isPacked:a,slice:l}=this.texData.get(e),u=l&&l.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),null!=s&&(this.numBytesInGPU-=this.computeBytes(o,r),this.textureManager.releaseTexture(s,o,i,a)));const h=this.texData.get(e);h.texture=null,h.texShape=null,h.isPacked=!1,h.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,s=cU){return J().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>null==this.texData.get(r.dataId).texture&&ie(r.shape)<s)}getGPGPUContext(){return this.gpgpu}where(e){xr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const s=e.dataSync();return iU(e.shape,s)}packedUnaryOp(e,s,r){const o=new ia(e.shape,s),i=this.compileAndRun(o,[e],r);return wr().makeTensorFromTensorInfo(i)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const o=uS(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if(J().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,gS,e.dtype);const s=new Vo(e.shape,gS),r=this.compileAndRun(s,[e]);return wr().makeTensorFromTensorInfo(r)}makeTensorInfo(e,s,r){let o;if("string"===s&&null!=r&&r.length>0&&yr(r[0])){const i=r.map(a=>wo(a));o=this.write(i,e,s)}else o=this.write(r,e,s);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:s}}makeOutput(e,s,r){return wr().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,r),this)}unpackTensor(e){const s=new oU(e.shape);return this.runWebGLProgram(s,[e],e.dtype)}packTensor(e){const s=new UW(e.shape);return this.runWebGLProgram(s,[e],e.dtype,null,!0)}packedReshape(e,s){const r=[_u(e.shape),...Eu(e.shape)],o={dtype:e.dtype,shape:r,dataId:e.dataId},i=[_u(s),...Eu(s)],a=new dS(i,r),c=this.runWebGLProgram(a,[o],e.dtype,[r],!0);return{dataId:c.dataId,shape:s,dtype:c.dtype}}decode(e,s){const r=this.texData.get(e),{isPacked:o,shape:i,dtype:a}=r;null!=s&&E(ie(i)<=s[0]*s[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.");const l=Hf(i);let u;u=o?new EV(l):new _V(l);const h=[null!=s?s:Wf(l)];return{dtype:a,shape:i,dataId:this.runWebGLProgram(u,[{shape:l,dtype:a,dataId:e}],a,h,!0,s).dataId}}runWebGLProgram(e,s,r,o,i=!1,a){const l=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(l.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===Vf.DENSE){const b=null!=a?a:Wf(e.outputShape);u.texShape=b.map(S=>2*S)}if(null!=e.outTexUsage&&(u.usage=e.outTexUsage),0===ie(l.shape))return u.values=$n(l.dtype,0),l;const c=[],h=s.map(b=>{if("complex64"===b.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let S=this.texData.get(b.dataId);if(null==S.texture){if(!e.packedInputs&&ie(b.shape)<=J().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:S.values};e.packedInputs&&(S.isPacked=!0,S.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!S.isPacked!=!!e.packedInputs)b=S.isPacked?this.unpackTensor(b):this.packTensor(b),c.push(b),S=this.texData.get(b.dataId);else if(S.isPacked&&!Kf(S.shape,b.shape)){const w=b,I=b.shape;b.shape=S.shape,b=this.packedReshape(b,I),c.push(b),S=this.texData.get(b.dataId),w.shape=I}return{shape:b.shape,texData:S,isUniform:!1}});this.uploadToGPU(l.dataId);const d={shape:l.shape,texData:u,isUniform:!1},p=function TV(n,t,e){let s="";t.concat(e).forEach(i=>{const a=null!=i.texData&&null!=i.texData.slice&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const l=i.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:h}=L0(n.packedInputs,i.shape,l);let d="",p="",f="";if(1===c.length&&n.packedInputs){const I=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${I[0]>1}_${I[1]>1}`}else if(2!==c.length||n.packedInputs){if(c.length>2&&!n.packedInputs){const I=Ye(c);f=`${I[0]===l[1]}_${I[I.length-1]===l[1]}`}}else p=`${c[0]>1}_${c[1]>1}`;const g=i.shape.length,m=2===c.length&&At(i.shape,l),y=1===ie(i.shape),b=_a(i.shape,e.shape),S=!n.packedInputs&&g===e.shape.length&&At(l,e.texData.texShape);s+=`${g}_${S}_${u?h:""}_${c.length}_${y}_${b}_${m}_${d}_${p}_${f}_${n.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`}_${a}`}else s+=`${i.shape}_${i.isUniform?"uniform":i.texData.texShape}_${a}`});let o=n.constructor.name;return o+="_"+s+"_"+n.userCode+`${J().getNumber("WEBGL_VERSION")}`,o}(e,h,d),f=this.getAndSaveBinary(p,()=>function NV(n,t,e,s){const r=e.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:!c.isUniform&&c.texData.isPacked,flatOffset:null};return null!=c.texData&&null!=c.texData.slice&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),o=r.map(c=>c.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=UB(r,i,t),l=function xB(n,t){const e=mi(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Oe(n,()=>n.shaderSource(e,t)),Oe(n,()=>n.compileShader(e)),J().get("ENGINE_COMPILE_ONLY"))return e;if(!1===n.getShaderParameter(e,n.COMPILE_STATUS))throw Hw(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}(n.gl,a),u=n.createProgram(l);return J().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(u),Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:o,outShapeInfo:i},eS(n,t,u)))}(this.gpgpu,e,h,d)),g=null!=this.activeTimers;let m;g&&(m=this.startTimer()),J().get("ENGINE_COMPILE_ONLY")||function kV(n,t,e,s,r){t.program.enableShapeUniforms||(tS(t.inShapeInfos,e),tS([t.outShapeInfo],[s]));const o=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):n.setOutputMatrixTexture(o.texture,i[0],i[1]),n.setProgram(t.webGLProgram),n.bindVertexArray(t.webGLProgram.vao),1===J().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&n.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&n.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<e.length;++l){const u=e[l],{uniform:c,offset:h,shape:d,texShape:p}=t.variablesLocations[l];if(d){const{uniformShape:f}=L0(t.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(d,new Int32Array(f));break;case 2:n.gl.uniform2iv(d,new Int32Array(f));break;case 3:n.gl.uniform3iv(d,new Int32Array(f));break;case 4:n.gl.uniform4iv(d,new Int32Array(f))}}if(p&&n.gl.uniform2i(p,u.texData.texShape[0],u.texData.texShape[1]),null!=c){if(u.isUniform){if(ie(u.shape)<2)n.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(c,f)}continue}null!=u.texData.slice&&null!=h&&n.gl.uniform1i(h,u.texData.slice.flatOffset),n.setInputMatrixTexture(u.texData.texture.texture,c,l)}}const a=t.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const l=Ye(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l))}}if(t.outTexShapeLocation&&n.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r)for(let l=0;l<t.program.customUniforms.length;++l){const u=t.program.customUniforms[l],c=t.customUniformLocations[l],h=r[l];if("float"===u.type)n.gl.uniform1fv(c,h);else if("vec2"===u.type)n.gl.uniform2fv(c,h);else if("vec3"===u.type)n.gl.uniform3fv(c,h);else if("vec4"===u.type)n.gl.uniform4fv(c,h);else if("int"===u.type)n.gl.uniform1iv(c,h);else if("ivec2"===u.type)n.gl.uniform2iv(c,h);else if("ivec3"===u.type)n.gl.uniform3iv(c,h);else{if("ivec4"!==u.type)throw Error(`uniform type ${u.type} is not supported yet.`);n.gl.uniform4iv(c,h)}}n.executeProgram()}(this.gpgpu,f,h,d,o),c.forEach(b=>this.disposeIntermediateTensorInfo(b)),g&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const y=J().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){const b=Ds();b-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!J().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&!1===i){const b=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),b}return l}compileAndRun(e,s,r,o,i=!1){return this.runWebGLProgram(e,s,r=r||s[0].dtype,o,i)}getAndSaveBinary(e,s){return e in this.binaryCache||(this.binaryCache[e]=s()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(J().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(s=>{this.gpgpu.deleteProgram(this.binaryCache[s].webGLProgram),delete this.binaryCache[s]}),this.textureManager.dispose(),null!=this.canvas&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=q(()=>{if(!J().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=J().getBool("DEBUG");J().set("DEBUG",!1);const s=this.abs(Ze(1e-8)).dataSync()[0];if(J().set("DEBUG",e),s>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const s=this.texData.get(e),{shape:r,dtype:o,values:i,texture:a,usage:l,isPacked:u}=s;if(null!=a)return;const c=null!=this.activeTimers;let h;c&&(h=Ds());let d=s.texShape;if(null==d&&(d=function DB(n,t=!1){let e=J().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=J().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&J().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=e/2),t&&(e*=2,s*=2,1===(n=n.map((a,l)=>l>=n.length-2?Kr(n[l]):n[l])).length&&(n=[2,n[0]])),2!==n.length&&(n=Qt(n).newShape);let r=ie(n),o=null;n.length<=1&&r<=e?o=[1,r]:2===n.length&&n[0]<=e&&n[1]<=e?o=n:3===n.length&&n[0]*n[1]<=e&&n[2]<=e?o=[n[0]*n[1],n[2]]:3===n.length&&n[0]<=e&&n[1]*n[2]<=e?o=[n[0],n[1]*n[2]]:4===n.length&&n[0]*n[1]*n[2]<=e&&n[3]<=e?o=[n[0]*n[1]*n[2],n[3]]:4===n.length&&n[0]<=e&&n[1]*n[2]*n[3]<=e&&(o=[n[0],n[1]*n[2]*n[3]]);const i=null!=o&&Math.max(...o)>s&&Math.min(...o)<=(t?2:1)&&Math.min(...o)>0;if(null==o||i)if(t){const a=_u(n);let l=2,u=2;n.length&&([l,u]=Eu(n)),r=a*(l/2)*(u/2),o=ol(r).map(c=>2*c)}else o=ol(r);return o}(r,u),s.texShape=d),null!=i){const p=Hf(r);let f,g=d[1],m=d[0];const y=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(u||!y)&&([g,m]=Tu(d[0],d[1])),f=u?new DV(p,y):new nS(p,y);const b=y?[m,g]:d,S=this.makeTensorInfo(b,o),w=this.texData.get(S.dataId);w.usage=y?Wr.PIXELS:Wr.UPLOAD,w.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(S.dataId),g,m,i);const R=this.runWebGLProgram(f,[S],o,[[m,g]],!0),F=this.texData.get(R.dataId);s.texShape=F.texShape,s.isPacked=F.isPacked,s.usage=F.usage,J().get("ENGINE_COMPILE_ONLY")?this.disposeData(R.dataId):(s.texture=F.texture,s.values=null,this.texData.delete(R.dataId)),this.disposeIntermediateTensorInfo(S),c&&(this.uploadWaitMs+=Ds()-h)}else{const p=this.acquireTexture(d,l,o,u);s.texture=p}}convertAndCacheOnCPU(e,s){const r=this.texData.get(e),{dtype:o}=r;return null!=s&&(r.values=function fU(n,t){if("float32"===t||"complex64"===t)return n;if("int32"===t||"bool"===t){const e="int32"===t?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}throw new Error(`Unknown dtype ${t}`)}(s,o)),r.values}acquireTexture(e,s,r,o){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,s,o)}computeBytes(e,s){return e[0]*e[1]*Ii(s)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}checkCompileCompletionAsync(){var e=this;return(0,ce.Z)(function*(){const s=[];if(e.gpgpu.parallelCompilationExtension){for(const[,r]of Object.entries(e.binaryCache))s.push(e.checkCompletionAsync_(r));return Promise.all(s)}for(const[,r]of Object.entries(e.binaryCache)){const o=new Promise(i=>{try{e.checkCompletion_(r),i(!0)}catch(a){throw a}});s.push(o)}return Promise.all(s)})()}checkCompletionAsync_(e){var s=this;return(0,ce.Z)(function*(){return s.gpgpu.gl.getProgramParameter(e.webGLProgram,s.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?s.checkCompletion_(e):(yield O1(),s.checkCompletionAsync_(e))})()}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(Hw(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:s,customUniformLocations:r,infLoc:o,nanLoc:i,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:u}=eS(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=s,e.customUniformLocations=r,e.infLoc=o,e.nanLoc=i,e.outShapeLocation=a,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromGPUData(e,s,r){e.channels=e.channels||"RGBA";const{texture:o,height:i,width:a,channels:l}=e,u=wr().backend;if(!u.gpgpu.gl.isTexture(o))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=u.writeTexture(o,s,r,i,a,l);return wr().makeTensorFromDataId(c,s,r,u)}}return n.nextDataId=0,n})();Em()&&Km("webgl",()=>new pU,2);const z0="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Ja{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=yt(e,s),this.enableShapeUniforms=As(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Qa="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Fu{constructor(t,e,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=yt(e,s);const o=this.outputShape.length;this.enableShapeUniforms=As(o);let i="";if(r)if(0===o||1===ie(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${fn(o)} coords = getOutputCoords();\n        `,1===o)i+=this.enableShapeUniforms?"\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const l=zs("coords",o);i+=this.enableShapeUniforms?`\n            bool nextRowOutOfBounds =\n              (${l[o-2]} + 1) >= outShape[${o} - 2];\n            bool nextColOutOfBounds =\n              (${l[o-1]} + 1) >= outShape[${o} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:`\n            bool nextRowOutOfBounds =\n              (${l[o-2]} + 1) >= ${this.outputShape[o-2]};\n            bool nextColOutOfBounds =\n              (${l[o-1]} + 1) >= ${this.outputShape[o-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function ur(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const yU={kernelName:xl,backendName:"webgl",kernelFunc:ur};function aa(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,o=e.makeTensorInfo(s.shape,"complex64"),i=e.texData.get(o.dataId),a=ur({inputs:{x:s},backend:e}),l=ur({inputs:{x:r},backend:e});return i.complexTensorInfos={real:a,imag:l},o}const bU={kernelName:N,backendName:"webgl",kernelFunc:aa},yS="return (a < 0.) ? b * a : a;",bS="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",vU={kernelName:sc,backendName:"webgl",kernelFunc:function xU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:o}=s,i=e.makeTensorInfo([],"float32",Xo(o,"float32")),a=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Fu(bS,r.shape,i.shape):new Ja(yS,r.shape,i.shape),l=e.runWebGLProgram(a,[r,i],"float32");return e.disposeIntermediateTensorInfo(i),l}},xS="return (a < 0.) ? b * a : a;",vS="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",SU={kernelName:Sc,backendName:"webgl",kernelFunc:function wU(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t,o=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Fu(vS,s.shape,r.shape):new Ja(xS,s.shape,r.shape);return e.runWebGLProgram(o,[s,r],"float32")}},Ou="if (isnan(x)) return x;";function Zt({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:r,backend:o})=>{const{x:i}=r,a=o,l=s||i.dtype;if(a.shouldExecuteOnCPU([i])&&null!=e){const h=a.texData.get(i.dataId),d=e(h.values,l);return a.makeTensorInfo(i.shape,l,d)}let c;return c=J().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new ia(i.shape,t):new Vo(i.shape,n),a.runWebGLProgram(c,[i],l)}}function Cs({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:i,backend:a})=>{const{a:l,b:u}=i,c=a;if(s&&"complex64"===l.dtype){const f=c.texData.get(l.dataId),g=c.texData.get(u.dataId),[m,y]=[[f.complexTensorInfos.real,g.complexTensorInfos.real],[f.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(S=>{const[w,I]=S,_={dataId:w.dataId,dtype:w.dtype,shape:l.shape},R={dataId:I.dataId,dtype:I.dtype,shape:u.shape},F=new Ja(n,l.shape,u.shape);return c.runWebGLProgram(F,[_,R],Ws(w.dtype,I.dtype))}),b=aa({inputs:{real:m,imag:y},backend:c});return c.disposeIntermediateTensorInfo(m),c.disposeIntermediateTensorInfo(y),b}const h=o||Ws(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=r){const f=c.texData.get(l.dataId).values,g=c.texData.get(u.dataId).values,m="string"===l.dtype?ui(f):f,y="string"===l.dtype?ui(g):g,[b,S]=r(l.shape,u.shape,m,y,h),w=c.makeTensorInfo(S,h);return c.texData.get(w.dataId).values=b,w}let p;return p=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Fu(t,l.shape,u.shape,e):new Ja(n,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function Wh(n,t=!1){if("linear"===n)return t?eU:XW;if("relu"===n)return t?nU:YW;if("elu"===n)return t?tU:ZW;if("relu6"===n)return t?sU:JW;if("prelu"===n)return t?vS:xS;if("leakyrelu"===n)return t?bS:yS;if("sigmoid"===n)return t?rU:QW;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}class wS{constructor(t,e,s,r=!1,o=!1,i=!1,a=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=As(this.outputShape.length);const h=Math.ceil((r?t[1]:t[2])/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",y="";a&&(m=l?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,y="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let S="rc.x",w="rc.x";t[0]<e[0]?S=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(w=`imod(rc.x, ${e[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${h}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${S};\n        int batchB = ${w};\n        for (int i = 0; i < ${h}; i++) {\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${f[0]} * ${g[0]});\n          result += (${f[1]} * ${g[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${y}\n\n        setOutput(result);\n      }\n    `}}const SS={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class IS{constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=yt(e,s),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const CS="return a * b;";function B0(n){const{inputs:t,backend:e}=n,{a:s,b:r}=t,o=Ws(s.dtype,r.dtype);if("complex64"===s.dtype){const a=e.texData.get(s.dataId),l=e.texData.get(r.dataId),u=new IS(SS.REAL,s.shape,r.shape),c=new IS(SS.IMAG,s.shape,r.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=e.runWebGLProgram(u,h,"float32"),p=e.runWebGLProgram(c,h,"float32"),f=aa({inputs:{real:d,imag:p},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),f}if(e.shouldExecuteOnCPU([s,r])){const a=e.texData.get(s.dataId),l=e.texData.get(r.dataId),[u,c]=bW(s.shape,r.shape,a.values,l.values,o),h=e.makeTensorInfo(c,o);return e.texData.get(h.dataId).values=u,h}let i;return i=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Fu(CS,s.shape,r.shape):new Ja(CS,s.shape,r.shape),e.runWebGLProgram(i,[s,r],o)}const IU={kernelName:_l,backendName:"webgl",kernelFunc:B0};function De(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:o}=s,i=e,a=ie(r.shape),l=Si(o,a),u=ie(l);E(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const c=i.texData.get(r.dataId);return!c.isPacked||Kf(r.shape,l)||null!==c.texture&&Kf(c.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function CU(n,t,e){const s=[_u(n.shape),...Eu(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[_u(t),...Eu(t)],i=new dS(o,s),u=e.runWebGLProgram(i,[r],n.dtype,[s],!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(r,l,i)}const NU={kernelName:Cc,backendName:"webgl",kernelFunc:De};class NS{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=t;this.outputShape=[r,i];const a=4*Math.floor(s/4),l=s%4;let u="sumValue += dot(values, ones);";if(null!=e){const h=1/e;u=`sumValue += dot(values * ${go(h)?h.toPrecision(2):h}, ones);`}let c="";o%s>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class kU{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=t;this.outputShape=[r,i];let a="0.0",l="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",l="min"):"max"===e&&(a="-1.0 / 1e-20",l="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const c=4*Math.floor(s/4),h=s%4;let d=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${l}(values, minMaxValue);\n        if (${"min"===e} || ${"max"===e}) {\n          minMaxValue = ${l}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===e?(a="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(a="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let f="";o%s>0&&(f=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${f}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===h}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===h}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===h}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function el(n,t,e,s){const r=function TU(n){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const e=t.length?t[t.length-1].outSize:n[1],s=Pp(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}(n.shape);let o=n;for(let i=0;i<r.length;i++){const{inSize:a,windowSize:l,outSize:u}=r[i];let c,h;c="mean"===e?0===i?new NS({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u},a):new NS({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u}):new kU({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u},e),h=o,o=s.runWebGLProgram(c,[o],t),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return o}class _U{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let i=0;i<s.length;i++)s[i]=t[e[i]];this.outputShape=s,this.rank=s.length;const r=fn(this.rank),o=function EU(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<n.length;r++)s[n[r]]=e[r];return s.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${o}));\n    }\n    `}}class AU{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let c=0;c<s.length;c++)s[c]=t[e[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=fn(this.rank),o=hS("rc",this.rank),i=new Array(this.rank);for(let c=0;c<e.length;c++)i[e[c]]=o[c];const a=`vec2(${i.slice(-2).join()})`,l=`++${o[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${l}) {\n        result[1] = ${u};\n      }\n      --${o[this.rank-1]};\n      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {\n        result[2] = ${u};\n        if(${l}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Qf(n,t,e){const s=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AU(n.shape,t):new _U(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}function em(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s;return function $U(n,t,e,s){const o=n.shape.length,i=St(t,n.shape);let a=i;const l=On(a,o),u=null!=l;let c=n;u&&(c=Qf(n,l,s),a=Hn(a.length,o)),Ss("sum",a,o);const[h,d]=fs(c.shape,a);let p=h;e&&(p=Gn(h,i));const f=ie(d),y=De({inputs:{x:c},attrs:{shape:[ie(n.shape)/f,f]},backend:s}),S=el(y,Hd(n.dtype),"sum",s),w=De({inputs:{x:S},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(S),u&&s.disposeIntermediateTensorInfo(c),w}(r,o,i,e)}const RU={kernelName:Ac,backendName:"webgl",kernelFunc:em};function Bs(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{perm:o}=s,i=e,l=new Array(r.shape.length);for(let c=0;c<l.length;c++)l[c]=r.shape[o[c]];let u;if(i.shouldExecuteOnCPU([r])){const h=i.texData.get(r.dataId).values,d=M0(h,r.shape,r.dtype,o,l);u=i.makeTensorInfo(l,r.dtype),i.texData.get(u.dataId).values=d}else u=Qf(r,o,i);return u}const DU={kernelName:wa,backendName:"webgl",kernelFunc:Bs},kS=1e3;function tm({a:n,b:t,transposeA:e,transposeB:s,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){const u=n.shape.length,c=t.shape.length,h=e?n.shape[u-2]:n.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],p=e?n.shape[u-1]:n.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],g=n.shape.slice(0,-2),m=t.shape.slice(0,-2),y=ie(g),b=ie(m),w=yt(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);E(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const I=e?[y,h,p]:[y,p,h],_=s?[b,f,d]:[b,d,f],R=De({inputs:{x:n},backend:r,attrs:{shape:I}}),F=De({inputs:{x:t},backend:r,attrs:{shape:_}}),O=[R,F],L=Math.max(y,b),j=e?R.shape[1]:R.shape[2],Q=null!=o,te=null!=i,se="leakyrelu"===l,oe=null!=l?Wh(l,!0):null;let ue;if((1===p||1===f)&&j>kS&&!1===(Q||te||se||null!=oe)){let de=R,ve=F;e&&(de=Bs({inputs:{x:R},backend:r,attrs:{perm:[0,2,1]}}),O.push(de)),s&&(ve=Bs({inputs:{x:F},backend:r,attrs:{perm:[0,2,1]}}),O.push(ve));const Ee=1===f;let Ce=de;1!==f&&(Ce=De({inputs:{x:de},backend:r,attrs:{shape:[L,j,1]}}),O.push(Ce));const Fe=1===f?2:1;let $e=ve;Ee&&($e=De({inputs:{x:ve},backend:r,attrs:{shape:[L,1,j]}}),O.push($e));const Le=B0({inputs:{a:Ce,b:$e},backend:r});ue=em({inputs:{x:Le},backend:r,attrs:{axis:Fe,keepDims:!0}}),O.push(Le)}else{const de=Ws(n.dtype,t.dtype),ve=new wS(I,_,[L,p,f],e,s,Q,oe,te,se),Ie=[R,F];if(null!=o&&Ie.push(o),te&&Ie.push(i),se){const Ee=r.makeTensorInfo([],"float32",Xo(a,"float32"));Ie.push(Ee),O.push(Ee)}ue=r.runWebGLProgram(ve,Ie,de)}const re=De({inputs:{x:ue},backend:r,attrs:{shape:w}});O.push(ue);for(const de of O)r.disposeIntermediateTensorInfo(de);return re}const OU={kernelName:Mc,backendName:"webgl",kernelFunc:function FU(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return tm({a:r,b:o,transposeA:l,transposeB:u,backend:e,bias:i,preluActivationWeights:a,leakyreluAlpha:h,activation:c})}},TS="return abs(x);",PU={kernelName:ma,backendName:"webgl",kernelFunc:function LU(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const o=e.texData.get(s.dataId),i=uS(o.values);return e.makeTensorInfo(s.shape,s.dtype,i)}let r;return r=J().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ia(s.shape,TS):new Vo(s.shape,TS),e.runWebGLProgram(r,[s],s.dtype)}},zU=Zt({opSnippet:Ar+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),BU={kernelName:Ni,backendName:"webgl",kernelFunc:zU},WU=Zt({opSnippet:Ar+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),UU={kernelName:ki,backendName:"webgl",kernelFunc:WU},_S="return a + b;",GU=Cs({opSnippet:_S,packedOpSnippet:_S,supportsComplex:!0,cpuKernelImpl:YV}),HU={kernelName:jo,backendName:"webgl",kernelFunc:GU};class jU{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`\n      void main() {\n        ${s.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class KU{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`\n      void main() {\n        ${s.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const qU={kernelName:Ti,backendName:"webgl",kernelFunc:function nm(n){const{inputs:t,backend:e}=n,s=t;if(1===s.length)return ur({inputs:{x:s[0]},backend:e});if(s.length>J().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),u=nm({inputs:s.slice(0,l),backend:e}),c=nm({inputs:s.slice(l),backend:e});return nm({inputs:[u,c],backend:e})}const r=s.map(l=>l.dtype).reduce((l,u)=>Ws(l,u)),o=s.map(l=>l.shape),a=J().getBool("WEBGL_PACK")?new KU(s[0].shape,o):new jU(s[0].shape,o);return e.runWebGLProgram(a,s,r)}},ZU={kernelName:ul,backendName:"webgl",kernelFunc:function XU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s,a=r.shape.length,l=St(o,r.shape);let u=l;const c=On(u,a);let h=r;null!=c&&(h=Bs({inputs:{x:r},backend:e,attrs:{perm:c}}),u=Hn(u.length,a)),Ss("all",u,a);const[d,p]=fs(h.shape,u),g=De({inputs:{x:h},backend:e,attrs:{shape:[-1,ie(p)]}}),m=el(g,g.dtype,"all",e);let y;return y=De(i?{inputs:{x:m},backend:e,attrs:{shape:Gn(d,l)}}:{inputs:{x:m},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),null!=c&&e.disposeIntermediateTensorInfo(h),y}},JU={kernelName:cl,backendName:"webgl",kernelFunc:function YU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s,a=r.shape.length,l=St(o,r.shape);let u=l;const c=On(u,a);let h=r;null!=c&&(h=Bs({inputs:{x:r},backend:e,attrs:{perm:c}}),u=Hn(u.length,a)),Ss("any",u,a);const[d,p]=fs(h.shape,u),g=De({inputs:{x:h},backend:e,attrs:{shape:[-1,ie(p)]}}),m=el(g,g.dtype,"any",e);let y;return y=De(i?{inputs:{x:m},backend:e,attrs:{shape:Gn(d,l)}}:{inputs:{x:m},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),null!=c&&e.disposeIntermediateTensorInfo(h),y}};class QU{constructor(t,e,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:i}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,i],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===e?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class eG{constructor(t,e,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,E(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const i=Math.ceil(t[t.length-1]/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,u=fn(l),c=zs("coords",l);let h,d;if(1===i){d=l+1;const F=fn(d);h=`\n        ${F} sourceLocR = ${F}(${c.join()}, 0);\n        ++${c[l-1]};\n        ${F} sourceLocG = ${F}(${c.join()}, 0);\n        ++${c[l-2]};\n        ${F} sourceLocA = ${F}(${c.join()}, 0);\n        --${c[l-1]};\n        ${F} sourceLocB = ${F}(${c.join()}, 0);\n        --${c[l-2]};`}else d=l,h=`\n        ${u} sourceLocR = coords;\n        ++${c[l-1]};\n        ${u} sourceLocG = coords;\n        ++${c[l-2]};\n        ${u} sourceLocA = coords;\n        --${c[l-1]};\n        ${u} sourceLocB = coords;\n        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],g=p.map(F=>"int "+F),m=zs("sourceLocR",d-1).concat("inIdx.r"),y=zs("sourceLocG",d-1).concat("inIdx.g"),b=zs("sourceLocB",d-1).concat("inIdx.b"),S=zs("sourceLocA",d-1).concat("inIdx.a"),w="max"===s?"greaterThan":"lessThan",I=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${S.join()})));`,_=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${S.join()}) : 0.)`,R=r?"":`\n      float getBestIndicesAChannel(${g.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${g.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${R}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[l-1]} < ${a[l-1]-1};\n        bool hasNextRow = ${c[l-2]} < ${a[l-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${_};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${I}\n          vec4 candidate = ${_};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function ES(n,t,e,s=null){let r=t.shape[0],o=t.shape[1];null!=s&&(r=s.shape[0],o=s.shape[1]);const i=Pp(o),a={windowSize:i,inSize:o,batchSize:r,outSize:Math.ceil(o/i)},l=new QU(a,e,null==s),u=[t];null!=s&&u.push(s);const c=n.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=ES(n,t,e,c);return n.disposeIntermediateTensorInfo(c),h}function AS(n,t,e,s=null){const r=null!=s?s.shape:t.shape,i=Pp(r[r.length-1]),a=new eG(r,i,e,null==s),u=n.runWebGLProgram(a,null==s?[t]:[t,s],"int32");if(u.shape.length===t.shape.length){const c=AS(n,t,e,u);return n.disposeIntermediateTensorInfo(u),c}return u}function $S(n,t,e,s){const r=[e];if(Ss("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!J().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const o=[],i=n.texData.get(t.dataId);let l=t;null!==i&&i.isPacked&&(l=n.unpackTensor(t),o.push(l));const[u,c]=fs(l.shape,r),h=ie(c),d=De({inputs:{x:l},backend:n,attrs:{shape:[-1,h]}});o.push(d);const p=ES(n,d,s);o.push(p);const f=De({inputs:{x:p},backend:n,attrs:{shape:u}});return o.forEach(g=>n.disposeIntermediateTensorInfo(g)),f}return AS(n,t,s)}const nG={kernelName:Ko,backendName:"webgl",kernelFunc:function tG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;let i=St(o,r.shape);const a=On(i,r.shape.length);let l=r;const u=[];null!=a&&(l=Bs({inputs:{x:r},backend:e,attrs:{perm:a}}),u.push(l),i=Hn(i.length,l.shape.length)),Ss("argMax",[i[0]],l.shape.length);const c=$S(e,l,i[0],"max");return u.forEach(h=>e.disposeIntermediateTensorInfo(h)),c}},rG={kernelName:ga,backendName:"webgl",kernelFunc:function sG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;let i=St(o,r.shape);const a=On(i,r.shape.length);let l=r;const u=[];null!=a&&(l=Bs({inputs:{x:r},backend:e,attrs:{perm:a}}),u.push(l),i=Hn(i.length,l.shape.length)),Ss("argMin",[i[0]],l.shape.length);const c=$S(e,l,i[0],"min");return u.forEach(h=>e.disposeIntermediateTensorInfo(h)),c}},iG=Zt({opSnippet:Ar+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),aG={kernelName:_i,backendName:"webgl",kernelFunc:iG},uG=Zt({opSnippet:Ar+"return log(x + sqrt(x * x + 1.0));"}),cG={kernelName:Ei,backendName:"webgl",kernelFunc:uG},dG=Zt({opSnippet:Ar+"\n  return atan(x);\n"}),pG={kernelName:Ai,backendName:"webgl",kernelFunc:dG},gG=Cs({opSnippet:z0+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Qa+"\n  return result;\n"}),yG={kernelName:$i,backendName:"webgl",kernelFunc:gG},xG=Zt({opSnippet:Ar+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),vG={kernelName:vo,backendName:"webgl",kernelFunc:xG};class Uh{constructor(t,e,s,r=!1,o=!1){if(this.variableNames=["x"],"avg"===e&&s)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;const g="avg"===e;let b="0.0";if(g||(b="-1.0 / 1e-20"),s)return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${l});\n        const ivec2 pads = ivec2(${p}, ${f});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?o?`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`:`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / max(count, 1.0)");const I=4*Math.floor(i/4),_=i%4,R=`\n      if (${g}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${l});\n      const ivec2 pads = ivec2(${p}, ${f});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${h};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${I}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${R}\n          }\n\n          int xC = xCCorner + ${I};\n          if (${1===_}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${R}\n          } else if (${2===_}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${R}\n          } else if (${3===_}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${R}\n          }\n        }\n        setOutput(${w});\n      }\n    `}}class V0{constructor(t,e,s,r=!1,o=!1){if(this.variableNames=["x"],"avg"===e&&s)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideDepth,l=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,p=t.effectiveFilterDepth,f=t.effectiveFilterHeight,g=t.effectiveFilterWidth,m=t.padInfo.front,y=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const S="avg"===e;let w="0.0";if(S||(w="-1.0 / 1e-20"),s)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${l}, ${u});\n        const ivec3 pads = ivec3(${m}, ${y}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${f};\n                wR += ${h}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${g};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?o?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${g} +\n                      wR * ${g} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let _=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(_="avgValue / max(count, 1.0)");const R=4*Math.floor(i/4),F=i%4,O=`\n      if (${S}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${l}, ${u});\n      const ivec3 pads = ivec3(${m}, ${y}, ${b});\n      const float initializationValue = ${w};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${w});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${f};\n            wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${R}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${O}\n            }\n\n            int xC = xCCorner + ${R};\n            if (${1===F}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${O}\n            } else if (${2===F}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${O}\n            } else if (${3===F}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${O}\n            }\n          }\n        }\n        setOutput(${_});\n      }\n    `}}const SG={kernelName:ya,backendName:"webgl",kernelFunc:function wG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;Bh(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s;E(vs(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=Lr(r.shape,o,i,1,a,l);if(1===c.filterWidth&&1===c.filterHeight&&At(c.inShape,c.outShape))return ur({inputs:{x:r},backend:e});const h=new Uh(c,"avg",!1);return e.runWebGLProgram(h,[r],"float32")}},CG={kernelName:ba,backendName:"webgl",kernelFunc:function IG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=s,h=ei(r.shape,o,i,[1,1,1],a,l,u),d=new V0(h,"avg",!1);return e.runWebGLProgram(d,[r],"float32")}};class NG{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const l=t.effectiveFilterHeight,u=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${l-1-t.padInfo.top}, ${u-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${l};\n            wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${t.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kG{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${h-1-t.padInfo.front}, ${d-1-t.padInfo.top}, ${p-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterDepth*t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const _G={kernelName:dl,backendName:"webgl",kernelFunc:function TG(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,d=ei(i.shape,a,l,[1,1,1],u,c),p=new kG(d);return e.runWebGLProgram(p,[r],i.dtype)}},AG={kernelName:hl,backendName:"webgl",kernelFunc:function EG(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,i=o;Bh([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,c=Lr(i.shape,a,l,1,u),h=new NG(c);return e.runWebGLProgram(h,[r],i.dtype)}},RG={kernelName:Ri,backendName:"webgl",kernelFunc:function $G(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o}=t,{transposeA:i,transposeB:a}=s;return tm({a:r,b:o,transposeA:i,transposeB:a,backend:e})}};class DG{constructor(t,e,s,r,o,i){this.outputShape=[],this.variableNames=["x","mean","variance"],yt(t,e),yt(t,s);let a="0.0";null!=r&&(yt(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";null!=o&&(yt(t,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${l};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class FG{constructor(t,e,s,r,o,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],yt(t,e),yt(t,s);let a="vec4(0.0)";null!=r&&(yt(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";null!=o&&(yt(t,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${l};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const OG={kernelName:ec,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:r,variance:o,offset:i,scale:a}=n;E(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E(null==i||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E(null==a||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;null==l&&(l=.001);const u=[s,r,o];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=a&&(h=a.shape,u.push(a));const d=J().getBool("WEBGL_PACK_NORMALIZATION")?new FG(s.shape,r.shape,o.shape,c,h,l):new DG(s.shape,r.shape,o.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class LG{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=fn(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=function PG(n){if(1===n)return"sourceLoc";if(n<=6)return W0.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((i,a)=>`sourceLoc.${W0[a]} = start[${a}] + coords.${W0[a]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${s}));\n      }\n    `}}const W0=["x","y","z","w","u","v"];class MG{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=fn(this.rank),s=zs("coords",this.rank),r=zs("sourceLoc",this.rank),o=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${o})`,a=`\n      result.x = ${i};\n      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,l=1===this.rank?"":`\n      --${s[this.rank-1]};\n      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((c,h)=>`start[${h}]`).join()});`:t.map((c,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join("\n");this.userCode=`\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${a}\n        ${l}\n        setOutput(result);\n      }\n    `}}function Lu(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,size:i}=s,[a,l]=np(r,o,i);if(fg(r,a,l),0===ie(l))return e.makeTensorInfo(l,r.dtype,[]);if(e.shouldExecuteOnCPU([r])||"string"===r.dtype){const h=e.texData.get(r.dataId),d=EW(h.values,a,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,d)}const{isPacked:u}=e.texData.get(r.dataId),c=gg(r.shape,a,l);if(u||!c){const h=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new MG(l):new LG(l);return e.runWebGLProgram(h,[r],r.dtype,[a])}return e.uploadToGPU(r.dataId),function zG(n,t,e,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(e,n.dtype),i=s.texData.get(o.dataId);Object.assign(i,r),i.refCount=1,i.shape=e,i.dtype=n.dtype;let a=yg(t,Ye(n.shape));r.slice&&(a+=r.slice.flatOffset),i.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||n.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),o}(r,a,l,e)}const BG={kernelName:Ec,backendName:"webgl",kernelFunc:Lu},VG={kernelName:Di,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,crops:i}=s;E(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((b,S)=>b*S),l=bh(r.shape,o,a),u=xh(l.length,o.length),c=vh(r.shape,o,a),h=z1(i,o.length),d=B1(c,i,o.length),p=[],f=De({inputs:{x:r},backend:e,attrs:{shape:l}}),g=Bs({inputs:{x:f},backend:e,attrs:{perm:u}}),m=De({inputs:{x:g},backend:e,attrs:{shape:c}}),y=Lu({inputs:{x:m},backend:e,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(m),p.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}},UG={kernelName:xa,backendName:"webgl",kernelFunc:function WG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:i}=s,a=e.readSync(r.dataId),l=e.readSync(o.dataId),u=lS(a,l,o.dtype,o.shape,i);return e.makeTensorInfo([i],o.dtype,u)}},KG={kernelName:Fi,backendName:"webgl",kernelFunc:function jG(n){const{inputs:t,backend:e}=n,{a:s,b:r}=t,o=J().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=J().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([s,r])||1===i){const l=e.texData.get(s.dataId).values,u=e.texData.get(r.dataId).values,[c,h]=QV(s.shape,r.shape,l,u,s.dtype),d=e.makeTensorInfo(h,s.dtype);return e.texData.get(d.dataId).values=c,d}let a;return a=o?new Fu("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",s.shape,r.shape,!1):new Ja("\n  return float(int(a.r) & int(b.r));\n",s.shape,r.shape),e.runWebGLProgram(a,[s,r],s.dtype)}},XG={kernelName:va,backendName:"webgl",kernelFunc:function qG(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,o=e.readSync(s.dataId),i=e.readSync(r.dataId),a=yt(Array.from(o),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}},RS=Cs({opSnippet:"return float(a != b);",cpuKernelImpl:vW,dtype:"bool"}),ZG={kernelName:yc,backendName:"webgl",kernelFunc:RS};function Gh(n){const{inputs:t,backend:e}=n,{input:s}=t;return ur({inputs:{x:e.texData.get(s.dataId).complexTensorInfos.real},backend:e})}const YG={kernelName:vd,backendName:"webgl",kernelFunc:Gh},eH={kernelName:Oi,backendName:"webgl",kernelFunc:function U0(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:o}=s;if("complex64"===o){if("complex64"===r.dtype)return ur({inputs:{x:r},backend:e});const i=Qn(r.shape),a=U0({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),l=aa({inputs:{real:a,imag:i},backend:e});return i.dispose(),e.disposeIntermediateTensorInfo(a),l}if("complex64"===r.dtype){const i=Gh({inputs:{input:r},backend:e}),a=U0({inputs:{x:i},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(i),a}if(!Lt(r.dtype,o)){const i=ur({inputs:{x:r},backend:e});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(e.shouldExecuteOnCPU([r])){const i=e.texData.get(r.dataId).values,[a,l,u]=eW(i,r.shape,r.dtype,o);return e.makeTensorInfo(a,l,u)}if("int32"===o)return function QG(n,t){const e=new Vo(n.shape,"return float(int(x));"),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(r,e);if("bool"===o){const i=e.makeTensorInfo([],"bool",$n("bool",1)),l=RS({inputs:{a:r,b:i},backend:e});return e.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}},DS="return ceil(x);",tH=Zt({opSnippet:DS,packedOpSnippet:DS,cpuKernelImpl:tW}),nH={kernelName:qo,backendName:"webgl",kernelFunc:tH};class sH{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class rH{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const iH={kernelName:v,backendName:"webgl",kernelFunc:function oH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{clipValueMin:o,clipValueMax:i}=s;let a;return a=J().getBool("WEBGL_PACK_CLIP")?new rH(r.shape):new sH(r.shape),e.runWebGLProgram(a,[r],r.dtype,[[o],[i]])}};class aH{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function FS(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}const uH={kernelName:k,backendName:"webgl",kernelFunc:function lH(n){const{inputs:t,backend:e}=n,{x:s}=t,r=e.texData.get(s.dataId),o=new aH(s.shape),i=[FS(s,r.complexTensorInfos.real),FS(s,r.complexTensorInfos.imag)];return e.runWebGLProgram(o,i,i[0].dtype)}};class cH{constructor(t){this.outputShape=[],this.outputShape=_o(t,1),this.variableNames=t.map((i,a)=>`T${a}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++)s.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${e[i-1]}));`);s.push(`else setOutput(getT${e.length}(yR, yC-${e[e.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${s.join("\n        ")}\n      }\n    `}}class hH{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=_o(t,e);const s=this.outputShape,r=s.length,o=fn(r),i=zs("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((g,m)=>`T${m}`);const l=new Array(t.length-1);l[0]=t[0][e];for(let g=1;g<l.length;g++)l[g]=l[g-1]+t[g][e];const u=a[e],c=a.slice(-2),h=a.join();let d=`if (${u} < ${l[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${c.join()}));\n        }`;for(let g=1;g<l.length;g++){const m=l[g-1];d+=`\n        if (${u} < ${l[g]}  && ${u} >= ${l[g-1]}) {\n          return getChannel(\n            getT${g}(${sm(a,u,m)}),\n            vec2(${sm(c,u,m)}));\n        }`}const f=l[l.length-1];d+=`\n        return getChannel(\n          getT${l.length}(${sm(a,u,f)}),\n          vec2(${sm(c,u,f)}));`,this.userCode=`\n      float getValue(${a.map(g=>"int "+g)}) {\n        ${d}\n      }\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${s[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${s[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${s[r-2]} &&\n            ${i[r-1]} < ${s[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function sm(n,t,e){const s=n.indexOf(t);return n.map((o,i)=>i===s?`${o} - ${e}`:o).join()}function rm(n){const{inputs:t,backend:e}=n,{input:s}=t;return ur({inputs:{x:e.texData.get(s.dataId).complexTensorInfos.imag},backend:e})}const dH={kernelName:id,backendName:"webgl",kernelFunc:rm};function Hh(n,t,e){const s=n[0].dtype;if("complex64"===s){const p=n.map(b=>Gh({inputs:{input:b},backend:e})),f=n.map(b=>rm({inputs:{input:b},backend:e})),g=Hh(p,t,e),m=Hh(f,t,e),y=aa({inputs:{real:g,imag:m},backend:e});return p.forEach(b=>e.disposeIntermediateTensorInfo(b)),f.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),y}let r=e.shouldExecuteOnCPU(n);if("string"===s&&(r=!0),r){const p=n.map(w=>{const _=[-1,ie(w.shape.slice(t))];return De({inputs:{x:w},backend:e,attrs:{shape:_}})}),f=p.map(w=>({vals:e.readSync(w.dataId),shape:w.shape})),g=_o(p.map(w=>w.shape),1),y=nW(f,g,s,1===p[0].shape[0]),b=_o(n.map(w=>w.shape),t),S=e.makeTensorInfo(b,s,y);return p.forEach(w=>e.disposeIntermediateTensorInfo(w)),S}const o=n.filter(p=>ie(p.shape)>0),i=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(1===o.length){const p=i?new Vo(n[0].shape,oa):new ia(n[0].shape,oa);return e.runWebGLProgram(p,n,s)}const a=J().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>a){const p=[];for(let g=0;g<o.length;g+=a){const m=o.slice(g,g+a);p.push(Hh(m,t,e))}const f=Hh(p,t,e);for(const g of p)e.disposeIntermediateTensorInfo(g);return f}if(i){const p=new hH(o.map(f=>f.shape),t);return e.runWebGLProgram(p,o,s)}const{tensors2D:l,outShape:u}=function pH(n,t,e){const s=_o(n.map(o=>o.shape),t);return{tensors2D:n.map(o=>De({inputs:{x:o},attrs:{shape:[-1,ie(o.shape.slice(t))]},backend:e})),outShape:s}}(o,t,e),c=new cH(l.map(p=>p.shape)),h=e.runWebGLProgram(c,l,s);l.forEach(p=>e.disposeIntermediateTensorInfo(p));const d=De({inputs:{x:h},attrs:{shape:u},backend:e});return e.disposeIntermediateTensorInfo(h),d}function OS(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,o=St(r,t[0].shape)[0];L1(t.map(u=>u.shape),o);const a=_o(t.map(u=>u.shape),o);if(0===ie(a))return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(u=>ie(u.shape)>0);return 1===l.length?ur({inputs:{x:l[0]},backend:e}):Hh(l,o,e)}const fH={kernelName:P,backendName:"webgl",kernelFunc:OS};class LS{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=4*Math.floor(t.inChannels/4),g=t.inChannels%4,m="channelsLast"===t.dataFormat,y=m?1:2,b=m?2:3,S=m?3:1;let w="",I="";s&&(w=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`\n          float activation(float x) {\n            ${s}\n          }\n        `,I="result = activation(result);");const _=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${w}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${S}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${y}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${f}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===g}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${f}) *\n                    getW(wR, wC, ${f}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${f}, xR, xC) *\n                    getW(wR, wC, ${f}, d2);\n              }\n\n            } else if (${2===g}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===g}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2),\n                getW(wR, wC, ${f} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1),\n                  getX(batch, xR, xC, ${f} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC),\n                  getX(batch, ${f} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${_}\n        ${I}\n        setOutput(result);\n      }\n    `}}class mH{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,r=t.padInfo.left,o=t.strideDepth,i=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,h=t.filterDepth,d=t.filterHeight,p=t.filterWidth,f=4*Math.floor(t.inChannels/4),g=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${o}, ${i}, ${a});\n      const ivec3 pads = ivec3(${e}, ${s}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${h}; wF++) {\n          int xF = xFCorner + wF * ${l};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${f}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===g}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${f}) *\n                  getW(wF, wR, wC, ${f}, d2);\n              } else if (${2===g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1),\n                  getX(batch, xF, xR, xC, ${f} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2),\n                  getW(wF, wR, wC, ${f} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PS{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=As(this.outputShape.length);const i=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,c=t.filterWidth,h=c;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<c;m++)d+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;d+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {\n       `;for(let m=0;m<c;m++)d+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(h+1)/2;m++){const y=2*m;if(d+=`\n           xC = xCCorner + ${y*l};\n           `,1===a){if(y<c&&(i%2==1?(d+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n               `,d+=1===l&&y>0?`\n                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);\n                   } else {\n                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);\n                   }\n                   `):d+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n\n                 xC${y} = xTexelC${y};\n                 `,y+1<c)){const b=i%2==0?Kr(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${b};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {\n                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${y+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${y+1}Ready = 1;\n                   }\n                   `,d+=l>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);\n                     } else {\n                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);\n                     }\n                     `:`\n                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);\n                     `):d+=1===b?`\n                     xC${y+1} = xTexelC${y};\n                     `:`\n                     xCOffset = xC + ${b};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {\n                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${y+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${y+1}Ready = 1;\n                     }\n\n                     xC${y+1} = xTexelC${y+1};\n                     `}}else y<c&&(i%2==1?(d+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {\n                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${y+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${y+1}Ready = 1;\n                 }\n\n                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);\n               `,y+1<c&&(d+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);\n                 `)):(d+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {\n                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${y+1}.zw = vec2(0.);\n                   }\n                   xTexelC${y+1}Ready = 1;\n                 }\n\n                 xC${y} = vec4(\n                   xTexelC${y}.xy, xTexelC${y+1}.xy);\n               `,y+1<c&&(d+=`\n                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);\n                 `)));y<c&&(d+=`\n             wTexel = getW(r, ${y}, d1, d2);\n             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${t.inChannels}) {\n               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,y+1<c&&(d+=`\n               wTexel = getW(r, ${y+1}, d1, d2);\n               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${t.inChannels}) {\n                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let p="",f="";s&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${s}\n         }`:o?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${s}\n         }`:`vec4 activation(vec4 x) {\n           ${s}\n         }`,f="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${d}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${g}\n         ${f}\n         setOutput(result);\n       }\n     `}}class gH{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=As(this.outputShape.length);const{dataFormat:s}=e,r=Ms(),o="channelsLast"===s,i=o?1:2,a=o?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)u+=`\n          blockIndex = rc.z + ${h};\n          pos = rc.y + ${c};\n\n          ${l}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${o}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*c+h}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*c+h}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function om(n,t){const e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&1===e&&n[0]>1?[n[0],1]:null}function MS({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const l=n.shape,u=s.texData.get(n.dataId),c=e.inChannels,h=l[0]*l[1]*l[2],d=e.outChannels,p="channelsLast"===e.dataFormat;let m;const y=[];if(null!=o){const w=om(o.shape,p);null!=w&&(o=De({inputs:{x:o},backend:s,attrs:{shape:w}}),y.push(o))}if(null!=r){const w=om(r.shape,p);null!=w&&(r=De({inputs:{x:r},backend:s,attrs:{shape:w}}),y.push(r))}if((1!==h&&1!==d||!(c>kS))&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&At(u.shape.slice(-3),l.slice(-3))){const I={dataId:n.dataId,shape:[1,l[0]*l[1]*(l[2]+1),e.inChannels],dtype:n.dtype},_=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,E(Kf(u.shape,I.shape),()=>`packed reshape ${u.shape} to ${I.shape} isn't free`);const R=De({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});y.push(R);const F=tm({a:I,b:R,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),O=s.texData.get(F.dataId);E(O.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=_,O.shape=e.outShape,m=ur({inputs:{x:F},backend:s}),m.shape=e.outShape,y.push(F)}else{const w=e.outHeight*e.outWidth,I=De({inputs:{x:n},backend:s,attrs:{shape:p?[e.batchSize,w,e.inChannels]:[e.batchSize,e.inChannels,w]}}),_=De({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),R=tm({a:p?I:_,b:p?_:I,transposeA:!p,transposeB:!1,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i});m=De({inputs:{x:R},backend:s,attrs:{shape:e.outShape}}),y.push(I),y.push(_),y.push(R)}for(const w of y)s.disposeIntermediateTensorInfo(w);return m}function zS({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=e,f="channelsLast"===p,g=l*u*c,m=d*h,y=[e.batchSize,g,m],w=[];if(null!=o){const re=om(o.shape,f);null!=re&&(o=De({inputs:{x:o},backend:s,attrs:{shape:re}}),w.push(o))}if(null!=r){const re=om(r.shape,f);null!=re&&(r=De({inputs:{x:r},backend:s,attrs:{shape:re}}),w.push(r))}const I=De({inputs:{x:t},backend:s,attrs:{shape:[1,g,ie(t.shape)/g]}});w.push(I);const _=new gH(y,e),F=s.runWebGLProgram(_,[n],"float32",[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]]),O=De({inputs:{x:F},backend:s,attrs:{shape:y}});w.push(F),w.push(O);const L=null!=r,j=null!=o,Q="leakyrelu"===a,te=a?Wh(a,!0):null,se=new wS(f?O.shape:I.shape,f?I.shape:O.shape,f?[e.batchSize,m,e.outChannels]:[e.batchSize,e.outChannels,m],!0,!1,L,te,j,Q),oe=f?[O,I]:[I,O];if(r&&oe.push(r),j&&oe.push(o),Q){const re=s.makeTensorInfo([],"float32",Xo(i,"float32"));oe.push(re),w.push(re)}const ae=s.runWebGLProgram(se,oe,"float32"),ue=De({inputs:{x:ae},backend:s,attrs:{shape:e.outShape}});w.push(ae);for(const re of w)s.disposeIntermediateTensorInfo(re);return ue}const bH={kernelName:Z,backendName:"webgl",kernelFunc:function yH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=ti(l),d=ps(r.shape,o.shape,i,u,a,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&J().getBool("WEBGL_EXP_CONV")){const g=new PS(d);p=e.runWebGLProgram(g,[r,o],"float32",[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]])}else if(J().getBool("WEBGL_CONV_IM2COL"))p=zS({x:r,filter:o,convInfo:d,backend:e});else{const g=new LS(d);p=e.runWebGLProgram(g,[r,o],"float32")}else p=MS({x:r,filter:o,convInfo:d,backend:e});const f=De({inputs:{x:p},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(p),f}};class xH{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              ${"channelsLast"===t.dataFormat?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vH{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,i="channelsLast"===t.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${s-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${i?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${i?1:2}], coords[${i?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${s} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wH{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${t.strideDepth} - ${t.padInfo.front};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class SH{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,r=t.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${e-1-t.padInfo.front}, ${s-1-t.padInfo.top}, ${r-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${t.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${s}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${s} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const CH={kernelName:pe,backendName:"webgl",kernelFunc:function IH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=ti(l),d=ps(r.shape,c,i,1,a,u,!1,h),p=new xH(d);return e.runWebGLProgram(p,[r,o],"float32")}};class NH{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=As(this.outputShape.length);const e=t.filterHeight,s=t.filterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${s-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            int wCPerm = ${s} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const TH={kernelName:ne,backendName:"webgl",kernelFunc:function kH(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=ti(u),d=ps(i,o.shape,a,1,l,c,!1,h);if(J().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const p=[[d.strideHeight,d.strideWidth]],f=new NH(d);return e.runWebGLProgram(f,[r,o],"float32",p)}{const p=new vH(d);return e.runWebGLProgram(p,[r,o],"float32")}}},EH={kernelName:fe,backendName:"webgl",kernelFunc:function _H(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:i,pad:a,dilations:l}=s,u=Wi(r.shape,o.shape,i,l,a),c=new mH(u);return e.runWebGLProgram(c,[r,o],"float32")}},$H={kernelName:_e,backendName:"webgl",kernelFunc:function AH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:i,pad:a,filterShape:l}=s,u=Wi(r.shape,l,i,1,a),c=new wH(u);return e.runWebGLProgram(c,[r,o],"float32")}},DH={kernelName:Be,backendName:"webgl",kernelFunc:function RH(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{pad:i,strides:a,inputShape:l}=s,u=Wi(l,o.shape,a,1,i),c=new SH(u);return e.runWebGLProgram(c,[r,o],"float32")}},LH=Zt({opSnippet:Ou+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${Qa}\n  return result;\n`}),PH={kernelName:it,backendName:"webgl",kernelFunc:LH},MH=Zt({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),zH={kernelName:Ht,backendName:"webgl",kernelFunc:MH};class BH{constructor(t,e,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,l,u]=t,[c]=e,[h,d]=s;this.outputShape=[c,h,d,u];const p="bilinear"===r?1:0,[f,g]=[a-1+".0",l-1+".0"],[m,y,b]=h>1?[""+(a-1)/(h-1),"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[S,w,I]=d>1?[""+(l-1)/(d-1),"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${S});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${y};\n        float width_scale = ${w};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${f} ) {\n          setOutput(float(${o}));\n          return;\n        }\n        float in_x = ${I};\n        if( in_x < 0.0 || in_x > ${g} ) {\n          setOutput(float(${o}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const VH={kernelName:qe,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:o,boxInd:i}=t,{cropSize:a,method:l,extrapolationValue:u}=s,c=new BH(r.shape,o.shape,a,l,u);return e.runWebGLProgram(c,[r,o,i],"float32")}};var im=function(n){return n.Prod="*",n.Sum="+",n}(im||{});class BS{constructor(t,e,s,r){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=s?this.op===im.Prod?"1.0":"0.0":`getX(${VS(o,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",c="";s?(u=r?"end != "+(l-1):"end != 0",c=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${l}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${fn(o)} coords = getOutputCoords();\n        int end = ${WS(o,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${c};\n          ${WS(o,"coords",this.op)} = idx;\n          val ${this.op}= getX(${VS(o,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function VS(n,t,e){if(1===n)return`${t}`;if(2===n)return`${t}.x, ${t}.y`;if(3===n)return`${t}.x, ${t}.y, ${t}.z`;if(4===n)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function WS(n,t,e){if(1===n)return`${t}`;if(2===n)return`${t}.y`;if(3===n)return`${t}.z`;if(4===n)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function US(n,t,e,s,r,o){const i=t.shape.length,a=On([s],i);let l=t;null!=a&&(l=Bs({inputs:{x:t},backend:e,attrs:{perm:a}}));const u=Hn(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=ur({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new BS(n,l.shape,!1,o),g=h;h=e.runWebGLProgram(p,[h],h.dtype,[[d]]),e.disposeIntermediateTensorInfo(g)}if(r){const d=new BS(n,l.shape,r,o),p=h;h=e.runWebGLProgram(d,[h],h.dtype),e.disposeIntermediateTensorInfo(p)}if(null!=a){const p=Bs({inputs:{x:h},backend:e,attrs:{perm:Gi(a)}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(l),p}return h}const UH={kernelName:Nt,backendName:"webgl",kernelFunc:function WH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:i,reverse:a}=s;return US(im.Prod,r,e,o,i,a)}},HH={kernelName:mt,backendName:"webgl",kernelFunc:function GH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:i,reverse:a}=s;return US(im.Sum,r,e,o,i,a)}},KH={kernelName:ct,backendName:"webgl",kernelFunc:function jH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:i,binaryOutput:a}=s;if(1===r.shape.length){const l=e.readSync(r.dataId),u=e.readSync(o.dataId),c=lS(l,u,o.dtype,o.shape,i);return e.makeTensorInfo([i],o.dtype,c)}if(2===r.shape.length){const l=e.bufferSync(r),u=e.bufferSync(o),c=JV(l,u,i,a);return e.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class qH{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const ZH={kernelName:It,backendName:"webgl",kernelFunc:function XH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:o,dataFormat:i}=s,a=r.shape[0],h=("NHWC"===i?r.shape[1]:r.shape[2])*o,d=("NHWC"===i?r.shape[2]:r.shape[3])*o,p=("NHWC"===i?r.shape[3]:r.shape[1])/(o*o),g=new qH("NHWC"===i?[a,h,d,p]:[a,p,h,d],o,i);return e.runWebGLProgram(g,[r],r.dtype)}};class GS{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=As(this.outputShape.length);const i=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels;let u="",c="";s&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`\n          float activation(float x) {\n            ${s}\n          }\n        `,c="result = activation(result);");const h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${l};\n        int q = d2 - d1 * ${l};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${h}\n        ${c}\n        setOutput(result);\n      }\n    `}}class HS{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=As(this.outputShape.length);const i=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,u=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,d=h;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let y=0;y<h;y++)p+=`\n          vec4 xTexelC${2*y};\n          int xTexelC${2*y}Ready;\n          vec4 xTexelC${2*y+1};\n          int xTexelC${2*y+1}Ready;\n          vec4 xC${y};`;p+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let y=0;y<h;y++)p+=`\n          xTexelC${2*y} = vec4(0.0);\n          xTexelC${2*y}Ready = 0;\n          xTexelC${2*y+1} = vec4(0.0);\n          xTexelC${2*y+1}Ready = 0;\n          xC${y} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;y<(d+1)/2;y++){const b=2*y;if(p+=`\n          xC = xCCorner + ${b*u};\n          `,1===l){if(b<h&&(a%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {\n                  xTexelC${b} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${b}.zw = vec2(0.0);\n                  }\n                  xTexelC${b}Ready = 1;\n                }\n              `,p+=1===u&&b>0?`\n                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);\n                  } else {\n                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {\n                  xTexelC${b} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${b}.zw = vec2(0.0);\n                  }\n                  xTexelC${b}Ready = 1;\n                }\n\n                xC${b} = xTexelC${b};\n                `,b+1<h)){const S=a%2==0?Kr(u):u;u%2==0&&a%2==1||u%2!=0&&a%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${S};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {\n                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${b+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${b+1}Ready = 1;\n                  }\n                  `,p+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);\n                    } else {\n                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);\n                    }\n                    `:`\n                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);\n                    `):p+=1===S?`\n                    xC${b+1} = xTexelC${b};\n                    `:`\n                    xCOffset = xC + ${S};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {\n                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${b+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${b+1}Ready = 1;\n                    }\n\n                    xC${b+1} = xTexelC${b+1};\n                    `}}else b<h&&(a%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {\n                  xTexelC${b} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${b}.zw = vec2(0.0);\n                  }\n                  xTexelC${b}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {\n                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${b+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${b+1}Ready = 1;\n                }\n\n                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);\n              `,b+1<h&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {\n                  xTexelC${b} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${b}.zw = vec2(0.0);\n                  }\n                  xTexelC${b}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {\n                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${b+1}.zw = vec2(0.);\n                  }\n                  xTexelC${b+1}Ready = 1;\n                }\n\n                xC${b} = vec4(\n                  xTexelC${b}.xy, xTexelC${b+1}.xy);\n              `,b+1<h&&(p+=`\n                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);\n                `)));b<h&&(p+=`\n            wTexel = getW(r, ${b}, d1, q);\n            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);\n          `,b+1<h&&(p+=`\n              wTexel = getW(r, ${b+1}, d1, q);\n              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",g="";s&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:o?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,g="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${g}\n        setOutput(result);\n      }\n    `}}const JH={kernelName:Dt,backendName:"webgl",kernelFunc:function YH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),E(vs(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=ps(r.shape,o.shape,i,c,a,u,!0);let d;return d=J().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new HS(h):new GS(h),e.runWebGLProgram(d,[r,o],"float32",[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]])}};class QH{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${t.outChannels/t.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ej{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,l=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${s-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${s} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${l}; dm++) {\n              int d2 = d1 * ${l} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const nj={kernelName:Bn,backendName:"webgl",kernelFunc:function tj(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=s,h=ps(r.shape,c,i,a,l,u,!0),d=new QH(h);return e.runWebGLProgram(d,[r,o],"float32")}},rj={kernelName:tn,backendName:"webgl",kernelFunc:function sj(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=s,h=ps(c,o.shape,i,a,l,u,!0),d=new ej(h);return e.runWebGLProgram(d,[r,o],"float32")}};class oj{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const aj={kernelName:ts,backendName:"webgl",kernelFunc:function ij(n){const{inputs:t,backend:e}=n,{x:s}=t,r=[...s.shape,...s.shape],o=ie(s.shape),i=De({inputs:{x:s},backend:e,attrs:{shape:[o]}}),a=new oj(o),l=e.runWebGLProgram(a,[i],i.dtype),u=De({inputs:{x:l},backend:e,attrs:{shape:r}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}};class lj{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:r,strideHeight:o,strideWidth:i,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:c}=t,{top:h,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${h}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${l}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${s}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const cj={kernelName:bn,backendName:"webgl",kernelFunc:function uj(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:i,pad:a,dilations:l}=s,u=Jc(r.shape,o.shape,i,a,"NHWC",l);let c;const h=new lj(u);c=e.runWebGLProgram(h,[r,o],"float32");const d=De({inputs:{x:c},backend:e,attrs:{shape:u.outShape}});return e.disposeIntermediateTensorInfo(c),d}},dj={kernelName:Wt,backendName:"webgl",kernelFunc:function hj(n){const{inputs:t,backend:e,attrs:s}=n,{equation:r}=s,o=t,{allDims:i,summedDims:a,idDims:l}=X1(r,o.length);Y1(i.length,l,o);const{path:u,steps:c}=J1(a,l),h=c.length;let d=null,p=i.length;const f=[];for(let g=0;g<h;++g){for(const m of c[g]){const{permutationIndices:y,expandDims:b}=Z1(p,l[m]);let S;Q1(y)?S=o[m]:(S=Bs({inputs:{x:o[m]},backend:e,attrs:{perm:y}}),f.push(S));const w=S.shape.slice();for(let I=0;I<b.length;++I)w.splice(b[I],0,1);At(S.shape,w)||(S=De({inputs:{x:S},backend:e,attrs:{shape:w}}),f.push(S)),null===d?d=S:(d=B0({inputs:{a:S,b:d},backend:e}),f.push(d))}g<h-1&&(u[g]>=0&&(d=em({inputs:{x:d},backend:e,attrs:{axis:u[g]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&e.disposeIntermediateTensorInfo(g);return d}},pj=Zt({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),fj={kernelName:Pt,backendName:"webgl",kernelFunc:pj},yj={kernelName:Zr,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e}=n,{dy:s,y:r}=t,o=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Fu("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new Ja("return (b >= 0.0) ? a : a * (b + 1.0);",s.shape,r.shape);return e.runWebGLProgram(o,[s,r],s.dtype)}},bj=Cs({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:sW}),xj={kernelName:Ju,backendName:"webgl",kernelFunc:bj},wj=Zt({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${V1};\n  float a1 = ${W1};\n  float a2 = ${U1};\n  float a3 = ${G1};\n  float a4 = ${H1};\n  float a5 = ${j1};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Sj={kernelName:pl,backendName:"webgl",kernelFunc:wj},jS=Zt({opSnippet:Ou+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:rW,dtype:"float32"}),Cj={kernelName:fl,backendName:"webgl",kernelFunc:jS};function G0(n){const{inputs:t,attrs:e,backend:s}=n,{dim:r}=e,{input:o}=t,i=o.shape.length,a=o.shape.slice();let l=r;return r<0&&(E(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),a.splice(l,0,1),De({inputs:{x:o},backend:s,attrs:{shape:a}})}const Nj={kernelName:Qu,backendName:"webgl",kernelFunc:G0},KS="return exp(x) - 1.0;",kj=Zt({opSnippet:KS,packedOpSnippet:KS,cpuKernelImpl:oW}),Tj={kernelName:ml,backendName:"webgl",kernelFunc:kj};class qS{constructor(t,e,s){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${r}.0`:"1.0";let a;if("real"===t)a="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${o};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function XS(n,t,e){const s=e.texData.get(n.dataId),r=ie(n.shape),o=n.shape[n.shape.length-1],a=De({inputs:{x:n},backend:e,attrs:{shape:[r/o,o]}}),l=a.shape,u=new qS("real",l,t),c=new qS("imag",l,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=e.runWebGLProgram(u,h,"float32"),p=e.runWebGLProgram(c,h,"float32"),f=aa({inputs:{real:d,imag:p},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p);const g=De({inputs:{x:f},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(f),g}const Ej={kernelName:td,backendName:"webgl",kernelFunc:function _j(n){const{inputs:t,backend:e}=n,{input:s}=t;return XS(s,!1,e)}};class Aj{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function jh(n){const{backend:t,attrs:e}=n,{shape:s,value:r}=e;let{dtype:o}=e;if(o=o||qr(r),"string"===o){const i=Cn(o,ie(s));return i.fill(r),t.makeTensorInfo(s,o,i)}{const i=new Aj(s,r);return t.runWebGLProgram(i,[],o,[[r]])}}const $j={kernelName:nd,backendName:"webgl",kernelFunc:jh};class Rj{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Dj={kernelName:sd,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,r=new Rj(e.shape);return s.runWebGLProgram(r,[e],e.dtype)}},ZS="return floor(x);",Fj=Zt({opSnippet:ZS,packedOpSnippet:ZS,cpuKernelImpl:iW}),Oj={kernelName:gl,backendName:"webgl",kernelFunc:Fj},Lj=Cs({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Pj={kernelName:yl,backendName:"webgl",kernelFunc:Lj};class Mj{constructor(t){this.variableNames=["A"];const e=Ms(),[s,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class zj{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Ms(),[s,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${s}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const Bj={kernelName:zd,backendName:"webgl",kernelFunc:function Vj(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:r}=t;const{numChannels:o}=s,i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,o];if(a||i){const g=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==Pu||g!==H0)&&(H0=g,Pu=document.createElement("canvas").getContext("2d",{willReadFrequently:H0})),Pu.canvas.width=l,Pu.canvas.height=u,Pu.drawImage(r,0,0,l,u),r=Pu.canvas}const d=e.makeTensorInfo(c,"int32");e.texData.get(d.dataId).usage=Wr.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(d.dataId),r);const p=J().getBool("WEBGL_PACK")?new zj(h):new Mj(h),f=e.runWebGLProgram(p,[d],"int32");return e.disposeData(d.dataId),f}};let Pu,H0=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const Uj={kernelName:zc,backendName:"webgl",kernelFunc:function Wj(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,g=ti(c),m=ps(r.shape,o.shape,l,h,u,d,!1,g);let y;const b=[],S=null!=i,w=null!=a,I="leakyrelu"===p,_=()=>{const F=[r,o],O=(L,j)=>{if("NCHW"===j&&1===L.shape.length&&1!==L.shape[0]){const Q=De({inputs:{x:L},backend:e,attrs:{shape:[L.shape[0],1,1]}});return b.push(Q),Q}return L};if(S&&F.push(O(i,c)),w&&F.push(O(a,c)),I){const L=e.makeTensorInfo([],"float32",Xo(f,"float32"));F.push(L),b.push(L)}return F};if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(m.strideWidth<=2&&"channelsLast"===g&&J().getBool("WEBGL_EXP_CONV")){const F=p?Wh(p,!0):null,O=new PS(m,S,F,w,I),L=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],j=_();y=e.runWebGLProgram(O,j,"float32",L)}else if(J().getBool("WEBGL_CONV_IM2COL"))y=zS({x:r,filter:o,convInfo:m,backend:e,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else{const F=p?Wh(p,!1):null,O=new LS(m,S,F,w,I),L=_();y=e.runWebGLProgram(O,L,"float32")}else y=MS({x:r,filter:o,convInfo:m,backend:e,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});const R=De({inputs:{x:y},backend:e,attrs:{shape:m.outShape}});return b.push(y),b.forEach(F=>e.disposeIntermediateTensorInfo(F)),R}},Hj={kernelName:Bc,backendName:"webgl",kernelFunc:function Gj(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let g=c;null==g&&(g=[1,1]),E(vs(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);const m=ps(r.shape,o.shape,l,g,u,h,!0),y=J().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels==1,b=d?Wh(d,y):null,S=[r,o],w=null!=i,I=null!=a,_="leakyrelu"===d;if(w&&S.push(i),I&&S.push(a),_){const L=e.makeTensorInfo([],"float32",Xo(p,"float32"));S.push(L),f.push(L)}let R;R=y?new HS(m,w,b,I,_):new GS(m,w,b,I,_);const O=e.runWebGLProgram(R,S,"float32",[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]]);return f.forEach(L=>e.disposeIntermediateTensorInfo(L)),O}};class jj{constructor(t,e,s,r){this.sliceDim=t,this.strides=e,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=fn(s.length);let i="\n    int index;";for(let a=0;a<this.sliceDim;a++)i+=`\n          index = round(getIndices(coords[0], ${a}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};\n          flattenIndex += index * ${this.strides[a]};`;this.userCode=`\n         void main() {\n          ${o} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const qj={kernelName:rd,backendName:"webgl",kernelFunc:function Kj(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,o=r.shape,i=o[o.length-1],a=ie(s.shape),[l,u,c,h]=ep(s,r),d=De({inputs:{x:r},backend:e,attrs:{shape:[u,i]}}),p=De({inputs:{x:s},backend:e,attrs:{shape:[ie(s.shape)/c,c]}});if(e.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const y=e.readSync(r.dataId),b=e.bufferSync(s),S=aW(y,b,s.dtype,u,i,c,h,s.shape,a);return e.makeTensorInfo(l,s.dtype,S.values)}const f=new jj(i,h,[u,c],s.shape),g=e.runWebGLProgram(f,[p,d],p.dtype),m=De({inputs:{x:g},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),m}};class Xj{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=fn(this.rank),r=function Zj(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)s.push(2===r?"index":`${e[r]}`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function YS(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:o}=t,{axis:i,batchDims:a}=s,l=St(i,r.shape)[0];if(J().get("DEBUG")){const b=e.readSync(o.dataId),S=r.shape[l];for(let w=0;w<b.length;++w){const I=b[w];E(I<=S-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${S-1}]`)}}const u=n2(r,o,l,a),c=ie(o.shape),h=[],d=De({inputs:{x:r},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=De({inputs:{x:o},backend:e,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([r,o])||"string"===r.dtype){const b=e.bufferSync(p),S=e.bufferSync(d),w=lW(S,b,f);return h.forEach(I=>e.disposeIntermediateTensorInfo(I)),e.makeTensorInfo(u.outputShape,w.dtype,w.values)}const g=new Xj(d.shape,f),m=e.runWebGLProgram(g,[d,p],d.dtype);h.push(m);const y=De({inputs:{x:m},backend:e,attrs:{shape:u.outputShape}});return h.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}const Yj={kernelName:tc,backendName:"webgl",kernelFunc:YS},Jj=Cs({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:uW,dtype:"bool"}),Qj={kernelName:nc,backendName:"webgl",kernelFunc:Jj},eK=Cs({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:cW}),tK={kernelName:bl,backendName:"webgl",kernelFunc:eK},sK={kernelName:od,backendName:"webgl",kernelFunc:function nK(n){const{inputs:t,backend:e}=n,{input:s}=t;return XS(s,!0,e)}},rK=Zt({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),oK={kernelName:vl,backendName:"webgl",kernelFunc:rK},iK=Zt({opSnippet:"return float(isinf(x));",dtype:"bool"}),aK={kernelName:wl,backendName:"webgl",kernelFunc:iK},lK=Zt({opSnippet:"return float(isnan(x));",dtype:"bool"}),uK={kernelName:Sl,backendName:"webgl",kernelFunc:lK},cK=Cs({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:hW,dtype:"bool"}),hK={kernelName:rc,backendName:"webgl",kernelFunc:cK},dK=Cs({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:dW,dtype:"bool"}),pK={kernelName:oc,backendName:"webgl",kernelFunc:dK},mK={kernelName:ad,backendName:"webgl",kernelFunc:function fK(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:o}=e,i=pW(s,r,o);return t.makeTensorInfo([i.length],"float32",i)}},yK=Zt({opSnippet:Ou+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:fW}),bK={kernelName:Il,backendName:"webgl",kernelFunc:yK},vK=Zt({opSnippet:Ou+"\n  return log(1.0 + x);\n"}),wK={kernelName:Cl,backendName:"webgl",kernelFunc:vK},SK=Cs({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),IK={kernelName:ic,backendName:"webgl",kernelFunc:SK},CK=Zt({opSnippet:"return float(!(x >= 1.0));"}),NK={kernelName:ac,backendName:"webgl",kernelFunc:CK},kK=Cs({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),TK={kernelName:lc,backendName:"webgl",kernelFunc:kK};class _K{constructor(t,e,s,r,o){this.variableNames=["x"],this.outputShape=[];const i=e,a=t[3]-1;let l;this.outputShape=t;const u=`float(${s}) + float(${r}) * sum`;l=.5===o?`inversesqrt(${u})`:1===o?`1.0/(${u})`:`exp(log(${u}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${l};\n        setOutput(val);\n      }\n    `}}class EK{constructor(t,e,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,a=t[3]-1;let l;this.outputShape=t;const u=`float(${s}) + float(${r}) * sum`;l=.5===o?`inversesqrt(${u})`:1===o?`1.0/(${u})`:`exp(log(${u}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${l};\n        setOutput(result);\n      }\n    `}}const AK={kernelName:uc,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:o,bias:i,alpha:a,beta:l}=s,u=J().getBool("WEBGL_PACK_NORMALIZATION")?new EK(r.shape,o,i,a,l):new _K(r.shape,o,i,a,l);return e.runWebGLProgram(u,[r],r.dtype)}};class $K{constructor(t,e,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${s});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${o})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${o});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const RK={kernelName:ld,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r,y:o,dy:i}=t,{depthRadius:a,bias:l,alpha:u,beta:c}=s,h=new $K(r.shape,a,l,u,c);return e.runWebGLProgram(h,[r,o,i],r.dtype)}};function JS(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:o,keepDims:i}=s,a=r.shape.length,l=St(o,r.shape);let u=l;const c=On(u,a),h=null!=c,d=e.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const S=e.texData.get(p.dataId).values,w=new Array(a);for(let R=0;R<w.length;R++)w[R]=r.shape[c[R]];const I=M0(S,r.shape,r.dtype,c,w);p=e.makeTensorInfo(w,r.dtype),e.texData.get(p.dataId).values=I}else p=Qf(r,c,e);u=Hn(u.length,a)}Ss("max",u,a);const[f,g]=fs(p.shape,u);let y,m=f;if(i&&(m=Gn(f,l)),d){const S=e.texData.get(p.dataId).values,w=mW(S,ie(g),m,r.dtype);y=e.makeTensorInfo(m,r.dtype),e.texData.get(y.dataId).values=w}else y=function DK(n,t,e,s){const r=ie(t),a=De({inputs:{x:n},attrs:{shape:[ie(n.shape)/r,r]},backend:s}),l=el(a,n.dtype,"max",s),u=De({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),u}(p,g,m,e);return h&&e.disposeIntermediateTensorInfo(p),y}const FK={kernelName:cc,backendName:"webgl",kernelFunc:JS},PK=Cs({opSnippet:z0+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Qa+"\n  return result;\n",cpuKernelImpl:gW}),MK={kernelName:Nl,backendName:"webgl",kernelFunc:PK},BK={kernelName:hc,backendName:"webgl",kernelFunc:function zK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;Bh(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s;E(vs(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=Lr(r.shape,o,i,1,a,l);if(1===c.filterWidth&&1===c.filterHeight&&At(c.inShape,c.outShape))return ur({inputs:{x:r},backend:e});const h=new Uh(c,"max",!1);return e.runWebGLProgram(h,[r],r.dtype)}},WK={kernelName:dc,backendName:"webgl",kernelFunc:function VK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:i,pad:a,dataFormat:l,dimRoundingMode:u}=s,h=ei(r.shape,o,i,[1,1,1],a,u,l),d=new V0(h,"max",!1);return e.runWebGLProgram(d,[r],r.dtype)}};class UK{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const o=t.effectiveFilterHeight,i=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${o-1-t.padInfo.top}, ${i-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n          wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${o*i-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class GK{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${l-1-t.padInfo.front}, ${u-1-t.padInfo.top}, ${c-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n           wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${l*u*c-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const jK={kernelName:cd,backendName:"webgl",kernelFunc:function HK(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,d=ei(i.shape,a,l,[1,1,1],u,c),p=new V0(d,"max",!0),f=e.runWebGLProgram(p,[i],i.dtype),g=new GK(d),m=e.runWebGLProgram(g,[r,f],i.dtype);return e.disposeIntermediateTensorInfo(f),m}},qK={kernelName:ud,backendName:"webgl",kernelFunc:function KK(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o,output:i}=t,a=o;Bh([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Lr(a.shape,l,u,1,c,h),f=new Uh(d,"max",!0),g=e.runWebGLProgram(f,[a],a.dtype),m=new UK(d),y=e.runWebGLProgram(m,[r,g],a.dtype);return e.disposeIntermediateTensorInfo(g),y}},ZK={kernelName:hd,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=t,l=e;E(4===s.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];E(vs(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const c=Lr(s.shape,r,o,u,i),[h,d]=function XK(n,t,e,s){let r=new Uh(e,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");return r=new Uh(e,"max",!0,!0,t),[o,s.runWebGLProgram(r,[n],"float32")]}(s,a,c,l);return[h,d]}},JK={kernelName:pc,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:r,axis:o}=t,i=e,a=s.shape.length,l=St(o,s.shape);let u=l;const c=On(u,a),h=null!=c,d=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const w=i.texData.get(f.dataId).values,I=new Array(a);for(let F=0;F<I.length;F++)I[F]=s.shape[c[F]];const _=M0(w,s.shape,s.dtype,c,I);f=i.makeTensorInfo(I,s.dtype),i.texData.get(f.dataId).values=_}else f=Qf(s,c,i);p.push(f),u=Hn(u.length,a)}Ss("sum",u,a);const[g,m]=fs(f.shape,u);let y=g;r&&(y=Gn(g,l));const b=function YK(n,t,e,s){const r=ie(t),a=De({inputs:{x:n},attrs:{shape:[ie(n.shape)/r,r]},backend:s}),l=el(a,"float32","mean",s),u=De({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),u}(f,m,y,i);for(const S of p)i.disposeIntermediateTensorInfo(S);return b}},eq={kernelName:fc,backendName:"webgl",kernelFunc:function QK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s,a=r.shape.length,l=St(o,r.shape);let u=l;const c=On(u,a);let h=r;null!=c&&(h=Bs({inputs:{x:r},backend:e,attrs:{perm:c}}),u=Hn(u.length,r.shape.length)),Ss("min",u,a);const[d,p]=fs(h.shape,u),g=De({inputs:{x:h},backend:e,attrs:{shape:[-1,ie(p)]}}),m=el(g,g.dtype,"min",e);let y;return y=De(i?{inputs:{x:m},backend:e,attrs:{shape:Gn(d,l)}}:{inputs:{x:m},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),null!=c&&e.disposeIntermediateTensorInfo(h),y}},sq=Cs({opSnippet:z0+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Qa+"\n  return result;\n",cpuKernelImpl:yW}),rq={kernelName:kl,backendName:"webgl",kernelFunc:sq};class oq{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((c,h)=>c[0]+t[h]+c[1]);const r=t.length,o=fn(r),i=e.map(c=>c[0]).join(","),a=e.map((c,h)=>c[0]+t[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===s?0:1;this.userCode=1!==r?`\n      ${o} start = ${o}(${i});\n      ${o} end = ${o}(${a});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${o} coords = outC - start;\n        setOutput(getX(${l}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class iq{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((f,g)=>f[0]+t[g]+f[1]);const r=t.length,o=fn(r),i=e.map(f=>f[0]).join(","),a=e.map((f,g)=>f[0]+t[g]).join(","),l=zs("rc",r),u=zs("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===s?0:1;let p="";if(1===r){const f=`\n        ${o} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${o} rc = outputLoc;\n        ${f}\n        result[0] = getChannel(getX(${u.join()}), ${h});\n        ${l[r-1]} += 1;\n        if(${c}) {\n          ${f}\n          result[1] = getChannel(getX(${u.join()}), ${h});\n        }\n      `}else{const f=`\n        ${o} source = rc;\n        ${o} lt = ${o}(lessThan(source, start));\n        ${o} gte = ${o}(greaterThanEqual(source, end));\n        ${o} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${o} rc = outputLoc;\n        ${f}\n        result[0] = getChannel(getX(${u.join()}), ${h});\n        ${l[r-1]} += 1;\n        if(${c}) {\n          ${f}\n          result[1] = getChannel(getX(${u.join()}), ${h});\n        }\n        rc = outputLoc;\n        ${l[r-2]} += 1;\n        if(${l[r-2]} < ${this.outputShape[r-2]}) {\n          ${f}\n          result[2] = getChannel(getX(${u.join()}), ${h});\n          ${l[r-1]} += 1;\n          if(${c}) {\n            ${f}\n            result[3] = getChannel(getX(${u.join()}), ${h});\n          }\n        }\n      `}this.userCode=`\n      const ${o} start = ${o}(${i});\n      const ${o} end = ${o}(${a});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const aq={kernelName:mc,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:r,mode:o}=e,i=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iq(s.shape,r,o):new oq(s.shape,r,o);return t.runWebGLProgram(i,[s],s.dtype)}},cq=Cs({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Qa+"\n  return result;\n"}),hq={kernelName:Tl,backendName:"webgl",kernelFunc:cq};class dq{constructor(t,e,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}}const QS=Cs({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),pq={kernelName:vt,backendName:"webgl",kernelFunc:QS},eI="return a - b;",tI=Cs({opSnippet:eI,packedOpSnippet:eI,supportsComplex:!0,cpuKernelImpl:MW}),fq={kernelName:Ul,backendName:"webgl",kernelFunc:tI};function nI(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:o}=s,i=St([o],r.shape),a=JS({inputs:{x:r},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),l=Gn(a.shape,i),u=De({inputs:{x:a},backend:e,attrs:{shape:l}}),c=tI({inputs:{a:r,b:u},backend:e}),h=jS({inputs:{x:c},backend:e}),d=em({inputs:{x:h},backend:e,attrs:{axis:i,keepDims:!1}}),p=De({inputs:{x:d},backend:e,attrs:{shape:l}}),f=QS({inputs:{a:h,b:p},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),f}const mq={kernelName:Dc,backendName:"webgl",kernelFunc:nI},yq={kernelName:dd,backendName:"webgl",kernelFunc:function gq(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:o,seed:i,normalized:a}=s,l=a?r:nI({inputs:{logits:r},backend:e,attrs:{dim:r.shape.length-1}}),h=new dq(l.shape[0],l.shape[1],o),p=e.runWebGLProgram(h,[l],"int32",[[i]]);return a||e.disposeIntermediateTensorInfo(l),p}},bq=Ar+"\n  return -x;\n",wq={kernelName:gc,backendName:"webgl",kernelFunc:function vq(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const o=e.texData.get(s.dataId),[i,a]=xW(o.values,s.shape,s.dtype);return e.makeTensorInfo(a,s.dtype,i)}let r;return r=J().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ia(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Vo(s.shape,bq),e.runWebGLProgram(r,[s],s.dtype)}},Sq=Fp,Cq={kernelName:pd,backendName:"webgl",kernelFunc:function Iq(n){xr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s,u=e.readSync(r.dataId),c=e.readSync(o.dataId),{selectedIndices:h}=Sq(u,c,i,a,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Nq=Op,Tq={kernelName:fd,backendName:"webgl",kernelFunc:function kq(n){xr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=s,c=e.readSync(r.dataId),h=e.readSync(o.dataId),{selectedIndices:d,validOutputs:p}=Nq(c,h,i,a,l,u);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}},_q=Lp,Aq={kernelName:md,backendName:"webgl",kernelFunc:function Eq(n){xr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s,c=e.readSync(r.dataId),h=e.readSync(o.dataId),d=i,p=a,f=l,g=u,{selectedIndices:m,selectedScores:y}=_q(c,h,d,p,f,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class $q{constructor(t,e,s,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${s}),\n                      float(index == coords.y)));\n      }\n    `}}const Rq={kernelName:xc,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:o,depth:i,onValue:a,offValue:l}=s,u=ie(r.shape),c=new $q(u,i,a,l),h=De({inputs:{x:r},backend:e,attrs:{shape:[u]}}),d=e.runWebGLProgram(c,[h],o);e.disposeIntermediateTensorInfo(h);const f=De({inputs:{x:d},backend:e,attrs:{shape:[...r.shape,i]}});return e.disposeIntermediateTensorInfo(d),f}};function am(n){const{inputs:t,backend:e}=n,{x:s}=t;if("complex64"===s.dtype){const r=Gh({inputs:{input:s},backend:e}),o=am({inputs:{x:r},backend:e}),i=rm({inputs:{input:s},backend:e}),a=am({inputs:{x:i},backend:e}),l=aa({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}return jh({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:e})}const Dq={kernelName:Pc,backendName:"webgl",kernelFunc:am},Fq={kernelName:bc,backendName:"webgl",kernelFunc:function sI(n){const{inputs:t,backend:e}=n,{x:s}=t;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const r=Gh({inputs:{input:s},backend:e}),o=sI({inputs:{x:r},backend:e}),i=rm({inputs:{input:s},backend:e}),a=am({inputs:{x:i},backend:e}),l=aa({inputs:{real:o,imag:a},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}return jh({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}},Lq={kernelName:vc,backendName:"webgl",kernelFunc:function Oq(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(1===t.length)return G0({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const o=t[0].shape,i=t[0].dtype;t.forEach(c=>{Vn(o,c.shape,"All tensors passed to stack must have matching shapes"),E(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=OS({inputs:t.map(c=>{const h=G0({inputs:{input:c},backend:e,attrs:{dim:r}});return a.push(h),h}),backend:e,attrs:{axis:r}});return a.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}};class Pq{constructor(t,e,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((u,c)=>u[0]+t[c]+u[1]);const r=t.length,o=fn(r),i=e.map(u=>u[0]).join(","),a=e.map((u,c)=>u[0]+t[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${o} start = ${o}(${i});\n      ${o} end = ${o}(${a});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${o} coords = outC - start;\n          setOutput(getX(${l}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Mq{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((g,m)=>g[0]+t[m]+g[1]);const r=t.length,o=fn(r),i=e.map(g=>g[0]).join(","),a=e.map((g,m)=>g[0]+t[m]).join(","),l=zs("rc",r),u=zs("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${o} rc = outputLoc;`,`${l[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${l[r-2]} += 1;\n       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${l[r-1]} += 1;\n         if(${c}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let g=0,m=1===r?2:4;g<m;g++)f+=`\n        ${d[g]}\n        if (${p}) {\n          result[${g}] = float(value);\n        } else {\n          ${o} source = rc - start;\n          result[${g}] = getChannel(getX(${u.join()}), ${h});\n        }\n      `;f+=1===r?"} ":"}}",this.userCode=`\n      const ${o} start = ${o}(${i});\n      const ${o} end = ${o}(${a});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${f}\n        setOutput(result);\n      }\n    `}}const rI=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,constantValue:i}=s;if(0===ie(r.shape))return jh({backend:e,attrs:{shape:o.map((c,h)=>c[0]+r.shape[h]+c[1]),value:i,dtype:r.dtype}});const a=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Mq(r.shape,o,i):new Pq(r.shape,o,i);return e.runWebGLProgram(a,[r],r.dtype,[[i]])},zq={kernelName:wc,backendName:"webgl",kernelFunc:rI},Wq=Cs({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Qa+"\n  return result;\n"}),Uq={kernelName:El,backendName:"webgl",kernelFunc:Wq},Hq={kernelName:Ic,backendName:"webgl",kernelFunc:function Gq(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:i}=s,a=r.shape.length,l=[],u=St(o,r.shape);let c=u;const h=On(c,a);let p,d=r;if(null!=h&&(d=Bs({inputs:{x:r},backend:e,attrs:{perm:h}}),c=Hn(c.length,a),l.push(d)),Ss("prod",c,a),e.shouldExecuteOnCPU([d])){const f=e.texData.get(d.dataId).values,{outVals:g,outShape:m,outDtype:y}=wW(d.shape,d.dtype,f,c);p=e.makeTensorInfo(m,y,g)}else{const[f,g]=fs(d.shape,c),m=ie(g),y=De({inputs:{x:d},backend:e,attrs:{shape:[-1,m]}}),S=el(y,Hd(r.dtype),"prod",e);p=De({inputs:{x:S},backend:e,attrs:{shape:f}}),l.push(y),l.push(S)}if(i){l.push(p);const f=Gn(p.shape,u);p=De({inputs:{x:p},backend:e,attrs:{shape:f}})}return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}},Kq={kernelName:gd,backendName:"webgl",kernelFunc:function jq(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=t,{outputRaggedRank:a}=s,l=r.map(y=>e.readSync(y.dataId)),u=r.map(y=>y.shape),c=e.readSync(o.dataId),h=e.readSync(i.dataId),[d,p,f]=SW(l,u,c,o.shape,o.dtype,h,i.shape,a),g=d.map(y=>e.makeTensorInfo([y.length],"int32",y)),m=e.makeTensorInfo(f,o.dtype,p);return g.concat([m])}},Xq={kernelName:yd,backendName:"webgl",kernelFunc:function qq(n){const{inputs:t,backend:e}=n,{starts:s,limits:r,deltas:o}=t,i=e.readSync(s.dataId),a=e.readSync(r.dataId),l=e.readSync(o.dataId),[u,c]=IW(i,s.shape,s.dtype,a,r.shape,l,o.shape);return[e.makeTensorInfo([u.length],"int32",u),e.makeTensorInfo([c.length],s.dtype,c)]}},Yq={kernelName:bd,backendName:"webgl",kernelFunc:function Zq(n){const{inputs:t,backend:e,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=s,u=e.readSync(r.dataId),c=e.readSync(o.dataId),h=e.readSync(i.dataId),d=a.map(m=>e.readSync(m.dataId)),p=a.map(m=>m.shape),[f,g]=CW(u,r.shape,c,o.shape,o.dtype,h,i.shape,d,p,l);return e.makeTensorInfo(f,o.dtype,g)}},oI=n=>{const{backend:t,attrs:e}=n,{start:s,stop:r,step:o,dtype:i}=e,a=NW(s,r,o,i);return t.makeTensorInfo([a.length],i,a)},Jq={kernelName:xd,backendName:"webgl",kernelFunc:oI},Qq=Zt({opSnippet:"return 1.0 / x;"}),eX={kernelName:Al,backendName:"webgl",kernelFunc:Qq},nX=Zt({opSnippet:Ar+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),sX={kernelName:$l,backendName:"webgl",kernelFunc:nX},oX=Zt({opSnippet:Ar+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),iX={kernelName:Rl,backendName:"webgl",kernelFunc:oX};class aX{constructor(t,e,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,u]=t;this.outputShape=[i,e,s,u];const c=[r&&e>1?a-1:a,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let d;d=o?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/h[0]},\n          ${c[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class lX{constructor(t,e,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,u]=t;this.outputShape=[i,e,s,u];const c=[r&&e>1?a-1:a,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let d;d=o?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/h[0]},\n          ${c[1]/h[1]},\n          ${c[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,\n                                     ${l}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${s-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const cX={kernelName:kc,backendName:"webgl",kernelFunc:function uX(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,u]=a,c=J().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new lX(r.shape,l,u,o,i):new aX(r.shape,l,u,o,i);return e.runWebGLProgram(c,[r],"float32")}};class hX{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,o]=e,[,i,a]=t,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],u=[s&&i>1?i-1:i,s&&a>1?a-1:a],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=2*Math.ceil(d)+2,g=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${g});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const pX={kernelName:Sd,backendName:"webgl",kernelFunc:function dX(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:i}=s,a=new hX(o.shape,r.shape,i);return e.runWebGLProgram(a,[o],o.dtype)}};class fX{constructor(t,e,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,u]=t;this.outputShape=[i,e,s,u];const c=[r&&e>1?a-1:a,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let p;p=o?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/h[0]},\n          ${c[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class mX{constructor(t,e,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,u]=t;this.outputShape=[i,e,s,u];const c=[r&&e>1?a-1:a,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let p;p=o?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/h[0]},\n          ${c[1]/h[1]},\n          ${c[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,\n                                     ${l}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${s-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const yX={kernelName:Nc,backendName:"webgl",kernelFunc:function gX(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,u]=a,c=J().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new mX(r.shape,l,u,o,i):new fX(r.shape,l,u,o,i);return e.runWebGLProgram(c,[r],r.dtype)}};class bX{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,o]=e,[,i,a]=t,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],u=[s&&i>1?i-1:i,s&&a>1?a-1:a],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=2*Math.ceil(d)+2,g=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${g});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${l[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${l[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${s} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${o}) - 1),\n                ${s} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const vX={kernelName:wd,backendName:"webgl",kernelFunc:function xX(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:i}=s,a=new bX(o.shape,r.shape,i);return e.runWebGLProgram(a,[o],o.dtype)}};class wX{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,1===s)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const o=t.map((a,l)=>(a=>-1!==e.indexOf(a)&&1!==t[a]?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`)(l)).join(","),i=fn(s);this.userCode=`\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}class SX{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const r=zs("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,a=fn(s);function d(f){const g=t.map((b,S)=>function p(f,g){return-1!==e.indexOf(f)&&1!==t[f]?`${t[f]} - ${g[f]} - 1`:`${g[f]}`}(S,f));return`getChannel(getX(${g.join(",")}), vec2(${g.slice(-2).join(",")}))`}this.userCode=1===s?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${o}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function l(f){return d(f)}(r.slice())};\n          if(${o}){\n            result.g = ${function u(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function c(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}(r.slice())};\n            if(${o}) {\n              result.a = ${function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const CX={kernelName:Tc,backendName:"webgl",kernelFunc:function IX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:o}=s,i=r.shape.length,a=St(o,r.shape);if(0===i)return ur({inputs:{x:r},backend:e});const l=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SX(r.shape,a):new wX(r.shape,a);return e.runWebGLProgram(l,[r],r.dtype)}};class NX{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],r=t[2];this.outputShape=t;let o="";o="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${o}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const kX={kernelName:Bd,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=t,a=e,l=new NX(s.shape,o),[u,c]=M1(i,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(l,[s],s.dtype,h)}},TX=Zt({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),_X={kernelName:Dl,backendName:"webgl",kernelFunc:TX},EX=Zt({opSnippet:"return inversesqrt(x);",cpuKernelImpl:kW}),AX={kernelName:Fl,backendName:"webgl",kernelFunc:EX};class j0{constructor(t,e,s,r,o,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const u=fn(o.length),c=fn(i.length);let h="";1===s?h="i":2===s&&(h="i, j");let p="";1===r?p="i":2===r&&(p="i, coords[1]");let g="";l&&(g="coords[0], coords[1]"),this.userCode=`\n        ${u} strides = ${u}(${o});\n\n        void main() {\n          ${c} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(getIndices(${h}));\n              flattenedIndex += index * ${e>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${p});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(${g}), sum, float(found)));\n        }\n      `}}class $X{constructor(t,e,s,r,o,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const u=fn(o.length),c=fn(i.length);let h="";1===s?h="i":2===s&&(h="i, j");let p="";1===r?p="i":2===r&&(p="i, coords[1]");let g="";l&&(g="coords[0], coords[1]"),this.userCode=`\n        ${u} strides = ${u}(${o});\n\n        void main() {\n          ${c} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${t}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${e}; j+=2) {\n              ivec4 index = round(getIndices(${h}));\n              flattenedIndex += index.xz * ${e>1?"strides[j]":"strides"};\n              if (j + 1 < ${e}) {\n                flattenedIndex += index.yw * ${e>1?"strides[j + 1]":"strides"};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = getUpdates(${p});\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(getDefaultValue(${g}), sum, found));\n        }\n      `}}const DX={kernelName:Id,backendName:"webgl",kernelFunc:function RX(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:o}=t,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Bi(0,r,i),d=[h/u,u];if(0===h)return e.makeTensorInfo(i,r.dtype);const p=De({inputs:{x:r},backend:e,attrs:{shape:[l,a]}}),f=De({inputs:{x:o},backend:e,attrs:{shape:[l,u]}}),g=e.makeTensorInfo([],"float32",new Float32Array([0]));let m;m=J().getBool("WEBGL_PACK")?new $X(l,a,p.shape.length,f.shape.length,c,d):new j0(l,a,p.shape.length,f.shape.length,c,d);const y=e.runWebGLProgram(m,[f,p,g],f.dtype),b=De({inputs:{x:y},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(g),b}};class FX{constructor(t,e,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=2===J().getNumber("WEBGL_VERSION")?"while (left < right) {":i;this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${"left"===r?"<":"<="} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const LX={kernelName:Nd,backendName:"webgl",kernelFunc:function OX(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:o}=t,{side:i}=s,a=new FX(r.shape[0],r.shape[1],o.shape[1],i);return e.runWebGLProgram(a,[r,o],"int32",[[r.shape[1]]])}};class PX{constructor(t,e,s){let r,o;if(this.variableNames=["c","a","b"],this.outputShape=e,s>4)throw Error(`Where for rank ${s} is not yet supported`);if(1===s)o="resRC",r="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<e.length;c++)u.push(`${a[c]}`),c<t&&l.push(`${a[c]}`);r=l.join(),o=u.join()}const i=fn(s);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${o}));\n        } else {\n          setOutput(getB(${o}));\n        }\n      }\n    `}}const zX={kernelName:_c,backendName:"webgl",kernelFunc:function MX(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:o}=t,i=new PX(s.shape.length,r.shape,r.shape.length);return e.runWebGLProgram(i,[s,r,o],Ws(r.dtype,o.dtype))}},VX=Zt({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Mp};\n  float scale = ${zp};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),WX={kernelName:Ol,backendName:"webgl",kernelFunc:VX},GX=Zt({opSnippet:Ou+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:_W}),HX={kernelName:zl,backendName:"webgl",kernelFunc:GX},jX=Zt({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),KX={kernelName:Ml,backendName:"webgl",kernelFunc:jX},ZX=Zt({opSnippet:Ou+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${Qa}\n  return result;\n`}),YX={kernelName:Ll,backendName:"webgl",kernelFunc:ZX},JX=Zt({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),QX={kernelName:Pl,backendName:"webgl",kernelFunc:JX},eZ=Zt({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),tZ={kernelName:Bl,backendName:"webgl",kernelFunc:eZ},nZ={kernelName:$c,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,paddings:i}=s;E(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((y,b)=>y*b),l=[[0,0]];l.push(...i);for(let y=1+o.length;y<r.shape.length;++y)l.push([0,0]);const u=[],c=rI({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),h=bh(c.shape,o,a,!1),d=xh(h.length,o.length,!1),p=vh(c.shape,o,a,!1),f=De({inputs:{x:c},backend:e,attrs:{shape:h}}),g=Bs({inputs:{x:f},backend:e,attrs:{perm:d}}),m=De({inputs:{x:g},backend:e,attrs:{shape:p}});return u.push(c),u.push(f),u.push(g),u.forEach(y=>e.disposeIntermediateTensorInfo(y)),m}},rZ={kernelName:kd,backendName:"webgl",kernelFunc:function sZ(n){const{inputs:t,backend:e}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=t;if(1!==o.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${o.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const a=e.readSync(s.dataId),l=e.readSync(r.dataId),u=e.readSync(o.dataId),c=e.readSync(i.dataId)[0],[h,d,p,f,g]=AW(a,s.shape,s.dtype,l,r.dtype,u,c);return[e.makeTensorInfo(d,s.dtype,h),e.makeTensorInfo([d[0]],r.dtype,p),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(m=>Number(m)))),e.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}},iZ={kernelName:Td,backendName:"webgl",kernelFunc:function oZ(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:r,newShape:o}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==o.shape.length)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(e.readSync(r.dataId)),a=e.readSync(s.dataId),l=Array.from(e.readSync(o.dataId)),[u,c,h]=$W(a,s.shape,s.dtype,i,l);return[e.makeTensorInfo(c,s.dtype,u),e.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}},lZ={kernelName:_d,backendName:"webgl",kernelFunc:function aZ(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${o.shape}`);const i=e.readSync(s.dataId),a=e.readSync(r.dataId),l=e.readSync(o.dataId),[u,c]=cS(i,s.shape,s.dtype,a,l,!0);return e.makeTensorInfo(c,s.dtype,u)}},cZ={kernelName:Ed,backendName:"webgl",kernelFunc:function uZ(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${o.shape}`);const i=e.readSync(s.dataId),a=e.readSync(r.dataId),l=e.readSync(o.dataId),[u,c]=cS(i,s.shape,s.dtype,a,l);return e.makeTensorInfo(c,s.dtype,u)}},dZ={kernelName:Ad,backendName:"webgl",kernelFunc:function hZ(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=t,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Bi(0,r,a);if("string"===o.dtype){const y=e.bufferSync(r),b=e.bufferSync(o),S=Zo(e.readSync(i.dataId)[0]),w=TW(y,b,a,d,c,u,l,h,S,!1);return e.makeTensorInfo(a,w.dtype,w.values)}const f=new j0(u,l,r.shape.length,o.shape.length,h,[d,1],!1),g=e.runWebGLProgram(f,[o,r,i],o.dtype),m=De({inputs:{x:g},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(g),m}},fZ={kernelName:Rc,backendName:"webgl",kernelFunc:function pZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:o,axis:i}=s,a=St(i,r.shape)[0],l=e2(r,o,a),c=new Array(r.shape.length).fill(0),h=r.shape.slice();return l.map(d=>{const p=[...h];p[a]=d;const f=Lu({inputs:{x:r},backend:e,attrs:{begin:c,size:p}});return c[a]+=d,f})}},iI="return sqrt(x);",mZ=Zt({opSnippet:iI,packedOpSnippet:iI,cpuKernelImpl:RW}),gZ={kernelName:Vl,backendName:"webgl",kernelFunc:mZ},yZ=Zt({opSnippet:"return x * x;"}),bZ={kernelName:$d,backendName:"webgl",kernelFunc:yZ},aI="return (a - b) * (a - b);",xZ=Cs({opSnippet:aI,packedOpSnippet:aI}),vZ={kernelName:Wl,backendName:"webgl",kernelFunc:xZ},SZ={kernelName:Fc,backendName:"webgl",kernelFunc:function wZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const i=ui(e.readSync(r.dataId)),a=DW(i,"string",s);return e.makeTensorInfo(r.shape,"string",a)}},CZ={kernelName:Kl,backendName:"webgl",kernelFunc:function IZ({inputs:n,attrs:t,backend:e}){const{x:s}=n,o=new Vo(s.shape,Ar+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return e.runWebGLProgram(o,[s],s.dtype)}};class NZ{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=fn(s.length),i=fn(s.length);let a="";if(1===r)a="coords * strides + begin";else{let l=0;a=s.map((u,c)=>(l++,1===s.length?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`\n      ${o} begin = ${o}(${t});\n      ${o} strides = ${o}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const TZ={kernelName:Rd,backendName:"webgl",kernelFunc:function kZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:y,begin:b,end:S,strides:w}=bg(r.shape,o,i,a,l,u,c,h,d);let I;if(g)I=De({inputs:{x:r},backend:e,attrs:{shape:f}});else if(m||y){E(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const R=mg(b,S,w),F=Lu({inputs:{x:r},backend:e,attrs:{begin:b,size:R}});I=De({inputs:{x:F},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(F)}else if(e.shouldExecuteOnCPU([r])){const F=e.readSync(r.dataId),O=kt(r.shape,r.dtype,F),L=FW(p,O,w,b);I=e.makeTensorInfo(f,r.dtype,L.values)}else{const F=new NZ(b,w,p);I=e.runWebGLProgram(F,[r],r.dtype)}const _=De({inputs:{x:I},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(I),_}},EZ={kernelName:Dd,backendName:"webgl",kernelFunc:function _Z(n){const{inputs:t,backend:e,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=e.readSync(c.dataId),p=e.readSync(h.dataId),[f,g]=OW(d,p,r,o,i,a,l,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(h.shape,"int32",g)]}},$Z={kernelName:Fd,backendName:"webgl",kernelFunc:function AZ(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=e.readSync(o.dataId),l=e.readSync(i.dataId)[0],[u,c,h]=LW(a,l,r),d=c.length;return[e.makeTensorInfo([d,2],"int32",u),e.makeTensorInfo([d],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(h))]}},DZ={kernelName:Od,backendName:"webgl",kernelFunc:function RZ(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:r}=s,{input:o}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=e.readSync(o.dataId),a=PW(i,r);return e.makeTensorInfo(o.shape,"int32",a)}},FZ=Zt({opSnippet:"return tan(x);"}),OZ={kernelName:Gl,backendName:"webgl",kernelFunc:FZ},LZ=Zt({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),PZ={kernelName:Hl,backendName:"webgl",kernelFunc:LZ},zZ={kernelName:Cd,backendName:"webgl",kernelFunc:function MZ(n){const{inputs:t,backend:e}=n,{tensor:r,indices:o,updates:i}=t,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Bi(0,o,r.shape),d=[h/u,u];if(0===h)return e.makeTensorInfo(r.shape,o.dtype);const p=De({inputs:{x:o},backend:e,attrs:{shape:[l,a]}}),f=De({inputs:{x:i},backend:e,attrs:{shape:[l,u]}}),g=De({inputs:{x:r},backend:e,attrs:{shape:d}}),m=new j0(l,a,p.shape.length,f.shape.length,c,d,!1,!0),y=e.runWebGLProgram(m,[f,p,g],g.dtype),b=De({inputs:{x:y},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(y),b}};class BZ{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let i=0;i<s.length;i++)s[i]=t[i]*e[i];this.outputShape=s,this.rank=s.length;const r=fn(this.rank),o=function VZ(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${e[r]}, ${n[r]})`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${o}));\n      }\n    `}}function lI(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:o}=s;if("string"===r.dtype||r.shape.length>5){const l=e.readSync(r.dataId),u="string"===r.dtype?l.map(d=>Zo(d)):l,c=kt(r.shape,r.dtype,u),h=zW(c,o);return e.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new BZ(r.shape,o);return e.runWebGLProgram(i,[r],r.dtype)}const WZ={kernelName:jl,backendName:"webgl",kernelFunc:lI};class UZ{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class GZ{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function tl(n,t){null!==t&&n.disposeIntermediateTensorInfo(t)}function uI(n){let t=1;for(;t<n;)t*=2;return t}const jZ={kernelName:Ld,backendName:"webgl",kernelFunc:function HZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:o,sorted:i}=s,a=J().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=J().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(e.shouldExecuteOnCPU([r])||c<a||o>l){const L=e.readSync(r.dataId),[j,Q]=BW(L,u,r.dtype,o,i);return[e.makeTensorInfo(j.shape,j.dtype,j.values),e.makeTensorInfo(Q.shape,Q.dtype,Q.values)]}if(0===o)return u[u.length-1]=0,[e.makeTensorInfo(u,r.dtype,[]),e.makeTensorInfo(u,"int32",[])];if(1===c)return[r,jh({attrs:{shape:u,dtype:"int32",value:0},backend:e})];const h=e.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?e.unpackTensor(r):r,g=ie(u)/c,m=De({inputs:{x:p},attrs:{shape:[g,c]},backend:e});d&&tl(e,p);const y=uI(o),b=uI(c);let S=null;const w=()=>null===S?[m,m]:[m,S],I=(L,j,Q)=>{const te=w(),se=new UZ(Q),ue=S;S=e.runWebGLProgram(se,te,"int32",[[c],[null===S?1:0],[Number.NEGATIVE_INFINITY],[L],[j]]),tl(e,ue)};for(let L=1;L<y;L*=2){const j=2*L;for(let Q=L;Q>=1;Q/=2)I(j,Q,[g,b])}for(let L=b;L>y;L/=2){const j=w(),Q=new GZ([g,L/2]),oe=S;S=e.runWebGLProgram(Q,j,"int32",[[c],[null===S?1:0],[y]]),tl(e,oe);const ae=y/2,ue=2*ae;for(let re=ae;re>=1;re/=2)I(ue,re,S.shape)}let _=S;S=Lu({inputs:{x:S},backend:e,attrs:{begin:0,size:[g,o]}}),tl(e,_);let R=YS({inputs:{x:m,indices:S},backend:e,attrs:{axis:1,batchDims:1}});tl(e,m);const F=u.slice(0,-1);F.push(o),_=S,S=De({inputs:{x:S},attrs:{shape:F},backend:e}),tl(e,_);const O=R;return R=De({inputs:{x:R},attrs:{shape:F},backend:e}),tl(e,O),[R,S]}};class KZ{constructor(t,e,s,r,o,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===s?1:2;let l;switch(r){case"constant":default:l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${l} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${l} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${l} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${o});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${o});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const XZ={kernelName:Pd,backendName:"webgl",kernelFunc:function qZ(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,transforms:o}=t,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],y=new KZ(h,d,i,a,l,[c,f,g,p]);return e.runWebGLProgram(y,[r,o],"float32")}},YZ={kernelName:Md,backendName:"webgl",kernelFunc:function ZZ(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:o}=t;Bh(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(o.dataId),{outputValues:a,outputShape:l,indices:u}=VW(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}},QZ={kernelName:Oc,backendName:"webgl",kernelFunc:function JZ(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r,a=i.shape.length,l=r.shape[o],u=new Array(a-1);let c=0;for(let g=0;g<a;g++)g!==o&&(u[c++]=i.shape[g]);const h=[],d=new Array(a).fill(0),p=i.shape.slice();p[o]=1;const f=new Array(l);for(let g=0;g<f.length;g++){d[o]=g;const m=Lu({inputs:{x:i},backend:e,attrs:{begin:d,size:p}}),y=De({inputs:{x:m},backend:e,attrs:{shape:u}});f[g]=y,h.push(m)}return h.forEach(g=>e.disposeIntermediateTensorInfo(g)),f}};class eY{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,r=t.batchSize,o=t.inSize,i=t.numSegments,a=i*Math.ceil(o/s);this.outputShape=[r,a];const c=4*Math.floor(s/4),h=s%4,d="\n        sumValue += dot(values, segFilter);\n    ";let p="";o%s>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `);let f="";o%s>0&&(f=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${f}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${s}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${d}\n        } else if (${2===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${d}\n        } else if (${3===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${d}\n        }\n        setOutput(sumValue);\n      }\n    `}}const sY=[OU,PU,BU,UU,HU,qU,ZU,JU,nG,rG,aG,cG,pG,yG,vG,SG,CG,_G,AG,RG,OG,VG,UG,KG,XG,eH,nH,iH,bU,uH,fH,bH,CH,TH,EH,$H,DH,PH,zH,VH,UH,HH,KH,ZH,JH,nj,rj,aj,cj,dj,fj,yj,xj,Sj,Cj,Nj,Tj,Ej,$j,Dj,Oj,Pj,Bj,Uj,Hj,qj,Yj,Qj,tK,yU,sK,dH,oK,aK,uK,vU,hK,pK,mK,bK,wK,IK,NK,TK,AK,RK,FK,MK,BK,WK,jK,qK,ZK,JK,eq,rq,aq,hq,yq,IU,wq,Cq,Tq,Aq,ZG,Rq,Fq,Lq,zq,Uq,SU,Hq,Kq,Xq,Yq,Jq,YG,pq,eX,sX,iX,NU,cX,pX,yX,vX,CX,kX,_X,AX,DX,LX,zX,WX,HX,KX,YX,QX,BG,mq,tZ,nZ,rZ,iZ,lZ,cZ,dZ,fZ,gZ,bZ,vZ,SZ,CZ,TZ,EZ,$Z,DZ,fq,RU,OZ,PZ,zZ,WZ,jZ,XZ,DU,YZ,QZ,{kernelName:Lc,backendName:"webgl",kernelFunc:function tY(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:o}=t,{numSegments:i}=s,a=r.shape.length,l=[];let u=0;const c=On([u],a);let h=r;null!=c&&(h=Bs({inputs:{x:r},backend:e,attrs:{perm:c}}),l.push(h),u=Hn(1,a)[0]);const d=Z4(h.shape,u,i),p=ie([h.shape[u]]),f=De({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}});l.push(f);const g=Hd(r.dtype),m=(w,I,_,R,F)=>{const O=w.shape[0],L=w.shape[1],j=X4(L,F),te=new eY({windowSize:j,inSize:L,batchSize:O,numSegments:F},I),se=e.compileAndRun(te,[w,_],R);if(l.push(se),se.shape[1]===F)return se;const oe=oI({backend:e,attrs:{start:0,stop:F,step:1,dtype:"float32"}}),ae=lI({inputs:{x:oe},backend:e,attrs:{reps:[L/j]}});return l.push(oe),l.push(ae),m(se,I,ae,R,F)},b=De({inputs:{x:m(f,"unsortedSegmentSum",o,g,i)},backend:e,attrs:{shape:d}});let S=b;if(null!=c){l.push(b);const w=Gi(c);S=Bs({inputs:{x:S},backend:e,attrs:{perm:w}})}return l.forEach(w=>e.disposeIntermediateTensorInfo(w)),S}},Dq];for(const n of sY)Wd(n);var cI=Y(5619);const oY={architecture:"MobileNetV1",outputStride:16,multiplier:.75,quantBytes:4},iY={flipHorizontal:!1,maxDetections:1,internalResolution:"high",segmentationThreshold:.9,scoreThreshold:.8};let aY=(()=>{var n;class t{constructor(){this._readyState=new cI.X(!1),this.isReady$=this._readyState.asObservable(),this._segmentationState=new cI.X({}),this.segmentation$=this._segmentationState.asObservable(),Y3("webgl"),function G$(n){return void 0===n&&(n=$b),$o(this,void 0,void 0,function(){return Ro(this,function(t){return"ResNet50"===(n=function V$(n){if(null==(n=n||$b).architecture&&(n.architecture="MobileNetV1"),Rb.indexOf(n.architecture)<0)throw new Error("Invalid architecture ".concat(n.architecture,". ")+"Should be one of ".concat(Rb));if(null==n.outputStride&&(n.outputStride=16),Db[n.architecture].indexOf(n.outputStride)<0)throw new Error("Invalid outputStride ".concat(n.outputStride,". ")+"Should be one of ".concat(Db[n.architecture]," ")+"for architecture ".concat(n.architecture,"."));if(null==n.multiplier&&(n.multiplier=1),Fb[n.architecture].indexOf(n.multiplier)<0)throw new Error("Invalid multiplier ".concat(n.multiplier,". ")+"Should be one of ".concat(Fb[n.architecture]," ")+"for architecture ".concat(n.architecture,"."));if(null==n.quantBytes&&(n.quantBytes=4),Ob.indexOf(n.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(n.quantBytes,". ")+"Should be one of ".concat(Ob," ")+"for architecture ".concat(n.architecture,"."));return n}(n)).architecture?[2,U$(n)]:"MobileNetV1"===n.architecture?[2,W$(n)]:[2,null]})})}(oY).then(s=>{this.model=s,this._readyState.next(!0)})}segmentPersonParts(s){this.model.segmentPersonParts(s,iY).then(r=>{this._segmentationState.next(r)})}}return(n=t).\u0275fac=function(s){return new(s||n)},n.\u0275prov=he.Yz7({token:n,factory:n.\u0275fac,providedIn:"root"}),t})();var lY=Y(4735),po=function(){return po=Object.assign||function(n){for(var t,e=1,s=arguments.length;e<s;e++)for(var r in t=arguments[e])Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n},po.apply(this,arguments)};function gi(n,t,e,s){return new(e||(e=Promise))(function(r,o){function i(u){try{l(s.next(u))}catch(c){o(c)}}function a(u){try{l(s.throw(u))}catch(c){o(c)}}function l(u){var c;u.done?r(u.value):(c=u.value,c instanceof e?c:new e(function(h){h(c)})).then(i,a)}l((s=s.apply(n,t||[])).next())})}function yi(n,t){var e,s,r,o,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(l){return function(u){return function(c){if(e)throw new TypeError("Generator is already executing.");for(;i;)try{if(e=1,s&&(r=2&c[0]?s.return:c[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,c[1])).done)return r;switch(s=0,r&&(c=[2&c[0],r.value]),c[0]){case 0:case 1:r=c;break;case 4:return i.label++,{value:c[1],done:!1};case 5:i.label++,s=c[1],c=[0];continue;case 7:c=i.ops.pop(),i.trys.pop();continue;default:if(!((r=(r=i.trys).length>0&&r[r.length-1])||6!==c[0]&&2!==c[0])){i=0;continue}if(3===c[0]&&(!r||c[1]>r[0]&&c[1]<r[3])){i.label=c[1];break}if(6===c[0]&&i.label<r[1]){i.label=r[1],r=c;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(c);break}r[2]&&i.ops.pop(),i.trys.pop();continue}c=t.call(n,i)}catch(h){c=[6,h],s=0}finally{e=r=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([l,u])}}}function la(n){var t=n.map(function(e){return e[0]});return t.push(n[n.length-1][1]),t}var hI={lips:la([[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]]),leftEye:la([[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]]),leftEyebrow:la([[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]]),leftIris:la([[474,475],[475,476],[476,477],[477,474]]),rightEye:la([[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]]),rightEyebrow:la([[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]]),rightIris:la([[469,470],[470,471],[471,472],[472,469]]),faceOval:la([[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]])},uY=[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]],cY=Object.entries(hI).map(function(n){var t=n[0];return n[1].map(function(e){return[e,t]})}).flat(),dI=new Map(cY);function K0(n){for(var t={locationData:{relativeKeypoints:[]}},e=Number.MAX_SAFE_INTEGER,s=Number.MIN_SAFE_INTEGER,r=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER,i=0;i<n.length;++i){var a=n[i];e=Math.min(e,a.x),s=Math.max(s,a.x),r=Math.min(r,a.y),o=Math.max(o,a.y),t.locationData.relativeKeypoints.push({x:a.x,y:a.y})}return t.locationData.relativeBoundingBox={xMin:e,yMin:r,xMax:s,yMax:o,width:s-e,height:o-r},t}var q0={runtime:"mediapipe",maxFaces:1,refineLandmarks:!1},hY=function(){function n(t){var e=this;this.width=0,this.height=0,this.selfieMode=!1,this.faceMeshSolution=new lY.FaceMesh({locateFile:function(s,r){return t.solutionPath?t.solutionPath.replace(/\/+$/,"")+"/"+s:r+"/"+s}}),this.faceMeshSolution.setOptions({refineLandmarks:t.refineLandmarks,selfieMode:this.selfieMode,maxNumFaces:t.maxFaces}),this.faceMeshSolution.onResults(function(s){if(e.height=s.image.height,e.width=s.image.width,e.faces=[],null!==s.multiFaceLandmarks)for(var r=s.multiFaceLandmarks,o=0;o<r.length;o++){var i=e.translateOutput(r[o]);e.faces.push({keypoints:i,box:K0(i).locationData.relativeBoundingBox})}})}return n.prototype.translateOutput=function(t){var e=this;return t.map(function(s,r){var o={x:s.x*e.width,y:s.y*e.height,z:s.z*e.width},i=dI.get(r);return null!=i&&(o.name=i),o})},n.prototype.estimateFaces=function(t,e){return gi(this,void 0,void 0,function(){var s,r;return yi(this,function(o){switch(o.label){case 0:return e&&e.flipHorizontal&&e.flipHorizontal!==this.selfieMode&&(this.selfieMode=e.flipHorizontal,this.faceMeshSolution.setOptions({selfieMode:this.selfieMode})),t instanceof Mt?(r=ImageData.bind,[4,cg(t)]):[3,2];case 1:return s=new(r.apply(ImageData,[void 0,o.sent(),t.shape[1],t.shape[0]])),[3,3];case 2:s=t,o.label=3;case 3:return[4,this.faceMeshSolution.send({image:t=s})];case 4:return o.sent(),[2,this.faces]}})})},n.prototype.dispose=function(){this.faceMeshSolution.close()},n.prototype.reset=function(){this.faceMeshSolution.reset(),this.width=0,this.height=0,this.faces=null,this.selfieMode=!1},n.prototype.initialize=function(){return this.faceMeshSolution.initialize()},n}();function dY(n){return gi(this,void 0,void 0,function(){var t,e;return yi(this,function(s){switch(s.label){case 0:return t=function(r){if(null==r)return po({},q0);var o=po({},r);return o.runtime="mediapipe",null==o.maxFaces&&(o.maxFaces=q0.maxFaces),null==o.refineLandmarks&&(o.refineLandmarks=q0.refineLandmarks),o}(n),[4,(e=new hY(t)).initialize()];case 1:return s.sent(),[2,e]}})})}var X0=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},pY={};(function(){var n;function t(x){var T=0;return function(){return T<x.length?{done:!1,value:x[T++]}:{done:!0}}}var e="function"==typeof Object.defineProperties?Object.defineProperty:function(x,T,A){return x==Array.prototype||x==Object.prototype||(x[T]=A.value),x},s=function(x){x=["object"==typeof globalThis&&globalThis,x,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof X0&&X0];for(var T=0;T<x.length;++T){var A=x[T];if(A&&A.Math==Math)return A}throw Error("Cannot find global object")}(this);function r(x,T){if(T)e:{var A=s;x=x.split(".");for(var D=0;D<x.length-1;D++){var W=x[D];if(!(W in A))break e;A=A[W]}(T=T(D=A[x=x[x.length-1]]))!=D&&null!=T&&e(A,x,{configurable:!0,writable:!0,value:T})}}function o(x){return(x={next:x})[Symbol.iterator]=function(){return this},x}function i(x){var T=typeof Symbol<"u"&&Symbol.iterator&&x[Symbol.iterator];return T?T.call(x):{next:t(x)}}function a(x){if(!(x instanceof Array)){x=i(x);for(var T,A=[];!(T=x.next()).done;)A.push(T.value);x=A}return x}r("Symbol",function(x){function T(W,M){this.g=W,e(this,"description",{configurable:!0,writable:!0,value:M})}if(x)return x;T.prototype.toString=function(){return this.g};var A="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",D=0;return function W(M){if(this instanceof W)throw new TypeError("Symbol is not a constructor");return new T(A+(M||"")+"_"+D++,M)}}),r("Symbol.iterator",function(x){if(x)return x;x=Symbol("Symbol.iterator");for(var T="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),A=0;A<T.length;A++){var D=s[T[A]];"function"==typeof D&&"function"!=typeof D.prototype[x]&&e(D.prototype,x,{configurable:!0,writable:!0,value:function(){return o(t(this))}})}return x});var l,u="function"==typeof Object.create?Object.create:function(x){function T(){}return T.prototype=x,new T};if("function"==typeof Object.setPrototypeOf)l=Object.setPrototypeOf;else{var c;e:{var h={};try{h.__proto__={a:!0},c=h.a;break e}catch{}c=!1}l=c?function(x,T){if(x.__proto__=T,x.__proto__!==T)throw new TypeError(x+" is not extensible");return x}:null}var d=l;function p(x,T){if(x.prototype=u(T.prototype),x.prototype.constructor=x,d)d(x,T);else for(var A in T)if("prototype"!=A)if(Object.defineProperties){var D=Object.getOwnPropertyDescriptor(T,A);D&&Object.defineProperty(x,A,D)}else x[A]=T[A];x.na=T.prototype}function f(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.u=this.o=0,this.j=null}function g(x){if(x.l)throw new TypeError("Generator is already running");x.l=!0}function m(x,T){x.j={da:T,ea:!0},x.g=x.o||x.u}function y(x,T,A){return x.g=A,{value:T}}function b(x){this.g=new f,this.h=x}function S(x,T,A,D){try{var W=T.call(x.g.i,A);if(!(W instanceof Object))throw new TypeError("Iterator result "+W+" is not an object");if(!W.done)return x.g.l=!1,W;var M=W.value}catch(U){return x.g.i=null,m(x.g,U),w(x)}return x.g.i=null,D.call(x.g,M),w(x)}function w(x){for(;x.g.g;)try{var T=x.h(x.g);if(T)return x.g.l=!1,{value:T.value,done:!1}}catch(A){x.g.h=void 0,m(x.g,A)}if(x.g.l=!1,x.g.j){if(T=x.g.j,x.g.j=null,T.ea)throw T.da;return{value:T.return,done:!0}}return{value:void 0,done:!0}}function I(x){this.next=function(T){return g(x.g),x.g.i?T=S(x,x.g.i.next,T,x.g.s):(x.g.s(T),T=w(x)),T},this.throw=function(T){return g(x.g),x.g.i?T=S(x,x.g.i.throw,T,x.g.s):(m(x.g,T),T=w(x)),T},this.return=function(T){return function(A,D){g(A.g);var W=A.g.i;return W?S(A,"return"in W?W.return:function(M){return{value:M,done:!0}},D,A.g.return):(A.g.return(D),w(A))}(x,T)},this[Symbol.iterator]=function(){return this}}function _(x){return function(T){function A(W){return T.next(W)}function D(W){return T.throw(W)}return new Promise(function(W,M){!function U(X){X.done?W(X.value):Promise.resolve(X.value).then(A,D).then(U,M)}(T.next())})}(new I(new b(x)))}f.prototype.s=function(x){this.h=x},f.prototype.return=function(x){this.j={return:x},this.g=this.u},r("Promise",function(x){function T(U){this.h=0,this.i=void 0,this.g=[],this.s=!1;var X=this.j();try{U(X.resolve,X.reject)}catch(ye){X.reject(ye)}}function A(){this.g=null}function D(U){return U instanceof T?U:new T(function(X){X(U)})}if(x)return x;A.prototype.h=function(U){if(null==this.g){this.g=[];var X=this;this.i(function(){X.l()})}this.g.push(U)};var W=s.setTimeout;A.prototype.i=function(U){W(U,0)},A.prototype.l=function(){for(;this.g&&this.g.length;){var U=this.g;this.g=[];for(var X=0;X<U.length;++X){var ye=U[X];U[X]=null;try{ye()}catch(Ae){this.j(Ae)}}}this.g=null},A.prototype.j=function(U){this.i(function(){throw U})},T.prototype.j=function(){function U(Ae){return function(Ve){ye||(ye=!0,Ae.call(X,Ve))}}var X=this,ye=!1;return{resolve:U(this.D),reject:U(this.l)}},T.prototype.D=function(U){if(U===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(U instanceof T)this.H(U);else{e:switch(typeof U){case"object":var X=null!=U;break e;case"function":X=!0;break e;default:X=!1}X?this.A(U):this.o(U)}},T.prototype.A=function(U){var X=void 0;try{X=U.then}catch(ye){return void this.l(ye)}"function"==typeof X?this.I(X,U):this.o(U)},T.prototype.l=function(U){this.u(2,U)},T.prototype.o=function(U){this.u(1,U)},T.prototype.u=function(U,X){if(0!=this.h)throw Error("Cannot settle("+U+", "+X+"): Promise already settled in state"+this.h);this.h=U,this.i=X,2===this.h&&this.G(),this.B()},T.prototype.G=function(){var U=this;W(function(){if(U.C()){var X=s.console;void 0!==X&&X.error(U.i)}},1)},T.prototype.C=function(){if(this.s)return!1;var U=s.CustomEvent,X=s.Event,ye=s.dispatchEvent;return void 0===ye||("function"==typeof U?U=new U("unhandledrejection",{cancelable:!0}):"function"==typeof X?U=new X("unhandledrejection",{cancelable:!0}):(U=s.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,U),U.promise=this,U.reason=this.i,ye(U))},T.prototype.B=function(){if(null!=this.g){for(var U=0;U<this.g.length;++U)M.h(this.g[U]);this.g=null}};var M=new A;return T.prototype.H=function(U){var X=this.j();U.M(X.resolve,X.reject)},T.prototype.I=function(U,X){var ye=this.j();try{U.call(X,ye.resolve,ye.reject)}catch(Ae){ye.reject(Ae)}},T.prototype.then=function(U,X){function ye(pt,Ue){return"function"==typeof pt?function(xt){try{Ae(pt(xt))}catch(Ft){Ve(Ft)}}:Ue}var Ae,Ve,ot=new T(function(pt,Ue){Ae=pt,Ve=Ue});return this.M(ye(U,Ae),ye(X,Ve)),ot},T.prototype.catch=function(U){return this.then(void 0,U)},T.prototype.M=function(U,X){function ye(){switch(Ae.h){case 1:U(Ae.i);break;case 2:X(Ae.i);break;default:throw Error("Unexpected state: "+Ae.h)}}var Ae=this;null==this.g?M.h(ye):this.g.push(ye),this.s=!0},T.resolve=D,T.reject=function(U){return new T(function(X,ye){ye(U)})},T.race=function(U){return new T(function(X,ye){for(var Ae=i(U),Ve=Ae.next();!Ve.done;Ve=Ae.next())D(Ve.value).M(X,ye)})},T.all=function(U){var X=i(U),ye=X.next();return ye.done?D([]):new T(function(Ae,Ve){function ot(xt){return function(Ft){pt[xt]=Ft,0==--Ue&&Ae(pt)}}var pt=[],Ue=0;do{pt.push(void 0),Ue++,D(ye.value).M(ot(pt.length-1),Ve),ye=X.next()}while(!ye.done)})},T});var R="function"==typeof Object.assign?Object.assign:function(x,T){for(var A=1;A<arguments.length;A++){var D=arguments[A];if(D)for(var W in D)Object.prototype.hasOwnProperty.call(D,W)&&(x[W]=D[W])}return x};r("Object.assign",function(x){return x||R}),r("Object.is",function(x){return x||function(T,A){return T===A?0!==T||1/T==1/A:T!=T&&A!=A}}),r("Array.prototype.includes",function(x){return x||function(T,A){var D=this;D instanceof String&&(D=String(D));var W=D.length;for(0>(A=A||0)&&(A=Math.max(A+W,0));A<W;A++){var M=D[A];if(M===T||Object.is(M,T))return!0}return!1}}),r("String.prototype.includes",function(x){return x||function(T,A){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(T instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(T,A||0)}}),r("Array.prototype.keys",function(x){return x||function(){return function(T,A){T instanceof String&&(T+="");var D=0,W=!1,M={next:function(){return!W&&D<T.length?{value:D++,done:!1}:(W=!0,{done:!0,value:void 0})}};return M[Symbol.iterator]=function(){return M},M}(this)}});var F=this||self;function O(x,T){x=x.split(".");var A,D=F;for((x[0]in D||void 0===D.execScript||D.execScript("var "+x[0]));x.length&&(A=x.shift());)x.length||void 0===T?D=D[A]&&D[A]!==Object.prototype[A]?D[A]:D[A]={}:D[A]=T}function L(){throw Error("Invalid UTF8")}function j(x,T){return T=String.fromCharCode.apply(null,T),null==x?T:x+T}var Q,te,se=typeof TextDecoder<"u",oe=typeof TextEncoder<"u",ae={},ue=null;function re(x){var T;void 0===T&&(T=0),ve(),T=ae[T];for(var A=Array(Math.floor(x.length/3)),D=T[64]||"",W=0,M=0;W<x.length-2;W+=3){var U=x[W],X=x[W+1],ye=x[W+2],Ae=T[U>>2];A[M++]=Ae+(U=T[(3&U)<<4|X>>4])+(X=T[(15&X)<<2|ye>>6])+(ye=T[63&ye])}switch(Ae=0,ye=D,x.length-W){case 2:ye=T[(15&(Ae=x[W+1]))<<2]||D;case 1:A[M]=T[(x=x[W])>>2]+T[(3&x)<<4|Ae>>4]+ye+D}return A.join("")}function de(x){var T=x.length,A=3*T/4;A%3?A=Math.floor(A):-1!="=.".indexOf(x[T-1])&&(A=-1!="=.".indexOf(x[T-2])?A-2:A-1);var D=new Uint8Array(A),W=0;return function(M,U){function X(Ue){for(;ye<M.length;){var xt=M.charAt(ye++),Ft=ue[xt];if(null!=Ft)return Ft;if(!/^[\s\xa0]*$/.test(xt))throw Error("Unknown base64 encoding at char: "+xt)}return Ue}ve();for(var ye=0;;){var Ae=X(-1),Ve=X(0),ot=X(64),pt=X(64);if(64===pt&&-1===Ae)break;U(Ae<<2|Ve>>4),64!=ot&&(U(Ve<<4&240|ot>>2),64!=pt&&U(ot<<6&192|pt))}}(x,function(M){D[W++]=M}),W!==A?D.subarray(0,W):D}function ve(){if(!ue){ue={};for(var x="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),T=["+/=","+/","-_=","-_.","-_"],A=0;5>A;A++){var D=x.concat(T[A].split(""));ae[A]=D;for(var W=0;W<D.length;W++){var M=D[W];void 0===ue[M]&&(ue[M]=W)}}}}var Ie,Ee="function"==typeof Uint8Array;function Ce(x){return Ee&&null!=x&&x instanceof Uint8Array}function Fe(x){if(this.L=x,null!==x&&0===x.length)throw Error("ByteString should be constructed with non-empty values")}var $e="function"==typeof Uint8Array.prototype.slice,Le=0;function Je(x,T){return Error("Invalid wire type: "+x+" (at position "+T+")")}function st(){return Error("Failed to read varint, encoding is invalid.")}function tt(x,T){T=void 0!==(T=void 0===T?{}:T).v&&T.v,this.h=null,this.g=this.i=this.j=0,this.v=T,x&&bt(this,x)}function bt(x,T){x.h=function(A,D){if(A.constructor===Uint8Array)return A;if(A.constructor===ArrayBuffer)return new Uint8Array(A);if(A.constructor===Array)return new Uint8Array(A);if(A.constructor===String)return de(A);if(A.constructor===Fe)return!D&&(D=A.L)&&D.constructor===Uint8Array?D:(D=null==(D=A.L)||Ce(D)?D:"string"==typeof D?de(D):null,(A=A.L=D)?new Uint8Array(A):Ie||(Ie=new Uint8Array(0)));if(A instanceof Uint8Array)return new Uint8Array(A.buffer,A.byteOffset,A.byteLength);throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, or Array of numbers")}(T,x.v),x.j=0,x.i=x.h.length,x.g=x.j}function et(x){if(x.g>x.i)throw Error("Tried to read past the end of the data "+x.g+" > "+x.i)}function Kt(x){var T=x.h,A=T[x.g],D=127&A;if(128>A)return x.g+=1,et(x),D;if(D|=(127&(A=T[x.g+1]))<<7,128>A)return x.g+=2,et(x),D;if(D|=(127&(A=T[x.g+2]))<<14,128>A)return x.g+=3,et(x),D;if(D|=(127&(A=T[x.g+3]))<<21,128>A)return x.g+=4,et(x),D;if(A=T[x.g+4],x.g+=5,D|=(15&A)<<28,128>A)return et(x),D;if(128<=T[x.g++]&&128<=T[x.g++]&&128<=T[x.g++]&&128<=T[x.g++]&&128<=T[x.g++])throw st();return et(x),D}tt.prototype.reset=function(){this.g=this.j};var ln=[];function Sn(){this.g=[]}function Yt(x,T){for(;127<T;)x.g.push(127&T|128),T>>>=7;x.g.push(T)}function nn(x){var T={},A=void 0!==T.W&&T.W;this.l={v:void 0!==T.v&&T.v},this.W=A,T=this.l,ln.length?(A=ln.pop(),T&&(A.v=T.v),x&&bt(A,x),x=A):x=new tt(x,T),this.g=x,this.j=this.g.g,this.h=this.i=-1}function In(x){var T=x.g;if(T.g==T.i)return!1;x.j=x.g.g;var A=Kt(x.g)>>>0;if(T=A>>>3,!(0<=(A&=7)&&5>=A))throw Je(A,x.j);if(1>T)throw Error("Invalid field number: "+T+" (at position "+x.j+")");return x.i=T,x.h=A,!0}function un(x){switch(x.h){case 0:if(0!=x.h)un(x);else e:{for(var T=(x=x.g).g,A=T+10;T<A;)if(!(128&x.h[T++])){x.g=T,et(x);break e}throw st()}break;case 1:(x=x.g).g+=8,et(x);break;case 2:2!=x.h?un(x):(T=Kt(x.g)>>>0,(x=x.g).g+=T,et(x));break;case 5:(x=x.g).g+=4,et(x);break;case 3:for(T=x.i;;){if(!In(x))throw Error("Unmatched start-group tag: stream EOF");if(4==x.h){if(x.i!=T)throw Error("Unmatched end-group tag");break}un(x)}break;default:throw Je(x.h,x.j)}}Sn.prototype.length=function(){return this.g.length},Sn.prototype.end=function(){var x=this.g;return this.g=[],x},nn.prototype.reset=function(){this.g.reset(),this.j=this.g.g,this.h=this.i=-1};var cr=[];function ls(){this.i=[],this.h=0,this.g=new Sn}function Ys(x,T){0!==T.length&&(x.i.push(T),x.h+=T.length)}var Ns="function"==typeof Symbol&&"symbol"==typeof Symbol()?Symbol(void 0):void 0;function Wo(x,T){Object.isFrozen(x)||(Ns?x[Ns]|=T:void 0!==x.N?x.N|=T:Object.defineProperties(x,{N:{value:T,configurable:!0,writable:!0,enumerable:!1}}))}function hr(x){var T;return null==(T=Ns?x[Ns]:x.N)?0:T}function Js(x){return Wo(x,1),x}function dr(x){return!!Array.isArray(x)&&!!(2&hr(x))}function Gr(x){if(!Array.isArray(x))throw Error("cannot mark non-array as immutable");Wo(x,2)}function fo(x){return null!==x&&"object"==typeof x&&!Array.isArray(x)&&x.constructor===Object}var Uo=Object.freeze(Js([]));function zu(x){if(dr(x.m))throw Error("Cannot mutate an immutable Message")}var Bu,um=typeof Symbol<"u"&&void 0!==Symbol.hasInstance;function sl(x){return{value:x,configurable:!1,writable:!1,enumerable:!1}}function $r(x,T,A){return-1===T?null:T>=x.i?x.g?x.g[T]:void 0:void 0!==A&&A&&x.g&&null!=(A=x.g[T])?A:x.m[T+x.h]}function es(x,T,A,D){D=void 0!==D&&D,zu(x),T<x.i&&!D?x.m[T+x.h]=A:(x.g||(x.g=x.m[x.i+x.h]={}))[T]=A}function $I(x,T,A,D){A=void 0===A||A;var W=$r(x,T,D=void 0!==D&&D);return null==W&&(W=Uo),dr(x.m)?A&&(Gr(W),Object.freeze(W)):(W===Uo||dr(W))&&es(x,T,W=Js(W.slice()),D),W}function Go(x,T,A){return null==(x=null==(x=$r(x,T))?x:+x)?void 0===A?0:A:x}function cm(x,T,A,D){x.j||(x.j={});var W=dr(x.m),M=x.j[A];if(!M){D=$I(x,A,!0,void 0!==D&&D),M=[],W=W||dr(D);for(var U=0;U<D.length;U++)M[U]=new T(D[U]),W&&Gr(M[U].m);W&&(Gr(M),Object.freeze(M)),x.j[A]=M}return M}function RI(x,T,A,D,W){var M=void 0!==M&&M;return zu(x),M=cm(x,A,T,M),A=D||new A,x=$I(x,T),null!=W?(M.splice(W,0,A),x.splice(W,0,A.m)):(M.push(A),x.push(A.m)),A}function DI(x,T){return null==(x=$r(x,T))?0:x}function FI(x,T){return null==(x=$r(x,T))?"":x}function OI(x){return PI(x,void 0===pJ?fJ:pJ)}function LI(x,T){if(null!=x){if(Array.isArray(x))x=PI(x,T);else if(fo(x)){var A,D={};for(A in x)D[A]=LI(x[A],T);x=D}else x=T(x);return x}}function PI(x,T){for(var A=x.slice(),D=0;D<A.length;D++)A[D]=LI(A[D],T);return Array.isArray(x)&&1&hr(x)&&Js(A),A}function pJ(x){return x&&"object"==typeof x&&x.toJSON?x.toJSON():(x=function(T){switch(typeof T){case"number":return isFinite(T)?T:String(T);case"object":if(T&&!Array.isArray(T)){if(Ce(T))return re(T);if(T instanceof Fe){var A=T.L;return A=null==A||"string"==typeof A?A:Ee&&A instanceof Uint8Array?re(A):null,(T.L=A)||""}}}return T}(x),Array.isArray(x)?OI(x):x)}function fJ(x){return Ce(x)?new Uint8Array(x):x}function hm(x,T,A){x||(x=Bu),Bu=null;var D=this.constructor.h;if(x||(x=D?[D]:[]),this.h=(D?0:-1)-(this.constructor.g||0),this.j=void 0,this.m=x,x=(D=this.m.length)-1,D&&fo(D=this.m[x])?(this.i=x-this.h,this.g=D):void 0!==T&&-1<T?(this.i=Math.max(T,x+1-this.h),this.g=void 0):this.i=Number.MAX_VALUE,A)for(T=0;T<A.length;T++)if((x=A[T])<this.i)(D=this.m[x+=this.h])?Array.isArray(D)&&Js(D):this.m[x]=Uo;else{var W=(D=this.g||(this.g=this.m[this.i+this.h]={}))[x];W?Array.isArray(W)&&Js(W):D[x]=Uo}}function dm(){hm.apply(this,arguments)}if(hm.prototype.toJSON=function(){return OI(this.m)},hm.prototype.toString=function(){return this.m.toString()},p(dm,hm),um){var MI={};Object.defineProperties(dm,(MI[Symbol.hasInstance]=sl(function(){throw Error("Cannot perform instanceof checks for MutableMessage")}),MI))}function zI(x,T,A){if(A){var D,W={};for(D in A){var M=A[D],U=M.ha;U||(W.F=M.la||M.fa.P,M.aa?(W.U=UI(M.aa),U=function(X){return function(ye,Ae,Ve){return X.F(ye,Ae,Ve,X.U)}}(W)):M.ca?(W.T=GI(M.X.g,M.ca),U=function(X){return function(ye,Ae,Ve){return X.F(ye,Ae,Ve,X.T)}}(W)):U=W.F,M.ha=U),U(T,x,M.X),W={F:W.F,U:W.U,T:W.T}}}!function(X,ye){if(ye=ye.ba){Ys(X,X.g.end());for(var Ae=0;Ae<ye.length;Ae++)Ys(X,ye[Ae])}}(T,x)}var pm=Symbol();function BI(x,T,A){return x[pm]||(x[pm]=function(D,W){return T(D,W,A)})}function VI(x){var T=x[pm];if(!T){var A=qI(x);x[pm]=T=function(D,W){return XI(D,W,A)}}return T}function mJ(x){var W,M,T=(M=(W=x).aa)?VI(M):(M=W.ka)?BI(W.X.g,M,W.ca):void 0,A=x.X,D=x.fa.O;return T?function(W,M){return D(W,M,A,T)}:function(W,M){return D(W,M,A)}}function WI(x,T,A,D,W,M){var U=0;for((x=x()).length&&"number"!=typeof x[0]&&(A(T,x[0]),U++);U<x.length;){A=x[U++];for(var X=U+1;X<x.length&&"number"!=typeof x[X];)X++;var ye=x[U++];switch(X-=U){case 0:D(T,A,ye);break;case 1:D(T,A,ye,x[U++]);break;case 2:W(T,A,ye,x[U++],x[U++]);break;case 3:X=x[U++];var Ae=x[U++],Ve=x[U++];Array.isArray(Ve)?W(T,A,ye,X,Ae,Ve):M(T,A,ye,X,Ae,Ve);break;case 4:M(T,A,ye,x[U++],x[U++],x[U++],x[U++]);break;default:throw Error("unexpected number of binary field arguments: "+X)}}return T}var fm=Symbol();function UI(x){var T=x[fm];if(!T){var A=jI(x);x[fm]=T=function(D,W){return ZI(D,W,A)}}return T}function GI(x,T){var A=x[fm];return A||(x[fm]=A=function(D,W){return zI(D,W,T)}),A}var HI=Symbol();function gJ(x,T){x.push(T)}function yJ(x,T,A){x.push(T,A.P)}function bJ(x,T,A,D,W){var M=UI(W),U=A.P;x.push(T,function(X,ye,Ae){return U(X,ye,Ae,D,M)})}function xJ(x,T,A,D,W,M){var U=GI(D,M),X=A.P;x.push(T,function(ye,Ae,Ve){return X(ye,Ae,Ve,D,U)})}function jI(x){return x[HI]||WI(x,x[HI]=[],gJ,yJ,bJ,xJ)}var KI=Symbol();function vJ(x,T){x[0]=T}function wJ(x,T,A,D){var W=A.O;x[T]=D?function(M,U,X){return W(M,U,X,D)}:W}function SJ(x,T,A,D,W,M){var U=A.O,X=VI(W);x[T]=function(ye,Ae,Ve){return U(ye,Ae,Ve,D,X,M)}}function IJ(x,T,A,D,W,M,U){var X=A.O,ye=BI(D,W,M);x[T]=function(Ae,Ve,ot){return X(Ae,Ve,ot,D,ye,U)}}function qI(x){return x[KI]||WI(x,x[KI]={},vJ,wJ,SJ,IJ)}function XI(x,T,A){for(;In(T)&&4!=T.h;){var D=T.i,W=A[D];if(!W){var M=A[0];M&&(M=M[D])&&(W=A[D]=mJ(M))}if(!(W&&W(T,x,D)||(W=T,D=x,M=W.j,un(W),W.W))){var U=W.g.h;W=M===(W=W.g.g)?Ie||(Ie=new Uint8Array(0)):$e?U.slice(M,W):new Uint8Array(U.subarray(M,W)),(M=D.ba)?M.push(W):D.ba=[W]}}return x}function r3(x,T,A){if(cr.length){var D=cr.pop();x&&(bt(D.g,x),D.i=-1,D.h=-1),x=D}else x=new nn(x);try{return XI(new T,x,qI(A))}finally{(T=x.g).h=null,T.j=0,T.i=0,T.g=0,T.v=!1,x.i=-1,x.h=-1,100>cr.length&&cr.push(x)}}function ZI(x,T,A){for(var D=A.length,W=D%2==1,M=W?1:0;M<D;M+=2)(0,A[M+1])(T,x,A[M]);zI(x,T,W?A[0]:void 0)}function o3(x,T){var A=new ls;ZI(x,A,jI(T)),Ys(A,A.g.end()),x=new Uint8Array(A.h);for(var D=(T=A.i).length,W=0,M=0;M<D;M++){var U=T[M];x.set(U,W),W+=U.length}return A.i=[x],x}function Kh(x,T){return{O:x,P:T}}var mo=Kh(function(x,T,A){if(5!==x.h)return!1;var D=(x=x.g).h[x.g],W=x.h[x.g+1],M=x.h[x.g+2],U=x.h[x.g+3];return x.g+=4,et(x),x=2*((W=(D<<0|W<<8|M<<16|U<<24)>>>0)>>31)+1,D=W>>>23&255,W&=8388607,es(T,A,255==D?W?NaN:1/0*x:0==D?x*Math.pow(2,-149)*W:x*Math.pow(2,D-150)*(W+Math.pow(2,23))),!0},function(x,T,A){if(null!=(T=$r(T,A))){Yt(x.g,8*A+5),x=x.g;var D=T;0===(D=(A=0>D?1:0)?-D:D)?Le=0<1/D?0:2147483648:isNaN(D)?Le=2147483647:34028234663852886e22<D?Le=(A<<31|2139095040)>>>0:11754943508222875e-54>D?(D=Math.round(D/Math.pow(2,-149)),Le=(A<<31|D)>>>0):(T=Math.floor(Math.log(D)/Math.LN2),D*=Math.pow(2,-T),16777216<=(D=Math.round(8388608*D))&&++T,Le=(A<<31|T+127<<23|8388607&D)>>>0),x.g.push((A=Le)>>>0&255),x.g.push(A>>>8&255),x.g.push(A>>>16&255),x.g.push(A>>>24&255)}}),CJ=Kh(function(x,T,A){if(0!==x.h)return!1;for(var D=x.g,W=128,M=0,U=x=0;4>U&&128<=W;U++)W=D.h[D.g++],et(D),M|=(127&W)<<7*U;if(128<=W&&(W=D.h[D.g++],et(D),M|=(127&W)<<28,x|=(127&W)>>4),128<=W)for(U=0;5>U&&128<=W;U++)W=D.h[D.g++],et(D),x|=(127&W)<<7*U+3;if(!(128>W))throw st();return D=M>>>0,(x=2147483648&(W=x>>>0))&&(W=~W>>>0,0==(D=1+~D>>>0)&&(W=W+1>>>0)),D=4294967296*W+(D>>>0),es(T,A,x?-D:D),!0},function(x,T,A){if(null!=(T=$r(T,A))&&null!=T){Yt(x.g,8*A),x=x.g;var D=T;for(A=0>D,T=(D=Math.abs(D))>>>0,D=Math.floor((D-T)/4294967296),D>>>=0,A&&(D=~D>>>0,4294967295<(T=1+(~T>>>0))&&(T=0,4294967295<++D&&(D=0))),A=Le=T,T=D;0<T||127<A;)x.g.push(127&A|128),A=(A>>>7|T<<25)>>>0,T>>>=7;x.g.push(A)}}),NJ=Kh(function(x,T,A){return 0===x.h&&(es(T,A,Kt(x.g)),!0)},function(x,T,A){if(null!=(T=$r(T,A))&&null!=T)if(Yt(x.g,8*A),x=x.g,0<=(A=T))Yt(x,A);else{for(T=0;9>T;T++)x.g.push(127&A|128),A>>=7;x.g.push(1)}}),YI=Kh(function(x,T,A){if(2!==x.h)return!1;var D,W=Kt(x.g)>>>0,M=(x=x.g).g;if(x.g+=W,et(x),x=x.h,se)(D=Q)||(D=Q=new TextDecoder("utf-8",{fatal:!0})),D=D.decode(x.subarray(M,M+W));else{W=M+W;for(var U,X,ye,Ae=[],Ve=null;M<W;)128>(U=x[M++])?Ae.push(U):224>U?M>=W?L():(X=x[M++],194>U||128!=(192&X)?(M--,L()):Ae.push((31&U)<<6|63&X)):240>U?M>=W-1?L():128!=(192&(X=x[M++]))||224===U&&160>X||237===U&&160<=X||128!=(192&(D=x[M++]))?(M--,L()):Ae.push((15&U)<<12|(63&X)<<6|63&D):244>=U?M>=W-2?L():128!=(192&(X=x[M++]))||X-144+(U<<28)>>30||128!=(192&(D=x[M++]))||128!=(192&(ye=x[M++]))?(M--,L()):(U=(7&U)<<18|(63&X)<<12|(63&D)<<6|63&ye,Ae.push(55296+((U-=65536)>>10&1023),56320+(1023&U))):L(),8192<=Ae.length&&(Ve=j(Ve,Ae),Ae.length=0);D=j(Ve,Ae)}return es(T,A,D),!0},function(x,T,A){if(null!=(T=$r(T,A))){var D=!1;if(D=void 0!==D&&D,oe){if(D&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(T))throw Error("Found an unpaired surrogate");T=(te||(te=new TextEncoder)).encode(T)}else{for(var W=0,M=new Uint8Array(3*T.length),U=0;U<T.length;U++){var X=T.charCodeAt(U);if(128>X)M[W++]=X;else{if(2048>X)M[W++]=X>>6|192;else{if(55296<=X&&57343>=X){if(56319>=X&&U<T.length){var ye=T.charCodeAt(++U);if(56320<=ye&&57343>=ye){M[W++]=(X=1024*(X-55296)+ye-56320+65536)>>18|240,M[W++]=X>>12&63|128,M[W++]=X>>6&63|128,M[W++]=63&X|128;continue}U--}if(D)throw Error("Found an unpaired surrogate");X=65533}M[W++]=X>>12|224,M[W++]=X>>6&63|128}M[W++]=63&X|128}}T=M.subarray(0,W)}Yt(x.g,8*A+2),Yt(x.g,T.length),Ys(x,x.g.end()),Ys(x,T)}}),JI=Kh(function(x,T,A,D,W){if(2!==x.h)return!1;T=RI(T,A,D),A=x.g.i,D=Kt(x.g)>>>0;var M=x.g.g+D,U=M-A;if(0>=U&&(x.g.i=M,W(T,x),U=M-x.g.g),U)throw Error("Message parsing ended unexpectedly. Expected to read "+D+" bytes, instead read "+(D-U)+" bytes, either the data ended unexpectedly or the message misreported its own length");return x.g.g=M,x.g.i=A,!0},function(x,T,A,D,W){if(null!=(T=cm(T,D,A)))for(D=0;D<T.length;D++){var M=x;Yt(M.g,8*A+2);var U=M.g.end();Ys(M,U),U.push(M.h),M=U,W(T[D],x),U=x;var X=M.pop();for(X=U.h+U.g.length()-X;127<X;)M.push(127&X|128),X>>>=7,U.h++;M.push(X),U.h++}});function Hr(){dm.apply(this,arguments)}if(p(Hr,dm),um){var QI={};Object.defineProperties(Hr,(QI[Symbol.hasInstance]=sl(Object[Symbol.hasInstance]),QI))}function qh(x){Hr.call(this,x)}function eC(){return[1,NJ,2,mo,3,YI,4,YI]}function i3(x){Hr.call(this,x,-1,TJ)}function kJ(){return[1,JI,qh,eC]}p(qh,Hr),p(i3,Hr),i3.prototype.addClassification=function(x,T){return RI(this,1,qh,x,T),this};var TJ=[1];function mm(x){Hr.call(this,x)}function tC(){return[1,mo,2,mo,3,mo,4,mo,5,mo]}function nC(x){Hr.call(this,x,-1,EJ)}function _J(){return[1,JI,mm,tC]}p(mm,Hr),p(nC,Hr);var EJ=[1];function a3(x){Hr.call(this,x)}function sC(){return[1,mo,2,mo,3,mo,4,mo,5,mo,6,CJ]}p(a3,Hr);var rC=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],oC=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],iC=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],aC=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],lC=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],uC=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],AJ=[].concat(a(rC),a(oC),a(iC),a(aC),a(lC),a(uC));function cC(x,T,A){if(A=x.createShader(0===A?x.VERTEX_SHADER:x.FRAGMENT_SHADER),x.shaderSource(A,T),x.compileShader(A),!x.getShaderParameter(A,x.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+x.getShaderInfoLog(A));return A}function $J(x){return cm(x,qh,1).map(function(T){return{index:DI(T,1),ga:Go(T,2),label:null!=$r(T,3)?FI(T,3):void 0,displayName:null!=$r(T,4)?FI(T,4):void 0}})}function RJ(x){return{x:Go(x,1),y:Go(x,2),z:Go(x,3),visibility:null!=$r(x,4)?Go(x,4):void 0}}function l3(x,T){this.h=x,this.g=T,this.l=0}function hC(x,T,A){return function(D,W){var M=D.g;if(void 0===D.o){var U=cC(M,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),X=cC(M,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),ye=M.createProgram();if(M.attachShader(ye,U),M.attachShader(ye,X),M.linkProgram(ye),!M.getProgramParameter(ye,M.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+M.getProgramInfoLog(ye));U=D.o=ye,M.useProgram(U),X=M.getUniformLocation(U,"sampler0"),D.j={K:M.getAttribLocation(U,"aVertex"),J:M.getAttribLocation(U,"aTex"),ma:X},D.u=M.createBuffer(),M.bindBuffer(M.ARRAY_BUFFER,D.u),M.enableVertexAttribArray(D.j.K),M.vertexAttribPointer(D.j.K,2,M.FLOAT,!1,0,0),M.bufferData(M.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),M.STATIC_DRAW),M.bindBuffer(M.ARRAY_BUFFER,null),D.s=M.createBuffer(),M.bindBuffer(M.ARRAY_BUFFER,D.s),M.enableVertexAttribArray(D.j.J),M.vertexAttribPointer(D.j.J,2,M.FLOAT,!1,0,0),M.bufferData(M.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),M.STATIC_DRAW),M.bindBuffer(M.ARRAY_BUFFER,null),M.uniform1i(X,0)}U=D.j,M.useProgram(D.o),M.canvas.width=W.width,M.canvas.height=W.height,M.viewport(0,0,W.width,W.height),M.activeTexture(M.TEXTURE0),D.h.bindTexture2d(W.glName),M.enableVertexAttribArray(U.K),M.bindBuffer(M.ARRAY_BUFFER,D.u),M.vertexAttribPointer(U.K,2,M.FLOAT,!1,0,0),M.enableVertexAttribArray(U.J),M.bindBuffer(M.ARRAY_BUFFER,D.s),M.vertexAttribPointer(U.J,2,M.FLOAT,!1,0,0),M.bindFramebuffer(M.DRAW_FRAMEBUFFER?M.DRAW_FRAMEBUFFER:M.FRAMEBUFFER,null),M.clearColor(0,0,0,0),M.clear(M.COLOR_BUFFER_BIT),M.colorMask(!0,!0,!0,!0),M.drawArrays(M.TRIANGLE_FAN,0,4),M.disableVertexAttribArray(U.K),M.disableVertexAttribArray(U.J),M.bindBuffer(M.ARRAY_BUFFER,null),D.h.bindTexture2d(0)}(x,T),"function"==typeof x.g.canvas.transferToImageBitmap?Promise.resolve(x.g.canvas.transferToImageBitmap()):A?Promise.resolve(x.g.canvas):"function"==typeof createImageBitmap?createImageBitmap(x.g.canvas):(void 0===x.i&&(x.i=document.createElement("canvas")),new Promise(function(D){x.i.height=x.g.canvas.height,x.i.width=x.g.canvas.width,x.i.getContext("2d",{}).drawImage(x.g.canvas,0,0,x.g.canvas.width,x.g.canvas.height),D(x.i)}))}function DJ(x){this.g=x}var FJ=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function OJ(x,T){return T+x}function dC(x,T){window[x]=T}function u3(x){if(this.g=x,this.listeners={},this.j={},this.H={},this.o={},this.u={},this.I=this.s=this.Z=!0,this.D=Promise.resolve(),this.Y="",this.C={},this.locateFile=x&&x.locateFile||OJ,"object"==typeof window)var T=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if(typeof location>"u")throw Error("solutions can only be loaded on a web page or in a web worker");T=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.$=T,x.options)for(var A=(T=i(Object.keys(x.options))).next();!A.done;A=T.next()){var D=x.options[A=A.value].default;void 0!==D&&(this.j[A]="function"==typeof D?D():D)}}function gm(x,T){var A,D;return _(function(W){return T in x.H?W.return(x.H[T]):(A=x.locateFile(T,""),D=fetch(A).then(function(M){return M.arrayBuffer()}),x.H[T]=D,W.return(D))})}function MJ(x,T){for(var A=T.name||"$",D=[].concat(a(T.wants)),W=new x.h.StringList,M=i(T.wants),U=M.next();!U.done;U=M.next())W.push_back(U.value);M=x.h.PacketListener.implement({onResults:function(X){for(var ye={},Ae=0;Ae<T.wants.length;++Ae)ye[D[Ae]]=X.get(Ae);var Ve=x.listeners[A];Ve&&(x.D=function PJ(x,T,A){var D,W,M,U,ye,Ae,Ve,ot,pt,Ue,Ft,gn;return _(function(Nn){switch(Nn.g){case 1:if(!A)return Nn.return(T);for(D={},W=0,M=i(Object.keys(A)),U=M.next();!U.done;U=M.next())"string"!=typeof(ye=A[U.value])&&"texture"===ye.type&&void 0!==T[ye.stream]&&++W;1<W&&(x.I=!1),Ae=i(Object.keys(A)),U=Ae.next();case 2:if(U.done){Nn.g=4;break}if("string"==typeof(ot=A[Ve=U.value]))return Ft=D,gn=Ve,y(Nn,(rl=x,fC=Ve,Vu=T[ot],_(function(c3){return"number"==typeof Vu||Vu instanceof Uint8Array||Vu instanceof rl.h.Uint8BlobList?c3.return(Vu):Vu instanceof rl.h.Texture2dDataOut?((ym=rl.u[fC])||(ym=new l3(rl.h,rl.G),rl.u[fC]=ym),c3.return(hC(ym,Vu,rl.I))):c3.return(void 0)})),14);if(pt=T[ot.stream],"detection_list"===ot.type){if(pt){for(var Qs=pt.getRectList(),jr=pt.getLandmarksList(),pr=pt.getClassificationsList(),sn=[],$s=0;$s<Qs.size();++$s){var ca=r3(Qs.get($s),a3,sC);ca={boundingBox:{xCenter:Go(ca,1),yCenter:Go(ca,2),height:Go(ca,3),width:Go(ca,4),rotation:Go(ca,5,0),rectId:DI(ca,6)},landmarks:cm(r3(jr.get($s),nC,_J),mm,1).map(RJ),V:$J(r3(pr.get($s),i3,kJ))},sn.push(ca)}Qs=sn}else Qs=[];D[Ve]=Qs,Nn.g=7;break}if("proto_list"===ot.type){if(pt){for(Qs=Array(pt.size()),jr=0;jr<pt.size();jr++)Qs[jr]=pt.get(jr);pt.delete()}else Qs=[];D[Ve]=Qs,Nn.g=7;break}if(void 0===pt){Nn.g=3;break}if("float_list"===ot.type){D[Ve]=pt,Nn.g=7;break}if("proto"===ot.type){D[Ve]=pt,Nn.g=7;break}if("texture"!==ot.type)throw Error("Unknown output config type: '"+ot.type+"'");return(Ue=x.u[Ve])||(Ue=new l3(x.h,x.G),x.u[Ve]=Ue),y(Nn,hC(Ue,pt,x.I),13);case 13:D[Ve]=Nn.h;case 7:ot.transform&&D[Ve]&&(D[Ve]=ot.transform(D[Ve])),Nn.g=3;break;case 14:Ft[gn]=Nn.h;case 3:U=Ae.next(),Nn.g=2;break;case 4:return Nn.return(D)}var rl,fC,Vu,ym})}(x,ye,T.outs).then(function(ot){ot=Ve(ot);for(var pt=0;pt<T.wants.length;++pt){var Ue=ye[D[pt]];"object"==typeof Ue&&Ue.hasOwnProperty&&Ue.hasOwnProperty("delete")&&Ue.delete()}ot&&(x.D=ot)}))}}),x.i.attachMultiListener(W,M),W.delete()}function pC(x){var T=this,A={url:"face_detection_short.binarypb"},D={type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}};this.g=new u3({locateFile:(x=x||{}).locateFile,files:[{data:!0,url:"face_detection_short.binarypb"},{data:!0,url:"face_detection_short_range.tflite"},{simd:!0,url:"face_detection_solution_simd_wasm_bin.js"},{simd:!1,url:"face_detection_solution_wasm_bin.js"}],graph:A,listeners:[{wants:["detections","image_transformed"],outs:{image:"image_transformed",detections:{type:"detection_list",stream:"detections"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"object"==typeof window&&void 0!==window.navigator&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},model:{type:0,onChange:function(W){var M,U,X,ye;return _(function(Ve){switch(Ve.g){case 1:M=i("short"===W?["face_detection_short_range.tflite"]:["face_detection_full_range_sparse.tflite"]),U=M.next();case 2:if(U.done){Ve.g=4;break}return ye="third_party/mediapipe/modules/face_detection/"+(X=U.value),y(Ve,gm(T.g,X),5);case 5:T.g.overrideFile(ye,Ve.h),U=M.next(),Ve.g=2;break;case 4:return A.url="short"===W?"face_detection_short.binarypb":"face_detection_full.binarypb",D.graphOptionXref.calculatorName="short"===W?"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator":"facedetectionfullrangegpu__facedetectionfullrangecommon__TensorsToDetectionsCalculator",Ve.return(!0)}})}},minDetectionConfidence:D}})}(n=u3.prototype).close=function(){return this.i&&this.i.delete(),Promise.resolve()},n.reset=function(){var x=this;return _(function(T){x.i&&(x.i.reset(),x.o={},x.u={}),T.g=0})},n.setOptions=function(x,T){var A=this;if(T=T||this.g.options){for(var D=[],W=[],M={},U=i(Object.keys(x)),X=U.next();!X.done;M={R:M.R,S:M.S},X=U.next()){var ye=X.value;ye in this.j&&this.j[ye]===x[ye]||(this.j[ye]=x[ye],void 0!==(X=T[ye])&&(X.onChange&&(M.R=X.onChange,M.S=x[ye],D.push(function(Ae){return function(){return _(function(Ve){if(1==Ve.g)return y(Ve,Ae.R(Ae.S),2);!0===Ve.h&&(A.s=!0),Ve.g=0})}}(M))),X.graphOptionXref&&(ye={valueNumber:1===X.type?x[ye]:0,valueBoolean:0===X.type&&x[ye],valueString:2===X.type?x[ye]:""},X=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),X.graphOptionXref),ye),W.push(X))))}0===D.length&&0===W.length||(this.s=!0,this.B=(void 0===this.B?[]:this.B).concat(W),this.A=(void 0===this.A?[]:this.A).concat(D))}},n.initialize=function(){var x=this;return _(function(T){return 1==T.g?y(T,function LJ(x){var T,A,D,W,M,U,X,ye,Ae,Ve,ot;return _(function(pt){switch(pt.g){case 1:return x.Z?(T=void 0===x.g.files?[]:"function"==typeof x.g.files?x.g.files(x.j):x.g.files,y(pt,_(function(Ue){switch(Ue.g){case 1:return Ue.o=2,y(Ue,WebAssembly.instantiate(FJ),4);case 4:Ue.g=3,Ue.o=0;break;case 2:return Ue.o=0,Ue.j=null,Ue.return(!1);case 3:return Ue.return(!0)}}),2)):pt.return();case 2:if(A=pt.h,"object"==typeof window)return dC("createMediapipeSolutionsWasm",{locateFile:x.locateFile}),dC("createMediapipeSolutionsPackedAssets",{locateFile:x.locateFile}),U=T.filter(function(Ue){return void 0!==Ue.data}),X=T.filter(function(Ue){return void 0===Ue.data}),ye=Promise.all(U.map(function(Ue){var xt=gm(x,Ue.url);if(void 0!==Ue.path){var Ft=Ue.path;xt=xt.then(function(gn){return x.overrideFile(Ft,gn),Promise.resolve(gn)})}return xt})),Ae=Promise.all(X.map(function(Ue){return void 0===Ue.simd||Ue.simd&&A||!Ue.simd&&!A?(xt=x.locateFile(Ue.url,x.$),(Ft=document.createElement("script")).setAttribute("src",xt),Ft.setAttribute("crossorigin","anonymous"),new Promise(function(gn){Ft.addEventListener("load",function(){gn()},!1),Ft.addEventListener("error",function(){gn()},!1),document.body.appendChild(Ft)})):Promise.resolve();var xt,Ft})).then(function(){var Ue,xt,Ft;return _(function(gn){if(1==gn.g)return Ue=window.createMediapipeSolutionsWasm,xt=window.createMediapipeSolutionsPackedAssets,Ft=x,y(gn,Ue(xt),2);Ft.h=gn.h,gn.g=0})}),Ve=_(function(Ue){return x.g.graph&&x.g.graph.url?Ue=y(Ue,gm(x,x.g.graph.url),0):(Ue.g=0,Ue=void 0),Ue}),y(pt,Promise.all([Ae,ye,Ve]),7);if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return D=T.filter(function(Ue){return void 0===Ue.simd||Ue.simd&&A||!Ue.simd&&!A}).map(function(Ue){return x.locateFile(Ue.url,x.$)}),importScripts.apply(null,a(D)),W=x,y(pt,createMediapipeSolutionsWasm(Module),6);case 6:W.h=pt.h,x.l=new OffscreenCanvas(1,1),x.h.canvas=x.l,M=x.h.GL.createContext(x.l,{antialias:!1,alpha:!1,ja:typeof WebGL2RenderingContext<"u"?2:1}),x.h.GL.makeContextCurrent(M),pt.g=4;break;case 7:if(x.l=document.createElement("canvas"),!(ot=x.l.getContext("webgl2",{}))&&!(ot=x.l.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),pt.return();x.G=ot,x.h.canvas=x.l,x.h.createContext(x.l,!0,!0,{});case 4:x.i=new x.h.SolutionWasm,x.Z=!1,pt.g=0}})}(x),2):3!=T.g?y(T,(A=x,_(function(ot){if(1==ot.g)return A.g.graph&&A.g.graph.url&&A.Y===A.g.graph.url?ot.return():(A.s=!0,A.g.graph&&A.g.graph.url?(A.Y=A.g.graph.url,y(ot,gm(A,A.g.graph.url),3)):void(ot.g=2));for(2!=ot.g&&A.i.loadGraph(ot.h),W=i(Object.keys(A.C)),M=W.next();!M.done;M=W.next())A.i.overrideFile(U=M.value,A.C[U]);if(A.C={},A.g.listeners)for(X=i(A.g.listeners),ye=X.next();!ye.done;ye=X.next())MJ(A,ye.value);Ve=A.j,A.j={},A.setOptions(Ve),ot.g=0})),3):y(T,function(A){var D,W,M,U,X;return _(function(Ae){switch(Ae.g){case 1:if(!A.s)return Ae.return();if(!A.A){Ae.g=2;break}D=i(A.A),W=D.next();case 3:if(W.done){Ae.g=5;break}return y(Ae,(0,W.value)(),4);case 4:W=D.next(),Ae.g=3;break;case 5:A.A=void 0;case 2:if(A.B){for(M=new A.h.GraphOptionChangeRequestList,U=i(A.B),X=U.next();!X.done;X=U.next())M.push_back(X.value);A.i.changeOptions(M),M.delete(),A.B=void 0}A.s=!1,Ae.g=0}})}(x),0);var A,W,M,U,X,ye,Ve})},n.overrideFile=function(x,T){this.i?this.i.overrideFile(x,T):this.C[x]=T},n.clearOverriddenFiles=function(){this.C={},this.i&&this.i.clearOverriddenFiles()},n.send=function(x,T){var A,D,W,M,U,X,ye,Ae,Ve,ot=this;return _(function(pt){switch(pt.g){case 1:return ot.g.inputs?(A=1e3*(null==T?performance.now():T),y(pt,ot.D,2)):pt.return();case 2:return y(pt,ot.initialize(),3);case 3:for(D=new ot.h.PacketDataList,W=i(Object.keys(x)),M=W.next();!M.done;M=W.next())if(X=ot.g.inputs[U=M.value]){e:{var Ue=x[U];switch(X.type){case"video":var xt=ot.o[X.stream];if(xt||(xt=new l3(ot.h,ot.G),ot.o[X.stream]=xt),0===xt.l&&(xt.l=xt.h.createTexture()),typeof HTMLVideoElement<"u"&&Ue instanceof HTMLVideoElement)var Ft=Ue.videoWidth,gn=Ue.videoHeight;else typeof HTMLImageElement<"u"&&Ue instanceof HTMLImageElement?(Ft=Ue.naturalWidth,gn=Ue.naturalHeight):(Ft=Ue.width,gn=Ue.height);gn={glName:xt.l,width:Ft,height:gn},(Ft=xt.g).canvas.width=gn.width,Ft.canvas.height=gn.height,Ft.activeTexture(Ft.TEXTURE0),xt.h.bindTexture2d(xt.l),Ft.texImage2D(Ft.TEXTURE_2D,0,Ft.RGBA,Ft.RGBA,Ft.UNSIGNED_BYTE,Ue),xt.h.bindTexture2d(0),xt=gn;break e;case"detections":for((xt=ot.o[X.stream])||(xt=new DJ(ot.h),ot.o[X.stream]=xt),xt.data||(xt.data=new xt.g.DetectionListData),xt.data.reset(Ue.length),gn=0;gn<Ue.length;++gn){var Nn=xt.data,Qs=Nn.setBoundingBox,jr=gn,pr=(Ft=Ue[gn]).boundingBox,sn=new a3;if(es(sn,1,pr.xCenter),es(sn,2,pr.yCenter),es(sn,3,pr.height),es(sn,4,pr.width),es(sn,5,pr.rotation),es(sn,6,pr.rectId),pr=o3(sn,sC),Qs.call(Nn,jr,pr),Ft.landmarks)for(Nn=0;Nn<Ft.landmarks.length;++Nn){var $s=!!(sn=Ft.landmarks[Nn]).visibility;jr=(Qs=xt.data).addNormalizedLandmark,pr=gn,sn=Object.assign(Object.assign({},sn),{visibility:$s?sn.visibility:0}),es($s=new mm,1,sn.x),es($s,2,sn.y),es($s,3,sn.z),sn.visibility&&es($s,4,sn.visibility),sn=o3($s,tC),jr.call(Qs,pr,sn)}if(Ft.V)for(Nn=0;Nn<Ft.V.length;++Nn)jr=(Qs=xt.data).addClassification,pr=gn,sn=Ft.V[Nn],es($s=new qh,2,sn.ga),sn.index&&es($s,1,sn.index),sn.label&&es($s,3,sn.label),sn.displayName&&es($s,4,sn.displayName),sn=o3($s,eC),jr.call(Qs,pr,sn)}xt=xt.data;break e;default:xt={}}}switch(ye=xt,Ae=X.stream,X.type){case"video":D.pushTexture2d(Object.assign(Object.assign({},ye),{stream:Ae,timestamp:A}));break;case"detections":(Ve=ye).stream=Ae,Ve.timestamp=A,D.pushDetectionList(Ve);break;default:throw Error("Unknown input config type: '"+X.type+"'")}}return ot.i.send(D),y(pt,ot.D,4);case 4:D.delete(),pt.g=0}})},n.onResults=function(x,T){this.listeners[T||"$"]=x},O("Solution",u3),O("OptionType",{BOOL:0,NUMBER:1,ia:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(n=pC.prototype).close=function(){return this.g.close(),Promise.resolve()},n.onResults=function(x){this.g.onResults(x)},n.initialize=function(){var x=this;return _(function(T){return y(T,x.g.initialize(),0)})},n.reset=function(){this.g.reset()},n.send=function(x){var T=this;return _(function(A){return y(A,T.g.send(x),0)})},n.setOptions=function(x){this.g.setOptions(x)},O("FaceDetection",pC),O("FACEDETECTION_LIPS",rC),O("FACEDETECTION_LEFT_EYE",oC),O("FACEDETECTION_LEFT_EYEBROW",iC),O("FACEDETECTION_RIGHT_EYE",aC),O("FACEDETECTION_RIGHT_EYEBROW",lC),O("FACEDETECTION_FACE_OVAL",uC),O("FACEDETECTION_CONTOURS",AJ),O("FACEDETECTION_TESSELATION",[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]]),O("VERSION","0.4.1646425229")}).call(X0);var ua=function(){return ua=Object.assign||function(n){for(var t,e=1,s=arguments.length;e<s;e++)for(var r in t=arguments[e])Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n},ua.apply(this,arguments)};function bi(n,t,e,s){return new(e||(e=Promise))(function(r,o){function i(u){try{l(s.next(u))}catch(c){o(c)}}function a(u){try{l(s.throw(u))}catch(c){o(c)}}function l(u){var c;u.done?r(u.value):(c=u.value,c instanceof e?c:new e(function(h){h(c)})).then(i,a)}l((s=s.apply(n,t||[])).next())})}function xi(n,t){var e,s,r,o,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(l){return function(u){return function(c){if(e)throw new TypeError("Generator is already executing.");for(;i;)try{if(e=1,s&&(r=2&c[0]?s.return:c[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,c[1])).done)return r;switch(s=0,r&&(c=[2&c[0],r.value]),c[0]){case 0:case 1:r=c;break;case 4:return i.label++,{value:c[1],done:!1};case 5:i.label++,s=c[1],c=[0];continue;case 7:c=i.ops.pop(),i.trys.pop();continue;default:if(!((r=(r=i.trys).length>0&&r[r.length-1])||6!==c[0]&&2!==c[0])){i=0;continue}if(3===c[0]&&(!r||c[1]>r[0]&&c[1]<r[3])){i.label=c[1];break}if(6===c[0]&&i.label<r[1]){i.label=r[1],r=c;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(c);break}r[2]&&i.ops.pop(),i.trys.pop();continue}c=t.call(n,i)}catch(h){c=[6,h],s=0}finally{e=r=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([l,u])}}}var pI=["rightEye","leftEye","noseTip","mouthCenter","rightEarTragion","leftEarTragion"],Z0={modelType:"short",runtime:"mediapipe",maxFaces:1},fY=function(){function n(t){var e=this;this.width=0,this.height=0,this.selfieMode=!1,this.faceDetectorSolution=new pY.FaceDetection({locateFile:function(s,r){return t.solutionPath?t.solutionPath.replace(/\/+$/,"")+"/"+s:r+"/"+s}}),this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode,model:t.modelType}),this.faceDetectorSolution.onResults(function(s){if(e.height=s.image.height,e.width=s.image.width,e.faces=[],null!==s.detections)for(var r=0,o=s.detections;r<o.length;r++){var i=o[r];e.faces.push(e.normalizedToAbsolute(i.landmarks,{xMin:l=(a=i.boundingBox).xCenter-a.width/2,xMax:l+a.width,yMin:u=a.yCenter-a.height/2,yMax:u+a.height,width:a.width,height:a.height}))}var a,l,u})}return n.prototype.normalizedToAbsolute=function(t,e){var s=this;return{keypoints:t.map(function(r,o){return{x:r.x*s.width,y:r.y*s.height,name:pI[o]}}),box:{xMin:e.xMin*this.width,yMin:e.yMin*this.height,xMax:e.xMax*this.width,yMax:e.yMax*this.height,width:e.width*this.width,height:e.height*this.height}}},n.prototype.estimateFaces=function(t,e){return bi(this,void 0,void 0,function(){var s,r;return xi(this,function(o){switch(o.label){case 0:return e&&e.flipHorizontal&&e.flipHorizontal!==this.selfieMode&&(this.selfieMode=e.flipHorizontal,this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode})),t instanceof Mt?(r=ImageData.bind,[4,cg(t)]):[3,2];case 1:return s=new(r.apply(ImageData,[void 0,o.sent(),t.shape[1],t.shape[0]])),[3,3];case 2:s=t,o.label=3;case 3:return[4,this.faceDetectorSolution.send({image:t=s})];case 4:return o.sent(),[2,this.faces]}})})},n.prototype.dispose=function(){this.faceDetectorSolution.close()},n.prototype.reset=function(){this.faceDetectorSolution.reset(),this.width=0,this.height=0,this.faces=null,this.selfieMode=!1},n.prototype.initialize=function(){return this.faceDetectorSolution.initialize()},n}();function mY(n){return bi(this,void 0,void 0,function(){var t,e;return xi(this,function(s){switch(s.label){case 0:return t=function(r){if(null==r)return ua({},Z0);var o=ua({},r);return o.runtime="mediapipe",null==o.modelType&&(o.modelType=Z0.modelType),null==o.maxFaces&&(o.maxFaces=Z0.maxFaces),o}(n),[4,(e=new fY(t)).initialize()];case 1:return s.sent(),[2,e]}})})}function fI(n){return n instanceof Mt?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function mI(n){return n instanceof Mt?n:Qd(n)}function Y0(n,t){E(0!==n.width,function(){return t+" width cannot be 0."}),E(0!==n.height,function(){return t+" height cannot be 0."})}function gI(n){null==n.reduceBoxesInLowestLayer&&(n.reduceBoxesInLowestLayer=!1),null==n.interpolatedScaleAspectRatio&&(n.interpolatedScaleAspectRatio=1),null==n.fixedAnchorSize&&(n.fixedAnchorSize=!1);for(var t=[],e=0;e<n.numLayers;){for(var s=[],r=[],o=[],i=[],a=e;a<n.strides.length&&n.strides[a]===n.strides[e];){var l=yI(n.minScale,n.maxScale,a,n.strides.length);if(0===a&&n.reduceBoxesInLowestLayer)o.push(1),o.push(2),o.push(.5),i.push(.1),i.push(l),i.push(l);else{for(var u=0;u<n.aspectRatios.length;++u)o.push(n.aspectRatios[u]),i.push(l);if(n.interpolatedScaleAspectRatio>0){var c=a===n.strides.length-1?1:yI(n.minScale,n.maxScale,a+1,n.strides.length);i.push(Math.sqrt(l*c)),o.push(n.interpolatedScaleAspectRatio)}}a++}for(var h=0;h<o.length;++h){var d=Math.sqrt(o[h]);s.push(i[h]/d),r.push(i[h]*d)}var p=0,f=0;if(n.featureMapHeight.length>0)p=n.featureMapHeight[e],f=n.featureMapWidth[e];else{var g=n.strides[e];p=Math.ceil(n.inputSizeHeight/g),f=Math.ceil(n.inputSizeWidth/g)}for(var m=0;m<p;++m)for(var y=0;y<f;++y)for(var b=0;b<s.length;++b){var S={xCenter:(y+n.anchorOffsetX)/f,yCenter:(m+n.anchorOffsetY)/p,width:0,height:0};n.fixedAnchorSize?(S.width=1,S.height=1):(S.width=r[b],S.height=s[b]),t.push(S)}e=a}return t}function yI(n,t,e,s){return 1===s?.5*(n+t):n+(t-n)*e/(s-1)}function bI(n,t){var e=t[0],s=t[1];return[e*n[0]+s*n[1]+n[3],e*n[4]+s*n[5]+n[7]]}function yY(n,t,e,s){return bi(this,void 0,void 0,function(){var r,o,i,a,l;return xi(this,function(u){switch(u.label){case 0:return n.sort(function(c,h){return Math.max.apply(Math,h.score)-Math.max.apply(Math,c.score)}),r=ii(n.map(function(c){return[c.locationData.relativeBoundingBox.yMin,c.locationData.relativeBoundingBox.xMin,c.locationData.relativeBoundingBox.yMax,c.locationData.relativeBoundingBox.xMax]})),o=jn(n.map(function(c){return c.score[0]})),[4,ms.nonMaxSuppressionAsync(r,o,t,e)];case 1:return[4,(i=u.sent()).array()];case 2:return a=u.sent(),l=n.filter(function(c,h){return a.indexOf(h)>-1}),ht([r,o,i]),[2,l]}})})}function bY(n,t,e){return bi(this,void 0,void 0,function(){var s,o,i,a;return xi(this,function(l){switch(l.label){case 0:return s=n[0],u=n[1],c=t,h=e,o=q(function(){var d,p,f,g;h.reverseOutputOrder?(p=on(at(u,[0,h.boxCoordOffset+0],[-1,1])),d=on(at(u,[0,h.boxCoordOffset+1],[-1,1])),g=on(at(u,[0,h.boxCoordOffset+2],[-1,1])),f=on(at(u,[0,h.boxCoordOffset+3],[-1,1]))):(d=on(at(u,[0,h.boxCoordOffset+0],[-1,1])),p=on(at(u,[0,h.boxCoordOffset+1],[-1,1])),f=on(at(u,[0,h.boxCoordOffset+2],[-1,1])),g=on(at(u,[0,h.boxCoordOffset+3],[-1,1]))),p=ge(G(Me(p,h.xScale),c.w),c.x),d=ge(G(Me(d,h.yScale),c.h),c.y),h.applyExponentialOnBoxSize?(f=G(_s(Me(f,h.hScale)),c.h),g=G(_s(Me(g,h.wScale)),c.w)):(f=G(Me(f,h.hScale),c.h),g=G(Me(g,h.wScale),c.h));var m=Pe(d,Me(f,2)),y=Pe(p,Me(g,2)),b=ge(d,Me(f,2)),S=ge(p,Me(g,2)),w=Fn([H(m,[h.numBoxes,1]),H(y,[h.numBoxes,1]),H(b,[h.numBoxes,1]),H(S,[h.numBoxes,1])],1);if(h.numKeypoints)for(var I=0;I<h.numKeypoints;++I){var _=h.keypointCoordOffset+I*h.numValuesPerKeypoint,R=void 0,F=void 0;h.reverseOutputOrder?(R=on(at(u,[0,_],[-1,1])),F=on(at(u,[0,_+1],[-1,1]))):(F=on(at(u,[0,_],[-1,1])),R=on(at(u,[0,_+1],[-1,1])));var O=ge(G(Me(R,h.xScale),c.w),c.x),L=ge(G(Me(F,h.yScale),c.h),c.y);w=Fn([w,H(O,[h.numBoxes,1]),H(L,[h.numBoxes,1])],1)}return w}),i=q(function(){var u=s;return e.sigmoidScore?(null!=e.scoreClippingThresh&&(u=Ls(s,-e.scoreClippingThresh,e.scoreClippingThresh)),u=sr(u)):u}),[4,xY(o,i,e)];case 1:return a=l.sent(),ht([o,i]),[2,a]}var u,c,h})})}function xY(n,t,e){return bi(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,h,d,p;return xi(this,function(g){switch(g.label){case 0:return s=[],[4,n.data()];case 1:return r=g.sent(),[4,t.data()];case 2:for(o=g.sent(),i=0;i<e.numBoxes;++i)if(!(null!=e.minScoreThresh&&o[i]<e.minScoreThresh||(a=i*e.numCoords,l=vY(r[a+0],r[a+1],r[a+2],r[a+3],o[i],e.flipVertically,i),(u=l.locationData.relativeBoundingBox).width<0||u.height<0))){if(e.numKeypoints>0)for((c=l.locationData).relativeKeypoints=[],h=e.numKeypoints*e.numValuesPerKeypoint,d=0;d<h;d+=e.numValuesPerKeypoint)c.relativeKeypoints.push({x:r[(p=a+e.keypointCoordOffset+d)+0],y:e.flipVertically?1-r[p+1]:r[p+1]});s.push(l)}return[2,s]}})})}function vY(n,t,e,s,r,o,i){return{score:[r],ind:i,locationData:{relativeBoundingBox:{xMin:t,yMin:o?1-e:n,xMax:s,yMax:o?1-n:e,width:s-t,height:e-n}}}}var lm,wY={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:4,minScale:.1484375,maxScale:.75,inputSizeHeight:128,inputSizeWidth:128,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,16,16],aspectRatios:[1],fixedAnchorSize:!0},SY={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:0,featureMapHeight:[],featureMapWidth:[],numLayers:1,minScale:.1484375,maxScale:.75,inputSizeHeight:192,inputSizeWidth:192,anchorOffsetX:.5,anchorOffsetY:.5,strides:[4],aspectRatios:[1],fixedAnchorSize:!0},J0={runtime:"tfjs",modelType:"short",maxFaces:1,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"},IY={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:896,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:128,yScale:128,hScale:128,wScale:128,minScoreThresh:.5},CY={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2304,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:192,yScale:192,hScale:192,wScale:192,minScoreThresh:.6},NY={outputTensorSize:{width:128,height:128},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},kY={outputTensorSize:{width:192,height:192},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},TY=function(){function n(t,e,s){this.detectorModel=e,this.maxFaces=s,"full"===t?(this.imageToTensorConfig=kY,this.tensorsToDetectionConfig=CY,this.anchors=gI(SY)):(this.imageToTensorConfig=NY,this.tensorsToDetectionConfig=IY,this.anchors=gI(wY));var r=jn(this.anchors.map(function(l){return l.width})),o=jn(this.anchors.map(function(l){return l.height})),i=jn(this.anchors.map(function(l){return l.xCenter})),a=jn(this.anchors.map(function(l){return l.yCenter}));this.anchorTensor={x:i,y:a,w:r,h:o}}return n.prototype.dispose=function(){this.detectorModel.dispose(),ht([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h])},n.prototype.reset=function(){},n.prototype.detectFaces=function(t,e){return void 0===e&&(e=!1),bi(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,h,d,p;return xi(this,function(f){switch(f.label){case 0:return null==t?(this.reset(),[2,[]]):(s=q(function(){var g=Te(mI(t),"float32");return e&&(g=on(ms.flipLeftRight(_n(g,0)),[0])),g}),r=function gY(n,t,e){var d,p,s=t.outputTensorSize,r=t.keepAspectRatio,o=t.borderMode,i=t.outputTensorFloatRange,a=fI(n),l=(d=a,(p=e)?{xCenter:p.xCenter*d.width,yCenter:p.yCenter*d.height,width:p.width*d.width,height:p.height*d.height,rotation:p.rotation}:{xCenter:.5*d.width,yCenter:.5*d.height,width:d.width,height:d.height,rotation:0}),u=function(d,p,f){if(void 0===f&&(f=!1),!f)return{top:0,left:0,right:0,bottom:0};var g=p.height,m=p.width;Y0(p,"targetSize"),Y0(d,"roi");var y,b,S=g/m,w=d.height/d.width,I=0,_=0;return S>w?(y=d.width,b=d.width*S,_=(1-w/S)/2):(y=d.height/S,b=d.height,I=(1-S/w)/2),d.width=y,d.height=b,{top:_,left:I,right:I,bottom:_}}(l,s,r),c=function(d,p,f,g){var m=d.width,y=d.height,S=Math.cos(d.rotation),w=Math.sin(d.rotation),I=d.xCenter,_=d.yCenter,R=1/p,F=1/f,O=new Array(16);return O[0]=m*S*1*R,O[1]=-y*w*R,O[2]=0,O[3]=(-.5*m*S*1+.5*y*w+I)*R,O[4]=m*w*1*F,O[5]=y*S*F,O[6]=0,O[7]=(-.5*y*S-.5*m*w*1+_)*F,O[8]=0,O[9]=0,O[10]=m*R,O[11]=0,O[12]=0,O[13]=0,O[14]=0,O[15]=1,function(L){if(16!==L.length)throw new Error("Array length must be 16 but got "+L.length);return[[L[0],L[1],L[2],L[3]],[L[4],L[5],L[6],L[7]],[L[8],L[9],L[10],L[11]],[L[12],L[13],L[14],L[15]]]}(O)}(l,a.width,a.height),h=q(function(){var m,y,b,d=mI(n),p=ii((m=c,y=a,Y0(b=s,"inputResolution"),[1/b.width*m[0][0]*y.width,1/b.height*m[0][1]*y.width,m[0][3]*y.width,1/b.width*m[1][0]*y.height,1/b.height*m[1][1]*y.height,m[1][3]*y.height,0,0]),[1,8]),f="zero"===o?"constant":"nearest",g=ms.transform(_n(Te(d,"float32")),p,"bilinear",f,0,[s.height,s.width]);return null!=i?function(m,y){var I,R,b={scale:R=(y[1]-(I=y[0]))/255,offset:I-0*R};return q(function(){return ge(G(m,b.scale),b.offset)})}(g,i):g});return{imageTensor:h,padding:u,transformationMatrix:c}}(s,this.imageToTensorConfig),i=r.transformationMatrix,a=this.detectorModel.execute(o=r.imageTensor,"Identity:0"),g=a,l=q(function(){var S,m=(S=g,q(function(){return[at(S,[0,0,0],[1,-1,1]),at(S,[0,0,1],[1,-1,-1])]})),y=m[0];return{boxes:on(m[1]),logits:on(y)}}),[4,bY([c=l.logits,u=l.boxes],this.anchorTensor,this.tensorsToDetectionConfig)]);case 1:return 0===(h=f.sent()).length?(ht([s,o,a,c,u]),[2,h]):[4,yY(h,this.maxFaces,.3)];case 2:return d=f.sent(),p=function(g,m){void 0===g&&(g=[]);var b=[].concat.apply([],m);return g.forEach(function(S){var w=S.locationData;w.relativeKeypoints.forEach(function(L){var j=bI(b,[L.x,L.y]),te=j[1];L.x=j[0],L.y=te});var I=w.relativeBoundingBox,_=Number.MAX_VALUE,R=Number.MAX_VALUE,F=Number.MIN_VALUE,O=Number.MIN_VALUE;[[I.xMin,I.yMin],[I.xMin+I.width,I.yMin],[I.xMin+I.width,I.yMin+I.height],[I.xMin,I.yMin+I.height]].forEach(function(L){var j=bI(b,L),Q=j[0],te=j[1];_=Math.min(_,Q),F=Math.max(F,Q),R=Math.min(R,te),O=Math.max(O,te)}),w.relativeBoundingBox={xMin:_,xMax:F,yMin:R,yMax:O,width:F-_,height:O-R}}),g}(d,i),ht([s,o,a,c,u]),[2,p]}var g})})},n.prototype.estimateFaces=function(t,e){return bi(this,void 0,void 0,function(){var s;return xi(this,function(o){return s=fI(t),[2,this.detectFaces(t,!!e&&e.flipHorizontal).then(function(i){return i.map(function(a){for(var l=a.locationData.relativeKeypoints.map(function(f,g){return ua(ua({},f),{x:f.x*s.width,y:f.y*s.height,name:pI[g]})}),u=a.locationData.relativeBoundingBox,c=0,h=["width","xMax","xMin"];c<h.length;c++)u[h[c]]*=s.width;for(var d=0,p=["height","yMax","yMin"];d<p.length;d++)u[p[d]]*=s.height;return{keypoints:l,box:u}})})]})})},n}();function _Y(n){return bi(this,void 0,void 0,function(){var t,e,s;return xi(this,function(r){switch(r.label){case 0:return t=function(o){if(null==o)return ua({},J0);var i=ua({},o);return null==i.modelType&&(i.modelType=J0.modelType),null==i.maxFaces&&(i.maxFaces=J0.maxFaces),null==i.detectorModelUrl&&(i.detectorModelUrl="full"===i.modelType?"https://tfhub.dev/mediapipe/tfjs-model/face_detection/full/1":"https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"),i}(n),e="string"==typeof t.detectorModelUrl&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,[4,Gp(t.detectorModelUrl,{fromTFHub:e})];case 1:return s=r.sent(),[2,new TY(t.modelType,s,t.maxFaces)]}})})}function EY(n,t){return bi(this,void 0,void 0,function(){var e,s;return xi(this,function(r){if(n===lm.MediaPipeFaceDetector){if(s=void 0,null!=(e=t)){if("tfjs"===e.runtime)return[2,_Y(e)];if("mediapipe"===e.runtime)return[2,mY(e)];s=e.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+s)}throw new Error(n+" is not a supported model name.")})})}function Q0(n){return n.width*n.height}function xI(n){var t=n.xCenter-n.width/2,s=n.yCenter-n.height/2;return{xMin:t,xMax:t+n.width,yMin:s,yMax:s+n.height,width:n.width,height:n.height}}function vI(n){return n instanceof Mt?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function wI(n){return n-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}function SI(n){return n instanceof Mt?n:Qd(n)}function e3(n,t){E(0!==n.width,function(){return t+" width cannot be 0."}),E(0!==n.height,function(){return t+" height cannot be 0."})}function II(n){return{xCenter:n.xMin+n.width/2,yCenter:n.yMin+n.height/2,width:n.width,height:n.height}}function CI(n){var t=n.relativeKeypoints;if(t.length<=1)throw new Error("2 or more keypoints required to calculate a rect.");var e=Number.MAX_VALUE,s=Number.MAX_VALUE,r=Number.MIN_VALUE,o=Number.MIN_VALUE;return t.forEach(function(i){e=Math.min(e,i.x),r=Math.max(r,i.x),s=Math.min(s,i.y),o=Math.max(o,i.y)}),{xCenter:(e+r)/2,yCenter:(s+o)/2,width:r-e,height:o-s}}function NI(n,t,e,s,r){var l,o="rect"===e?function(i,a,l){var u,c=i.locationData;if("boundingbox"===a)u=II(c.boundingBox);else{u=CI(c);var h=l.width,d=l.height;u.xCenter=Math.round(u.xCenter*h),u.yCenter=Math.round(u.yCenter*d),u.width=Math.round(u.width*h),u.height=Math.round(u.height*d)}return u}(n,t,s):(l=n.locationData,"boundingbox"===t?II(l.relativeBoundingBox):CI(l));return r&&(o.rotation=function(i,a,l){var c=i.locationData,h=l.rotationVectorStartKeypointIndex,d=l.rotationVectorEndKeypointIndex;return wI((l.rotationVectorTargetAngle?l.rotationVectorTargetAngle:Math.PI*l.rotationVectorTargetAngleDegree/180)-Math.atan2(-(c.relativeKeypoints[d].y*a.height-c.relativeKeypoints[h].y*a.height),c.relativeKeypoints[d].x*a.width-c.relativeKeypoints[h].x*a.width))}(n,s,r)),o}function FY(n,t,e){for(var s=0;s<t.length;++s){var r=t[s],o=e[n[s]];o.x=r.x,o.y=r.y}}function OY(n,t,e,s){if("string"==typeof t){if("copy"===t)for(var r=0;r<e.length;++r)s[n[r]].z=e[r].z}else{var o=function(i,a){for(var l=0,u=0;u<a.length;++u)l+=i[a[u]].z;return l/a.length}(s,t);for(r=0;r<n.length;++r)s[n[r]].z=o}}function LY(n,t){for(var e=function(a){var l=[].concat.apply([],a.map(function(p){return p.indexesMapping}));if(0===l.length)throw new Error("There should be at least one landmark in indexes mapping");var u=l[0],c=l[0],h=new Set(l);h.forEach(function(p){u=Math.min(u,p),c=Math.max(c,p)});var d=h.size;if(0!==u)throw new Error("Indexes are expected to start with 0 instead of "+u);if(c+1!==d)throw new Error("Indexes should have no gaps but "+(c-d+1)+" indexes are missing");return d}(t),s=new Array(e).fill(null).map(Object),r=0;r<n.length;++r){var o=n[r],i=t[r];if(o.length!==i.indexesMapping.length)throw new Error("There are "+o.length+" refinement landmarks while mapping has "+i.indexesMapping.length);FY(i.indexesMapping,o,s),OY(i.indexesMapping,i.zRefinement,o,s)}return s}function PY(n,t){return n.map(function(e){var s=po(po({},e),{x:e.x*t.width,y:e.y*t.height});return null!=e.z&&(s.z=e.z*t.width),s})}function MY(n,t){return"none"===n?t:1/(1+Math.exp(-t))}function nl(n,t,e,s){return gi(this,void 0,void 0,function(){var o,i,a,l,u,c,h;return yi(this,function(d){switch(d.label){case 0:return e=e||t.flipHorizontally||!1,s=s||t.flipVertically||!1,o=n.size/t.numLandmarks,[4,n.data()];case 1:for(i=d.sent(),a=[],l=0;l<t.numLandmarks;++l)u=l*o,(h={x:0,y:0}).x=e?t.inputImageWidth-i[u]:i[u],o>1&&(h.y=s?t.inputImageHeight-i[u+1]:i[u+1]),o>2&&(h.z=i[u+2]),o>3&&(h.score=MY(t.visibilityActivation,i[u+3])),a.push(h);for(c=0;c<a.length;++c)(h=a[c]).x=h.x/t.inputImageWidth,h.y=h.y/t.inputImageHeight,h.z=h.z/t.inputImageWidth/(t.normalizeZ||1);return[2,a]}})})}function kI(n,t,e){var c,h,s=n.width,r=n.height,o=n.rotation;if(null==e.rotation&&null==e.rotationDegree||(c=o,null!=(h=e).rotation?c+=h.rotation:null!=h.rotationDegree&&(c+=Math.PI*h.rotationDegree/180),o=wI(c)),0===o)n.xCenter=n.xCenter+s*e.shiftX,n.yCenter=n.yCenter+r*e.shiftY;else{var i=(t.width*s*e.shiftX*Math.cos(o)-t.height*r*e.shiftY*Math.sin(o))/t.width,a=(t.width*s*e.shiftX*Math.sin(o)+t.height*r*e.shiftY*Math.cos(o))/t.height;n.xCenter=n.xCenter+i,n.yCenter=n.yCenter+a}if(e.squareLong){var l=Math.max(s*t.width,r*t.height);s=l/t.width,r=l/t.height}else if(e.squareShort){var u=Math.min(s*t.width,r*t.height);s=u/t.width,r=u/t.height}return n.width=s*e.scaleX,n.height=r*e.scaleY,n}(lm||(lm={})).MediaPipeFaceDetector="MediaPipeFaceDetector";var Mu,t3={runtime:"tfjs",maxFaces:1,refineLandmarks:!1,landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/face_mesh/1"},n3={flipHorizontal:!1,staticImageMode:!1},TI={shiftX:0,shiftY:0,scaleX:1.5,scaleY:1.5,squareLong:!0},zY={outputTensorSize:{width:192,height:192},outputTensorFloatRange:[0,1],borderMode:"replicate"},_I={numLandmarks:468,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},BY={numLandmarks:80,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},EI={numLandmarks:71,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},AI={numLandmarks:5,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},VY={indexesMapping:Array.from(Array(468).keys()),zRefinement:"copy"},WY={indexesMapping:[61,146,91,181,84,17,314,405,321,375,291,185,40,39,37,0,267,269,270,409,78,95,88,178,87,14,317,402,318,324,308,191,80,81,82,13,312,311,310,415,76,77,90,180,85,16,315,404,320,307,306,184,74,73,72,11,302,303,304,408,62,96,89,179,86,15,316,403,319,325,292,183,42,41,38,12,268,271,272,407],zRefinement:"none"},UY={indexesMapping:[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],zRefinement:"none"},GY={indexesMapping:[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417],zRefinement:"none"},HY={indexesMapping:[468,469,470,471,472],zRefinement:[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173]},jY={indexesMapping:[473,474,475,476,477],zRefinement:[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398]},KY=function(){function n(t,e,s,r){this.detector=t,this.landmarkModel=e,this.maxFaces=s,this.withAttention=r,this.prevFaceRectsFromLandmarks=null}return n.prototype.estimateFaces=function(t,e){return gi(this,void 0,void 0,function(){var s,r,o,i,a,l,c,h,d,p,f,g,m=this;return yi(this,function(y){switch(y.label){case 0:return s=function(w){if(null==w)return po({},n3);var I=po({},w);return null==I.flipHorizontal&&(I.flipHorizontal=n3.flipHorizontal),null==I.staticImageMode&&(I.staticImageMode=n3.staticImageMode),I}(e),null==t?(this.reset(),[2,[]]):(r=vI(t),o=q(function(){var w=Te(SI(t),"float32");return s.flipHorizontal&&(w=on(ms.flipLeftRight(_n(w,0)),[0])),w}),i=this.prevFaceRectsFromLandmarks,s.staticImageMode||null==i||i.length<this.maxFaces?[4,this.detector.detectFaces(o,!1)]:[3,2]);case 1:return 0===(l=y.sent()).length?(this.reset(),o.dispose(),[2,[]]):(a=l.map(function(w){return m.faceDetectionFrontDetectionToRoi(w,r)}),[3,3]);case 2:a=[],y.label=3;case 3:return S=[],[a,i||[]].forEach(function(w){return w.forEach(function(I){(S=S.filter(function(_){return function AY(n,t){var i,a,e=xI(n),s=xI(t);if((i=e).xMax<(a=s).xMin||a.xMax<i.xMin||i.yMax<a.yMin||a.yMax<i.yMin)return 0;var r=Q0(function(i,a){var l=Math.max(i.xMin,a.xMin),u=Math.min(i.xMax,a.xMax),c=Math.max(i.yMin,a.yMin),h=Math.min(i.yMax,a.yMax);return{xMin:l,xMax:u,yMin:c,yMax:h,width:Math.max(u-l,0),height:Math.max(h-c,0)}}(e,s)),o=Q0(e)+Q0(s)-r;return o>0?r/o:0}(I,_)<=.5})).push(I)})}),[4,Promise.all(S.map(function(w){return m.faceLandmark(w,o)}))];case 4:for(c=y.sent(),h=[],this.prevFaceRectsFromLandmarks=[],d=0;d<c.length;++d)null!=(p=c[d])&&(this.prevFaceRectsFromLandmarks.push(this.faceLandmarksToRoi(p,r)),null!=(f=PY(p,r))&&f.forEach(function(w,I){var _=dI.get(I);null!=_&&(w.name=_)}),g=K0(f),h.push({keypoints:f,box:g.locationData.relativeBoundingBox}));return o.dispose(),[2,h]}var S})})},n.prototype.dispose=function(){this.detector.dispose(),this.landmarkModel.dispose()},n.prototype.reset=function(){this.detector.reset(),this.prevFaceRectsFromLandmarks=null},n.prototype.faceDetectionFrontDetectionToRoi=function(t,e){return kI(NI(t,"boundingbox","normRect",e,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:0}),e,TI)},n.prototype.faceLandmark=function(t,e){return gi(this,void 0,void 0,function(){var s,r,o,i,a,l,u;return yi(this,function(c){switch(c.label){case 0:return s=function DY(n,t,e){var d,p,s=t.outputTensorSize,r=t.keepAspectRatio,o=t.borderMode,i=t.outputTensorFloatRange,a=vI(n),l=(d=a,(p=e)?{xCenter:p.xCenter*d.width,yCenter:p.yCenter*d.height,width:p.width*d.width,height:p.height*d.height,rotation:p.rotation}:{xCenter:.5*d.width,yCenter:.5*d.height,width:d.width,height:d.height,rotation:0}),u=function(d,p,f){if(void 0===f&&(f=!1),!f)return{top:0,left:0,right:0,bottom:0};var g=p.height,m=p.width;e3(p,"targetSize"),e3(d,"roi");var y,b,S=g/m,w=d.height/d.width,I=0,_=0;return S>w?(y=d.width,b=d.width*S,_=(1-w/S)/2):(y=d.height/S,b=d.height,I=(1-S/w)/2),d.width=y,d.height=b,{top:_,left:I,right:I,bottom:_}}(l,s,r),c=function $Y(n,t,e,s){var r=n.width,o=n.height,i=s?-1:1,a=Math.cos(n.rotation),l=Math.sin(n.rotation),u=n.xCenter,c=n.yCenter,h=1/t,d=1/e,p=new Array(16);return p[0]=r*a*i*h,p[1]=-o*l*h,p[2]=0,p[3]=(-.5*r*a*i+.5*o*l+u)*h,p[4]=r*l*i*d,p[5]=o*a*d,p[6]=0,p[7]=(-.5*o*a-.5*r*l*i+c)*d,p[8]=0,p[9]=0,p[10]=r*h,p[11]=0,p[12]=0,p[13]=0,p[14]=0,p[15]=1,function(f){if(16!==f.length)throw new Error("Array length must be 16 but got "+f.length);return[[f[0],f[1],f[2],f[3]],[f[4],f[5],f[6],f[7]],[f[8],f[9],f[10],f[11]],[f[12],f[13],f[14],f[15]]]}(p)}(l,a.width,a.height,!1),h=q(function(){var m,y,b,d=SI(n),p=ii((m=c,y=a,e3(b=s,"inputResolution"),[1/b.width*m[0][0]*y.width,1/b.height*m[0][1]*y.width,m[0][3]*y.width,1/b.width*m[1][0]*y.height,1/b.height*m[1][1]*y.height,m[1][3]*y.height,0,0]),[1,8]),f="zero"===o?"constant":"nearest",g=ms.transform(_n(Te(d,"float32")),p,"bilinear",f,0,[s.height,s.width]);return null!=i?function RY(n,t){var o,u,e={scale:u=(t[1]-(o=t[0]))/255,offset:o-0*u};return q(function(){return ge(G(n,e.scale),e.offset)})}(g,i):g});return{imageTensor:h,padding:u,transformationMatrix:c}}(e,zY,t).imageTensor,r=["output_faceflag"].concat(this.withAttention?["output_mesh_identity","output_lips","Identity_6:0","Identity_1:0","Identity_2:0","Identity_5:0"]:["output_mesh"]),o=this.landmarkModel.execute(s,r),i=o[0],a=o.slice(1),[4,i.data()];case 1:return c.sent()[0]<.5?(ht(o),ht(s),[2,null]):this.withAttention?[4,this.tensorsToFaceLandmarksWithAttention(a)]:[3,3];case 2:return l=c.sent(),[3,5];case 3:return[4,this.tensorsToFaceLandmarks(a)];case 4:l=c.sent(),c.label=5;case 5:return u=function(h,d,p){void 0===p&&(p={ignoreRotation:!1});for(var f=[],g=0,m=h;g<m.length;g++){var y=m[g],b=y.x-.5,S=y.y-.5,w=p.ignoreRotation?0:d.rotation,I=Math.cos(w)*b-Math.sin(w)*S,_=Math.sin(w)*b+Math.cos(w)*S;I=I*d.width+d.xCenter,_=_*d.height+d.yCenter;var R=y.z*d.width,F=po({},y);F.x=I,F.y=_,F.z=R,f.push(F)}return f}(l,t),ht(o),ht(s),[2,u]}})})},n.prototype.tensorsToFaceLandmarks=function(t){return gi(this,void 0,void 0,function(){return yi(this,function(e){return[2,nl(t[0],_I)]})})},n.prototype.tensorsToFaceLandmarksWithAttention=function(t){return gi(this,void 0,void 0,function(){var e,s,r,o,i,a;return yi(this,function(l){switch(l.label){case 0:return[4,nl(t[0],_I)];case 1:return e=l.sent(),[4,nl(t[1],BY)];case 2:return s=l.sent(),[4,nl(t[3],EI)];case 3:return r=l.sent(),[4,nl(t[5],EI)];case 4:return o=l.sent(),[4,nl(t[4],AI)];case 5:return i=l.sent(),[4,nl(t[2],AI)];case 6:return a=l.sent(),[2,LY([e,s,r,o,i,a],[VY,WY,UY,GY,HY,jY])]}})})},n.prototype.faceLandmarksToRoi=function(t,e){return kI(NI(K0(t),"boundingbox","normRect",e,{rotationVectorStartKeypointIndex:33,rotationVectorEndKeypointIndex:263,rotationVectorTargetAngleDegree:0}),e,TI)},n}();function qY(n){return gi(this,void 0,void 0,function(){var t,e,s,r;return yi(this,function(o){switch(o.label){case 0:return t=function(i){if(null==i)return po({},t3);var a=po({},i);return a.runtime="tfjs",null==a.maxFaces&&(a.maxFaces=t3.maxFaces),null==a.refineLandmarks&&(a.refineLandmarks=t3.refineLandmarks),null==a.landmarkModelUrl&&(a.landmarkModelUrl=a.refineLandmarks?"https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/attention_mesh/1":"https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/face_mesh/1"),a}(n),e="string"==typeof t.landmarkModelUrl&&t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Gp(t.landmarkModelUrl,{fromTFHub:e})];case 1:return s=o.sent(),[4,EY(lm.MediaPipeFaceDetector,{modelType:"short",maxFaces:t.maxFaces,detectorModelUrl:t.detectorModelUrl,runtime:t.runtime})];case 2:return r=o.sent(),[2,new KY(r,s,t.maxFaces,t.refineLandmarks)]}})})}(Mu||(Mu={})).MediaPipeFaceMesh="MediaPipeFaceMesh",Object.freeze({__proto__:null,getKeypointIndexByContour:function(n){if(n===Mu.MediaPipeFaceMesh)return hI;throw new Error("Model "+n+" is not supported.")},getAdjacentPairs:function(n){if(n===Mu.MediaPipeFaceMesh)return uY;throw new Error("Model "+n+" is not supported.")}});let ZY=(()=>{var n;class t{constructor(){}loadModel(){return(0,ce.Z)(function*(){return yield function XY(n,t){return gi(this,void 0,void 0,function(){var e,s;return yi(this,function(r){if(n===Mu.MediaPipeFaceMesh){if(s=void 0,null!=(e=t)){if("tfjs"===e.runtime)return[2,qY(e)];if("mediapipe"===e.runtime)return[2,dY(e)];s=e.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+s)}throw new Error(n+" is not a supported model name.")})})}(Mu.MediaPipeFaceMesh,{runtime:"tfjs",refineLandmarks:!0,maxFaces:1})})()}}return(n=t).\u0275fac=function(s){return new(s||n)},n.\u0275prov=he.Yz7({token:n,factory:n.\u0275fac,providedIn:"root"}),t})();const YY=["webcam"],JY=["webcamCanvas"],QY=["imageCanvas"];function eJ(n,t){1&n&&(he.TgZ(0,"span",13),he._uU(1,"Webcam is not supported by your browser"),he.qZA())}function tJ(n,t){if(1&n){const e=he.EpF();he.TgZ(0,"button",14),he.NdJ("click",function(){he.CHM(e);const r=he.oxw();return he.KtG(r.enableCam())}),he._uU(1,"Enable Webcam"),he.qZA()}}function nJ(n,t){1&n&&(he.TgZ(0,"ion-button",15),he._uU(1,"Measure"),he.qZA())}function sJ(n,t){1&n&&(he.TgZ(0,"div",16),he._uU(1,"Loading the Machine Learning model..."),he.qZA())}let rJ=(()=>{var n;class t{constructor(s,r,o){this.renderer=s,this.bodySegmentationService=r,this.faceDetectionService=o,this.viewMode="image",this.sampleImages=["https://cdn.glitch.com/ff4f00ae-20e2-4bdc-8771-2642ee05ae93%2Fjj.jpg?v=1581963497215","https://cdn.glitch.com/ff4f00ae-20e2-4bdc-8771-2642ee05ae93%2Fwalk.jpg?v=1581963497392"],this.previousSegmentationComplete=!0,this.pdmm=0,this.pixelPdDistance=0,this.pixelShoulderWidth=0,this.segmentations=this.sampleImages.map(i=>{}),this.faceDetectionService.loadModel().then(i=>{console.log("Faces",i),this.faces=i})}ngOnInit(){this.setViewMode("webcam"),this.enableCam()}setViewMode(s){this.viewMode=s,this.subscription&&(this.subscription.unsubscribe(),this.subscription=void 0)}onImageClick(s,r){this.segmentations[r]||(this.subscription&&(this.subscription.unsubscribe(),this.subscription=void 0),this.subscription=this.bodySegmentationService.segmentation$.subscribe(o=>{if(!o)return;this.segmentations[r]=o;const i=this.imageCanvas.nativeElement;i.width=o.width,i.height=o.height,this.processSegmentation(i,o)}),this.bodySegmentationService.segmentPersonParts(s.target))}processSegmentation(s,r){const o=function J$(n,t){if(void 0===t&&(t=Y$),Array.isArray(n)&&0===n.length)return null;for(var e,s=(e=Array.isArray(n)?n:[n])[0],r=s.width,o=s.height,i=new Uint8ClampedArray(r*o*4),a=0;a<o*r;++a){var l=4*a;i[l+0]=255,i[l+1]=255,i[l+2]=255,i[l+3]=255;for(var u=0;u<e.length;u++){var c=e[u].data[a];if(-1!==c){var h=t[c];if(!h)throw new Error("No color could be found for part id ".concat(c));i[l+0]=h[0],i[l+1]=h[1],i[l+2]=h[2],i[l+3]=255}}}return new ImageData(i,r,o)}(r);!function Q$(n,t,e,s,r,o){void 0===s&&(s=.7),void 0===r&&(r=0),void 0===o&&(o=!1);var i=di(t),a=i[0],l=i[1];n.width=l,n.height=a;var u=n.getContext("2d");if(u.save(),o&&function sf(n){var t=n.getContext("2d");t.scale(-1,1),t.translate(-n.width,0)}(n),u.drawImage(t,0,0),u.globalAlpha=s,e){!function zb(n,t,e,s){var r=n.width,o=n.height,i=t.width,a=t.height;if(r!==i||o!==a)throw new Error("error: dimensions must match. ".concat(e," has dimensions ").concat(r,"x").concat(o,", ").concat(s," has dimensions ").concat(i,"x").concat(a))}({width:l,height:a},e,"image","mask");var h=gu(function of(n,t){var e=C2(t);return function Z$(n,t){t.width=n.width,t.height=n.height,t.getContext("2d").putImageData(n,0,0)}(n,e),e}(e,so_mask),r,so_blurredMask);u.drawImage(h,0,0,l,a)}u.restore()}(s,s,o,.7,0,!1)}hasGetUserMedia(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)}enableCam(){this.videoRenderCanvas=document.createElement("canvas"),this.videoRenderCanvasCtx=this.videoRenderCanvas.getContext("2d"),navigator.mediaDevices.getUserMedia({video:{width:{ideal:640},height:{ideal:480},facingMode:{ideal:"environment"}}}).then(r=>{const o=this.webcamElement.nativeElement;this.renderer.setProperty(o,"srcObject",r),this.renderer.listen(o,"loadedmetadata",()=>{this.renderer.setProperty(this.webcamCanvasElement.nativeElement,"width",o.videoWidth),this.renderer.setProperty(this.webcamCanvasElement.nativeElement,"height",o.videoHeight),this.videoRenderCanvas.width=o.videoWidth,this.videoRenderCanvas.height=o.videoHeight}),this.subscription=this.bodySegmentationService.segmentation$.subscribe(i=>{if(i.width>0&&this.webcamCanvasElement.nativeElement.width>0){this.processSegmentation(this.webcamCanvasElement.nativeElement,i),this.processFaceDetection(this.webcamElement.nativeElement);let l=this.transformInt32ArrayToGriddedArray(i.data,i.width,i.height),u=this.getIndexesOfMatchingNumbersInGrid(l,[12,13]),c=this.GetBoundingBoxFromArrayCoordinates(u);this.pixelShoulderWidth=c.xMax-c.xMin;let h=this.webcamCanvasElement.nativeElement.getContext("2d");h.strokeStyle="green",h.lineWidth=2,h.strokeRect(c.xMin,c.yMin,c.xMax-c.xMin,c.yMax-c.yMin),this.DrawBlackPixelsAsCoordinates(this.webcamCanvasElement.nativeElement,u),i.allPoses[0].keypoints.forEach(d=>{this.drawDotAndLabel(this.webcamCanvasElement.nativeElement,d.position.x,d.position.y,d.part)}),this.pixelPdDistance=this.getPixelMeasurementBetweenPoints(i.allPoses[0].keypoints[1].position,i.allPoses[0].keypoints[2].position)}this.previousSegmentationComplete=!0}),this.renderer.listen(o,"loadeddata",()=>this.predictWebcam())})}processFaceDetection(s){var r;console.log("Faces",this.faces),null===(r=this.faces)||void 0===r||r.estimateFaces(s).then(o=>{console.log("Preds",o),o.forEach(i=>{i.landmarks.forEach(a=>{this.drawRedDot(s,a[0],a[1])})})})}DrawBlackPixelsAsCoordinates(s,r){if(!s)return;const o=s.getContext("2d");o.fillStyle="black",r.forEach(i=>{o.fillRect(i[0],i[1],1,1)})}predictWebcam(){this.previousSegmentationComplete&&this.webcamCanvasElement&&(this.previousSegmentationComplete=!1,this.videoRenderCanvasCtx.drawImage(this.webcamElement.nativeElement,0,0),this.bodySegmentationService.segmentPersonParts(this.videoRenderCanvas)),window.requestAnimationFrame(this.predictWebcam.bind(this))}handleInitError(s){s.mediaStreamError&&"NotAllowedError"===s.mediaStreamError.name&&console.warn("Camera access was not allowed by user!")}drawRedDot(s,r,o){const i=s.getContext("2d");i.beginPath(),i.arc(r,o,5,0,2*Math.PI),i.fillStyle="red",i.fill()}drawDotAndLabel(s,r,o,i){const a=s.getContext("2d");a.beginPath(),a.arc(r,o,5,0,2*Math.PI),a.fillStyle="red",a.fill(),a.font="15px Arial",a.fillText(i,r+10,o+10)}getPixelMeasurementBetweenPoints(s,r){const o=s.x-r.x,i=s.y-r.y;return Math.sqrt(o*o+i*i)}transformInt32ArrayToGriddedArray(s,r,o){const i=[];for(let a=0;a<o;a++)i.push(s.slice(a*r,(a+1)*r));return i}getIndexesOfMatchingNumbers(s,r){const o=[];for(let i=0;i<s.length;i++)s[i]===r&&o.push(i);return o}getIndexesOfMatchingNumbersInGrid(s,r){const o=[];for(let i=0;i<s.length;i++)for(let a=0;a<s[i].length;a++)r.includes(s[i][a])&&o.push([a,i]);return o}GetBoundingBoxFromArrayCoordinates(s){let r=Number.MAX_VALUE,o=Number.MIN_VALUE,i=Number.MAX_VALUE,a=Number.MIN_VALUE;return s.forEach(l=>{l[0]<r&&(r=l[0]),l[0]>o&&(o=l[0]),l[1]<i&&(i=l[1]),l[1]>a&&(a=l[1])}),{xMin:r,xMax:o,yMin:i,yMax:a}}drawSegmentLines(s,r){const o=s.getContext("2d");o.lineWidth=2,o.strokeStyle="red";for(let i=0;i<r.length;i++){const a=r[i];o.beginPath(),o.moveTo(a.top[0],a.top[1]),o.lineTo(a.bottom[0],a.bottom[1]),o.stroke()}for(let i=0;i<r.length;i++){const a=r[i];o.beginPath(),o.moveTo(a.left[0],a.left[1]),o.lineTo(a.right[0],a.right[1]),o.stroke()}}}return(n=t).\u0275fac=function(s){return new(s||n)(he.Y36(he.Qsj),he.Y36(aY),he.Y36(ZY))},n.\u0275cmp=he.Xpm({type:n,selectors:[["app-body-segmentation"]],viewQuery:function(s,r){if(1&s&&(he.Gf(YY,5,he.SBq),he.Gf(JY,5,he.SBq),he.Gf(QY,5,he.SBq)),2&s){let o;he.iGM(o=he.CRH())&&(r.webcamElement=o.first),he.iGM(o=he.CRH())&&(r.webcamCanvasElement=o.first),he.iGM(o=he.CRH())&&(r.imageCanvas=o)}},decls:24,vars:12,consts:[[1,"w-full","h-full","flex","flex-col","items-center"],["class","text-center text-3xl",4,"ngIf"],["class","btn",3,"click",4,"ngIf"],[1,"webcam","relative","pb-2/3","flex-1"],["autoplay","",1,"object-contain","h-96"],["webcam",""],[1,"overlay","object-contain","h-96"],["webcamCanvas",""],["imageCanvas",""],[1,"flex","justify-center"],["class","btn",4,"ngIf"],["placeholder","PD Measurement (mm)","type","number",3,"ngModel","ngModelChange"],["loading",""],[1,"text-center","text-3xl"],[1,"btn",3,"click"],[1,"btn"],[1,"my-8","text-center","text-3xl"]],template:function(s,r){1&s&&(he.TgZ(0,"div",0),he.YNc(1,eJ,2,0,"span",1),he.YNc(2,tJ,2,0,"button",2),he.TgZ(3,"div",3),he._UZ(4,"video",4,5)(6,"canvas",6,7)(8,"canvas",6,8),he.qZA()(),he.TgZ(10,"div",9),he.YNc(11,nJ,2,0,"ion-button",10),he.qZA(),he.TgZ(12,"div")(13,"ion-input",11),he.NdJ("ngModelChange",function(i){return r.pdmm=i}),he.qZA()(),he.TgZ(14,"div")(15,"ion-label"),he._uU(16),he.ALo(17,"number"),he.qZA()(),he.TgZ(18,"div")(19,"ion-label"),he._uU(20),he.ALo(21,"number"),he.qZA()(),he.YNc(22,sJ,2,0,"ng-template",null,12,he.W1O)),2&s&&(he.xp6(1),he.Q6J("ngIf",!r.hasGetUserMedia()),he.xp6(1),he.Q6J("ngIf",r.hasGetUserMedia()&&!r.videoRenderCanvas),he.xp6(9),he.Q6J("ngIf",r.videoRenderCanvas),he.xp6(2),he.Q6J("ngModel",r.pdmm),he.xp6(3),he.hij("PD Pixels ",he.xi3(17,6,r.pixelPdDistance,"1.2-2")," (pixels)"),he.xp6(4),he.hij("Shoulder Width Pixels",he.xi3(21,9,r.pixelShoulderWidth,"1.2-2")," (pixels)"))},dependencies:[fr.O5,Wu.JJ,Wu.On,Rr.YG,Rr.pK,Rr.Q$,Rr.as,fr.JJ],styles:["[_nghost-%COMP%]{display:flex;flex-direction:column;justify-content:center}.sample-image[_ngcontent-%COMP%]{z-index:0}.sample-image[_ngcontent-%COMP%]:hover   img[_ngcontent-%COMP%]{opacity:.3}.sample-image[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], .webcam[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{transition:.5s ease;opacity:0;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);pointer-events:none}.sample-image[_ngcontent-%COMP%]:hover   span[_ngcontent-%COMP%]{opacity:1}.sample-image[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%], .webcam[_ngcontent-%COMP%]   canvas.overlay[_ngcontent-%COMP%]{opacity:.66;position:absolute;top:0;left:0;z-index:2;width:640px;height:480px}.webcam[_ngcontent-%COMP%]{cursor:pointer}.webcam[_ngcontent-%COMP%]   video[_ngcontent-%COMP%]{clear:both;display:block;width:640px;height:480px}"]}),t})();const oJ=[{path:"",component:(()=>{var n;class t{constructor(){}ngOnInit(){}}return(n=t).\u0275fac=function(s){return new(s||n)},n.\u0275cmp=he.Xpm({type:n,selectors:[["app-scan-page"]],decls:10,vars:2,consts:[[3,"translucent"],[3,"fullscreen"],["collapse","condense"],["size","large"]],template:function(s,r){1&s&&(he.TgZ(0,"ion-header",0)(1,"ion-toolbar")(2,"ion-title"),he._uU(3,"scan-page"),he.qZA()()(),he.TgZ(4,"ion-content",1)(5,"ion-header",2)(6,"ion-toolbar")(7,"ion-title",3),he._uU(8,"scan-page"),he.qZA()()(),he._UZ(9,"app-body-segmentation"),he.qZA()),2&s&&(he.Q6J("translucent",!0),he.xp6(4),he.Q6J("fullscreen",!0))},dependencies:[Rr.W2,Rr.Gu,Rr.wd,Rr.sr,rJ]}),t})()}];let iJ=(()=>{var n;class t{}return(n=t).\u0275fac=function(s){return new(s||n)},n.\u0275mod=he.oAB({type:n}),n.\u0275inj=he.cJS({imports:[Uu.Bz.forChild(oJ),Uu.Bz]}),t})(),hJ=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he.oAB({type:n}),n.\u0275inj=he.cJS({imports:[[fr.ez]]}),n})(),dJ=(()=>{var n;class t{}return(n=t).\u0275fac=function(s){return new(s||n)},n.\u0275mod=he.oAB({type:n}),n.\u0275inj=he.cJS({imports:[fr.ez,Wu.u5,Rr.Pc,iJ,hJ]}),t})()},186:lt=>{lt.exports=Y;var Ot=null;try{Ot=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Y(me,B,ke){this.low=0|me,this.high=0|B,this.unsigned=!!ke}function ut(me){return!0===(me&&me.__isLong__)}Object.defineProperty(Y.prototype,"__isLong__",{value:!0}),Y.isLong=ut;var cn={},Qe={};function yn(me,B){var ke,rt,Bt;return B?(Bt=0<=(me>>>=0)&&me<256)&&(rt=Qe[me])?rt:(ke=Ke(me,(0|me)<0?-1:0,!0),Bt&&(Qe[me]=ke),ke):(Bt=-128<=(me|=0)&&me<128)&&(rt=cn[me])?rt:(ke=Ke(me,me<0?-1:0,!1),Bt&&(cn[me]=ke),ke)}function nt(me,B){if(isNaN(me))return B?$t:Jt;if(B){if(me<0)return $t;if(me>=xe)return qt}else{if(me<=-We)return ft;if(me+1>=We)return _t}return me<0?nt(-me,B).neg():Ke(me%be|0,me/be|0,B)}function Ke(me,B,ke){return new Y(me,B,ke)}Y.fromInt=yn,Y.fromNumber=nt,Y.fromBits=Ke;var wt=Math.pow;function ze(me,B,ke){if(0===me.length)throw Error("empty string");if("NaN"===me||"Infinity"===me||"+Infinity"===me||"-Infinity"===me)return Jt;if("number"==typeof B?(ke=B,B=!1):B=!!B,(ke=ke||10)<2||36<ke)throw RangeError("radix");var rt;if((rt=me.indexOf("-"))>0)throw Error("interior hyphen");if(0===rt)return ze(me.substring(1),B,ke).neg();for(var Bt=nt(wt(ke,8)),Et=Jt,Xt=0;Xt<me.length;Xt+=8){var kn=Math.min(8,me.length-Xt),Tn=parseInt(me.substring(Xt,Xt+kn),ke);if(kn<8){var zn=nt(wt(ke,kn));Et=Et.mul(zn).add(nt(Tn))}else Et=(Et=Et.mul(Bt)).add(nt(Tn))}return Et.unsigned=B,Et}function ee(me,B){return"number"==typeof me?nt(me,B):"string"==typeof me?ze(me,B):Ke(me.low,me.high,"boolean"==typeof B?B:me.unsigned)}Y.fromString=ze,Y.fromValue=ee;var be=4294967296,xe=be*be,We=xe/2,Ge=yn(1<<24),Jt=yn(0);Y.ZERO=Jt;var $t=yn(0,!0);Y.UZERO=$t;var Mn=yn(1);Y.ONE=Mn;var er=yn(1,!0);Y.UONE=er;var ks=yn(-1);Y.NEG_ONE=ks;var _t=Ke(-1,2147483647,!1);Y.MAX_VALUE=_t;var qt=Ke(-1,-1,!0);Y.MAX_UNSIGNED_VALUE=qt;var ft=Ke(0,-2147483648,!1);Y.MIN_VALUE=ft;var we=Y.prototype;we.toInt=function(){return this.unsigned?this.low>>>0:this.low},we.toNumber=function(){return this.unsigned?(this.high>>>0)*be+(this.low>>>0):this.high*be+(this.low>>>0)},we.toString=function(B){if((B=B||10)<2||36<B)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(ft)){var ke=nt(B),rt=this.div(ke),Bt=rt.mul(ke).sub(this);return rt.toString(B)+Bt.toInt().toString(B)}return"-"+this.neg().toString(B)}for(var Et=nt(wt(B,6),this.unsigned),Xt=this,kn="";;){var Tn=Xt.div(Et),rn=(Xt.sub(Tn.mul(Et)).toInt()>>>0).toString(B);if((Xt=Tn).isZero())return rn+kn;for(;rn.length<6;)rn="0"+rn;kn=""+rn+kn}},we.getHighBits=function(){return this.high},we.getHighBitsUnsigned=function(){return this.high>>>0},we.getLowBits=function(){return this.low},we.getLowBitsUnsigned=function(){return this.low>>>0},we.getNumBitsAbs=function(){if(this.isNegative())return this.eq(ft)?64:this.neg().getNumBitsAbs();for(var B=0!=this.high?this.high:this.low,ke=31;ke>0&&!(B&1<<ke);ke--);return 0!=this.high?ke+33:ke+1},we.isZero=function(){return 0===this.high&&0===this.low},we.eqz=we.isZero,we.isNegative=function(){return!this.unsigned&&this.high<0},we.isPositive=function(){return this.unsigned||this.high>=0},we.isOdd=function(){return 1==(1&this.low)},we.isEven=function(){return 0==(1&this.low)},we.equals=function(B){return ut(B)||(B=ee(B)),(this.unsigned===B.unsigned||this.high>>>31!=1||B.high>>>31!=1)&&this.high===B.high&&this.low===B.low},we.eq=we.equals,we.notEquals=function(B){return!this.eq(B)},we.neq=we.notEquals,we.ne=we.notEquals,we.lessThan=function(B){return this.comp(B)<0},we.lt=we.lessThan,we.lessThanOrEqual=function(B){return this.comp(B)<=0},we.lte=we.lessThanOrEqual,we.le=we.lessThanOrEqual,we.greaterThan=function(B){return this.comp(B)>0},we.gt=we.greaterThan,we.greaterThanOrEqual=function(B){return this.comp(B)>=0},we.gte=we.greaterThanOrEqual,we.ge=we.greaterThanOrEqual,we.compare=function(B){if(ut(B)||(B=ee(B)),this.eq(B))return 0;var ke=this.isNegative(),rt=B.isNegative();return ke&&!rt?-1:!ke&&rt?1:this.unsigned?B.high>>>0>this.high>>>0||B.high===this.high&&B.low>>>0>this.low>>>0?-1:1:this.sub(B).isNegative()?-1:1},we.comp=we.compare,we.negate=function(){return!this.unsigned&&this.eq(ft)?ft:this.not().add(Mn)},we.neg=we.negate,we.add=function(B){ut(B)||(B=ee(B));var rn=0,ys=0,Rt=0,us=0;return Rt+=(us+=(65535&this.low)+(65535&B.low))>>>16,ys+=(Rt+=(this.low>>>16)+(B.low>>>16))>>>16,rn+=(ys+=(65535&this.high)+(65535&B.high))>>>16,rn+=(this.high>>>16)+(B.high>>>16),Ke((Rt&=65535)<<16|(us&=65535),(rn&=65535)<<16|(ys&=65535),this.unsigned)},we.subtract=function(B){return ut(B)||(B=ee(B)),this.add(B.neg())},we.sub=we.subtract,we.multiply=function(B){if(this.isZero())return Jt;if(ut(B)||(B=ee(B)),Ot)return Ke(Ot.mul(this.low,this.high,B.low,B.high),Ot.get_high(),this.unsigned);if(B.isZero())return Jt;if(this.eq(ft))return B.isOdd()?ft:Jt;if(B.eq(ft))return this.isOdd()?ft:Jt;if(this.isNegative())return B.isNegative()?this.neg().mul(B.neg()):this.neg().mul(B).neg();if(B.isNegative())return this.mul(B.neg()).neg();if(this.lt(Ge)&&B.lt(Ge))return nt(this.toNumber()*B.toNumber(),this.unsigned);var Bt=65535&this.high,Et=this.low>>>16,Xt=65535&this.low,Tn=65535&B.high,zn=B.low>>>16,rn=65535&B.low,ys=0,Rt=0,us=0,fr=0;return us+=(fr+=Xt*rn)>>>16,Rt+=(us+=Et*rn)>>>16,us&=65535,Rt+=(us+=Xt*zn)>>>16,ys+=(Rt+=Bt*rn)>>>16,Rt&=65535,ys+=(Rt+=Et*zn)>>>16,Rt&=65535,ys+=(Rt+=Xt*Tn)>>>16,ys+=(this.high>>>16)*rn+Bt*zn+Et*Tn+Xt*(B.high>>>16),Ke((us&=65535)<<16|(fr&=65535),(ys&=65535)<<16|(Rt&=65535),this.unsigned)},we.mul=we.multiply,we.divide=function(B){if(ut(B)||(B=ee(B)),B.isZero())throw Error("division by zero");var rt,Bt,Et;if(Ot)return this.unsigned||-2147483648!==this.high||-1!==B.low||-1!==B.high?Ke((this.unsigned?Ot.div_u:Ot.div_s)(this.low,this.high,B.low,B.high),Ot.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?$t:Jt;if(this.unsigned){if(B.unsigned||(B=B.toUnsigned()),B.gt(this))return $t;if(B.gt(this.shru(1)))return er;Et=$t}else{if(this.eq(ft))return B.eq(Mn)||B.eq(ks)?ft:B.eq(ft)?Mn:(rt=this.shr(1).div(B).shl(1)).eq(Jt)?B.isNegative()?Mn:ks:(Bt=this.sub(B.mul(rt)),Et=rt.add(Bt.div(B)));if(B.eq(ft))return this.unsigned?$t:Jt;if(this.isNegative())return B.isNegative()?this.neg().div(B.neg()):this.neg().div(B).neg();if(B.isNegative())return this.div(B.neg()).neg();Et=Jt}for(Bt=this;Bt.gte(B);){rt=Math.max(1,Math.floor(Bt.toNumber()/B.toNumber()));for(var kn=Math.ceil(Math.log(rt)/Math.LN2),Tn=kn<=48?1:wt(2,kn-48),zn=nt(rt),rn=zn.mul(B);rn.isNegative()||rn.gt(Bt);)rn=(zn=nt(rt-=Tn,this.unsigned)).mul(B);zn.isZero()&&(zn=Mn),Et=Et.add(zn),Bt=Bt.sub(rn)}return Et},we.div=we.divide,we.modulo=function(B){return ut(B)||(B=ee(B)),Ot?Ke((this.unsigned?Ot.rem_u:Ot.rem_s)(this.low,this.high,B.low,B.high),Ot.get_high(),this.unsigned):this.sub(this.div(B).mul(B))},we.mod=we.modulo,we.rem=we.modulo,we.not=function(){return Ke(~this.low,~this.high,this.unsigned)},we.and=function(B){return ut(B)||(B=ee(B)),Ke(this.low&B.low,this.high&B.high,this.unsigned)},we.or=function(B){return ut(B)||(B=ee(B)),Ke(this.low|B.low,this.high|B.high,this.unsigned)},we.xor=function(B){return ut(B)||(B=ee(B)),Ke(this.low^B.low,this.high^B.high,this.unsigned)},we.shiftLeft=function(B){return ut(B)&&(B=B.toInt()),0==(B&=63)?this:B<32?Ke(this.low<<B,this.high<<B|this.low>>>32-B,this.unsigned):Ke(0,this.low<<B-32,this.unsigned)},we.shl=we.shiftLeft,we.shiftRight=function(B){return ut(B)&&(B=B.toInt()),0==(B&=63)?this:B<32?Ke(this.low>>>B|this.high<<32-B,this.high>>B,this.unsigned):Ke(this.high>>B-32,this.high>=0?0:-1,this.unsigned)},we.shr=we.shiftRight,we.shiftRightUnsigned=function(B){if(ut(B)&&(B=B.toInt()),0==(B&=63))return this;var ke=this.high;return B<32?Ke(this.low>>>B|ke<<32-B,ke>>>B,this.unsigned):Ke(32===B?ke:ke>>>B-32,0,this.unsigned)},we.shru=we.shiftRightUnsigned,we.shr_u=we.shiftRightUnsigned,we.toSigned=function(){return this.unsigned?Ke(this.low,this.high,!1):this},we.toUnsigned=function(){return this.unsigned?this:Ke(this.low,this.high,!0)},we.toBytes=function(B){return B?this.toBytesLE():this.toBytesBE()},we.toBytesLE=function(){var B=this.high,ke=this.low;return[255&ke,ke>>>8&255,ke>>>16&255,ke>>>24,255&B,B>>>8&255,B>>>16&255,B>>>24]},we.toBytesBE=function(){var B=this.high,ke=this.low;return[B>>>24,B>>>16&255,B>>>8&255,255&B,ke>>>24,ke>>>16&255,ke>>>8&255,255&ke]},Y.fromBytes=function(B,ke,rt){return rt?Y.fromBytesLE(B,ke):Y.fromBytesBE(B,ke)},Y.fromBytesLE=function(B,ke){return new Y(B[0]|B[1]<<8|B[2]<<16|B[3]<<24,B[4]|B[5]<<8|B[6]<<16|B[7]<<24,ke)},Y.fromBytesBE=function(B,ke){return new Y(B[4]<<24|B[5]<<16|B[6]<<8|B[7],B[0]<<24|B[1]<<16|B[2]<<8|B[3],ke)}},9128:(lt,Ot,Y)=>{var ut=Y(9864),cn=Y(3919),Qe=Y(3263),yn=Y(5353),nt=Y(3358),Ke=Y(3789),wt=Y(2508);wt.alea=ut,wt.xor128=cn,wt.xorwow=Qe,wt.xorshift7=yn,wt.xor4096=nt,wt.tychei=Ke,lt.exports=wt},9864:function(lt,Ot,Y){var ut;!function(cn,Qe,yn){function nt(ee){var Ne=this,Re=function ze(){var ee=4022871197;return function(Re){Re=String(Re);for(var be=0;be<Re.length;be++){var xe=.02519603282416938*(ee+=Re.charCodeAt(be));xe-=ee=xe>>>0,ee=(xe*=ee)>>>0,ee+=4294967296*(xe-=ee)}return 2.3283064365386963e-10*(ee>>>0)}}();Ne.next=function(){var be=2091639*Ne.s0+2.3283064365386963e-10*Ne.c;return Ne.s0=Ne.s1,Ne.s1=Ne.s2,Ne.s2=be-(Ne.c=0|be)},Ne.c=1,Ne.s0=Re(" "),Ne.s1=Re(" "),Ne.s2=Re(" "),Ne.s0-=Re(ee),Ne.s0<0&&(Ne.s0+=1),Ne.s1-=Re(ee),Ne.s1<0&&(Ne.s1+=1),Ne.s2-=Re(ee),Ne.s2<0&&(Ne.s2+=1),Re=null}function Ke(ee,Ne){return Ne.c=ee.c,Ne.s0=ee.s0,Ne.s1=ee.s1,Ne.s2=ee.s2,Ne}function wt(ee,Ne){var Re=new nt(ee),be=Ne&&Ne.state,xe=Re.next;return xe.int32=function(){return 4294967296*Re.next()|0},xe.double=function(){return xe()+11102230246251565e-32*(2097152*xe()|0)},xe.quick=xe,be&&("object"==typeof be&&Ke(be,Re),xe.state=function(){return Ke(Re,{})}),xe}Qe&&Qe.exports?Qe.exports=wt:Y.amdD&&Y.amdO?void 0!==(ut=function(){return wt}.call(Ot,Y,Ot,Qe))&&(Qe.exports=ut):this.alea=wt}(0,lt=Y.nmd(lt))},3789:function(lt,Ot,Y){var ut;!function(cn,Qe,yn){function nt(ze){var ee=this,Ne="";ee.next=function(){var be=ee.b,xe=ee.c,We=ee.d,Ge=ee.a;return be=be<<25^be>>>7^xe,xe=xe-We|0,We=We<<24^We>>>8^Ge,Ge=Ge-be|0,ee.b=be=be<<20^be>>>12^xe,ee.c=xe=xe-We|0,ee.d=We<<16^xe>>>16^Ge,ee.a=Ge-be|0},ee.a=0,ee.b=0,ee.c=-1640531527,ee.d=1367130551,ze===Math.floor(ze)?(ee.a=ze/4294967296|0,ee.b=0|ze):Ne+=ze;for(var Re=0;Re<Ne.length+20;Re++)ee.b^=0|Ne.charCodeAt(Re),ee.next()}function Ke(ze,ee){return ee.a=ze.a,ee.b=ze.b,ee.c=ze.c,ee.d=ze.d,ee}function wt(ze,ee){var Ne=new nt(ze),Re=ee&&ee.state,be=function(){return(Ne.next()>>>0)/4294967296};return be.double=function(){do{var Ge=((Ne.next()>>>11)+(Ne.next()>>>0)/4294967296)/(1<<21)}while(0===Ge);return Ge},be.int32=Ne.next,be.quick=be,Re&&("object"==typeof Re&&Ke(Re,Ne),be.state=function(){return Ke(Ne,{})}),be}Qe&&Qe.exports?Qe.exports=wt:Y.amdD&&Y.amdO?void 0!==(ut=function(){return wt}.call(Ot,Y,Ot,Qe))&&(Qe.exports=ut):this.tychei=wt}(0,lt=Y.nmd(lt))},3919:function(lt,Ot,Y){var ut;!function(cn,Qe,yn){function nt(ze){var ee=this,Ne="";ee.x=0,ee.y=0,ee.z=0,ee.w=0,ee.next=function(){var be=ee.x^ee.x<<11;return ee.x=ee.y,ee.y=ee.z,ee.z=ee.w,ee.w^=ee.w>>>19^be^be>>>8},ze===(0|ze)?ee.x=ze:Ne+=ze;for(var Re=0;Re<Ne.length+64;Re++)ee.x^=0|Ne.charCodeAt(Re),ee.next()}function Ke(ze,ee){return ee.x=ze.x,ee.y=ze.y,ee.z=ze.z,ee.w=ze.w,ee}function wt(ze,ee){var Ne=new nt(ze),Re=ee&&ee.state,be=function(){return(Ne.next()>>>0)/4294967296};return be.double=function(){do{var Ge=((Ne.next()>>>11)+(Ne.next()>>>0)/4294967296)/(1<<21)}while(0===Ge);return Ge},be.int32=Ne.next,be.quick=be,Re&&("object"==typeof Re&&Ke(Re,Ne),be.state=function(){return Ke(Ne,{})}),be}Qe&&Qe.exports?Qe.exports=wt:Y.amdD&&Y.amdO?void 0!==(ut=function(){return wt}.call(Ot,Y,Ot,Qe))&&(Qe.exports=ut):this.xor128=wt}(0,lt=Y.nmd(lt))},3358:function(lt,Ot,Y){var ut;!function(cn,Qe,yn){function nt(ze){var ee=this;ee.next=function(){var We,Ge,Re=ee.w,be=ee.X,xe=ee.i;return ee.w=Re=Re+1640531527|0,Ge=be[xe+34&127],We=be[xe=xe+1&127],Ge^=Ge<<13,We^=We<<17,Ge=be[xe]=(Ge^=Ge>>>15)^(We^=We>>>12),ee.i=xe,Ge+(Re^Re>>>16)|0},function Ne(Re,be){var xe,We,Ge,Jt,$t,Mn=[],er=128;for(be===(0|be)?(We=be,be=null):(be+="\0",We=0,er=Math.max(er,be.length)),Ge=0,Jt=-32;Jt<er;++Jt)be&&(We^=be.charCodeAt((Jt+32)%be.length)),0===Jt&&($t=We),We^=We<<10,We^=We>>>15,We^=We<<4,We^=We>>>13,Jt>=0&&(Ge=0==(xe=Mn[127&Jt]^=We+($t=$t+1640531527|0))?Ge+1:0);for(Ge>=128&&(Mn[127&(be&&be.length||0)]=-1),Ge=127,Jt=512;Jt>0;--Jt)We=Mn[Ge+34&127],xe=Mn[Ge=Ge+1&127],We^=We<<13,xe^=xe<<17,Mn[Ge]=(We^=We>>>15)^(xe^=xe>>>12);Re.w=$t,Re.X=Mn,Re.i=Ge}(ee,ze)}function Ke(ze,ee){return ee.i=ze.i,ee.w=ze.w,ee.X=ze.X.slice(),ee}function wt(ze,ee){null==ze&&(ze=+new Date);var Ne=new nt(ze),Re=ee&&ee.state,be=function(){return(Ne.next()>>>0)/4294967296};return be.double=function(){do{var Ge=((Ne.next()>>>11)+(Ne.next()>>>0)/4294967296)/(1<<21)}while(0===Ge);return Ge},be.int32=Ne.next,be.quick=be,Re&&(Re.X&&Ke(Re,Ne),be.state=function(){return Ke(Ne,{})}),be}Qe&&Qe.exports?Qe.exports=wt:Y.amdD&&Y.amdO?void 0!==(ut=function(){return wt}.call(Ot,Y,Ot,Qe))&&(Qe.exports=ut):this.xor4096=wt}(0,lt=Y.nmd(lt))},5353:function(lt,Ot,Y){var ut;!function(cn,Qe,yn){function nt(ze){var ee=this;ee.next=function(){var xe,We,Re=ee.x,be=ee.i;return xe=Re[be],We=(xe^=xe>>>7)^xe<<24,We^=(xe=Re[be+1&7])^xe>>>10,We^=(xe=Re[be+3&7])^xe>>>3,We^=(xe=Re[be+4&7])^xe<<7,xe=Re[be+7&7],Re[be]=We^=(xe^=xe<<13)^xe<<9,ee.i=be+1&7,We},function Ne(Re,be){var xe,Ge=[];if(be===(0|be))Ge[0]=be;else for(be=""+be,xe=0;xe<be.length;++xe)Ge[7&xe]=Ge[7&xe]<<15^be.charCodeAt(xe)+Ge[xe+1&7]<<13;for(;Ge.length<8;)Ge.push(0);for(xe=0;xe<8&&0===Ge[xe];++xe);for(8==xe&&(Ge[7]=-1),Re.x=Ge,Re.i=0,xe=256;xe>0;--xe)Re.next()}(ee,ze)}function Ke(ze,ee){return ee.x=ze.x.slice(),ee.i=ze.i,ee}function wt(ze,ee){null==ze&&(ze=+new Date);var Ne=new nt(ze),Re=ee&&ee.state,be=function(){return(Ne.next()>>>0)/4294967296};return be.double=function(){do{var Ge=((Ne.next()>>>11)+(Ne.next()>>>0)/4294967296)/(1<<21)}while(0===Ge);return Ge},be.int32=Ne.next,be.quick=be,Re&&(Re.x&&Ke(Re,Ne),be.state=function(){return Ke(Ne,{})}),be}Qe&&Qe.exports?Qe.exports=wt:Y.amdD&&Y.amdO?void 0!==(ut=function(){return wt}.call(Ot,Y,Ot,Qe))&&(Qe.exports=ut):this.xorshift7=wt}(0,lt=Y.nmd(lt))},3263:function(lt,Ot,Y){var ut;!function(cn,Qe,yn){function nt(ze){var ee=this,Ne="";ee.next=function(){var be=ee.x^ee.x>>>2;return ee.x=ee.y,ee.y=ee.z,ee.z=ee.w,ee.w=ee.v,(ee.d=ee.d+362437|0)+(ee.v=ee.v^ee.v<<4^be^be<<1)|0},ee.x=0,ee.y=0,ee.z=0,ee.w=0,ee.v=0,ze===(0|ze)?ee.x=ze:Ne+=ze;for(var Re=0;Re<Ne.length+64;Re++)ee.x^=0|Ne.charCodeAt(Re),Re==Ne.length&&(ee.d=ee.x<<10^ee.x>>>4),ee.next()}function Ke(ze,ee){return ee.x=ze.x,ee.y=ze.y,ee.z=ze.z,ee.w=ze.w,ee.v=ze.v,ee.d=ze.d,ee}function wt(ze,ee){var Ne=new nt(ze),Re=ee&&ee.state,be=function(){return(Ne.next()>>>0)/4294967296};return be.double=function(){do{var Ge=((Ne.next()>>>11)+(Ne.next()>>>0)/4294967296)/(1<<21)}while(0===Ge);return Ge},be.int32=Ne.next,be.quick=be,Re&&("object"==typeof Re&&Ke(Re,Ne),be.state=function(){return Ke(Ne,{})}),be}Qe&&Qe.exports?Qe.exports=wt:Y.amdD&&Y.amdO?void 0!==(ut=function(){return wt}.call(Ot,Y,Ot,Qe))&&(Qe.exports=ut):this.xorwow=wt}(0,lt=Y.nmd(lt))},2508:function(lt,Ot,Y){var ut;!function(cn,Qe,yn){var xe,nt=256,ee=yn.pow(nt,6),Ne=yn.pow(2,52),Re=2*Ne,be=nt-1;function We(_t,qt,ft){var we=[],me=Mn($t((qt=1==qt?{entropy:!0}:qt||{}).entropy?[_t,ks(Qe)]:null==_t?function er(){try{var _t;return xe&&(_t=xe.randomBytes)?_t=_t(nt):(_t=new Uint8Array(nt),(cn.crypto||cn.msCrypto).getRandomValues(_t)),ks(_t)}catch{var qt=cn.navigator,ft=qt&&qt.plugins;return[+new Date,cn,ft,cn.screen,ks(Qe)]}}():_t,3),we),B=new Ge(we),ke=function(){for(var rt=B.g(6),Bt=ee,Et=0;rt<Ne;)rt=(rt+Et)*nt,Bt*=nt,Et=B.g(1);for(;rt>=Re;)rt/=2,Bt/=2,Et>>>=1;return(rt+Et)/Bt};return ke.int32=function(){return 0|B.g(4)},ke.quick=function(){return B.g(4)/4294967296},ke.double=ke,Mn(ks(B.S),Qe),(qt.pass||ft||function(rt,Bt,Et,Xt){return Xt&&(Xt.S&&Jt(Xt,B),rt.state=function(){return Jt(B,{})}),Et?(yn.random=rt,Bt):rt})(ke,me,"global"in qt?qt.global:this==yn,qt.state)}function Ge(_t){var qt,ft=_t.length,we=this,me=0,B=we.i=we.j=0,ke=we.S=[];for(ft||(_t=[ft++]);me<nt;)ke[me]=me++;for(me=0;me<nt;me++)ke[me]=ke[B=be&B+_t[me%ft]+(qt=ke[me])],ke[B]=qt;(we.g=function(rt){for(var Bt,Et=0,Xt=we.i,kn=we.j,Tn=we.S;rt--;)Bt=Tn[Xt=be&Xt+1],Et=Et*nt+Tn[be&(Tn[Xt]=Tn[kn=be&kn+Bt])+(Tn[kn]=Bt)];return we.i=Xt,we.j=kn,Et})(nt)}function Jt(_t,qt){return qt.i=_t.i,qt.j=_t.j,qt.S=_t.S.slice(),qt}function $t(_t,qt){var me,ft=[],we=typeof _t;if(qt&&"object"==we)for(me in _t)try{ft.push($t(_t[me],qt-1))}catch{}return ft.length?ft:"string"==we?_t:_t+"\0"}function Mn(_t,qt){for(var we,ft=_t+"",me=0;me<ft.length;)qt[be&me]=be&(we^=19*qt[be&me])+ft.charCodeAt(me++);return ks(qt)}function ks(_t){return String.fromCharCode.apply(0,_t)}if(Mn(yn.random(),Qe),lt.exports){lt.exports=We;try{xe=Y(5042)}catch{}}else void 0!==(ut=function(){return We}.call(Ot,Y,Ot,lt))&&(lt.exports=ut)}(typeof self<"u"?self:this,[],Math)},5410:()=>{},8628:()=>{},1601:()=>{},7792:()=>{},4977:()=>{},5042:()=>{}}]);